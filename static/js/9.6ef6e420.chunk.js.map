{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js","../../../../../src/.internal/charts/Legend.ts","../../../../../src/.internal/charts/axes/AxisBreak.ts","../../../../../src/.internal/charts/axes/Axis.ts","../../../../../src/.internal/charts/axes/AxisLine.ts","../../../../../src/.internal/charts/axes/AxisFill.ts","../../../../../src/.internal/charts/axes/Grid.ts","../../../../../src/.internal/charts/axes/AxisLabel.ts","../../../../../src/.internal/charts/elements/Tick.ts","../../../../../src/.internal/charts/axes/AxisTick.ts","../../../../../src/.internal/charts/axes/AxisRenderer.ts","../../../../../src/.internal/charts/axes/AxisBullet.ts","../../../../../src/.internal/charts/axes/AxisRendererY.ts","../../../../../src/.internal/charts/axes/ValueAxisBreak.ts","../../../../../src/.internal/charts/axes/ValueAxis.ts","../../../../../src/.internal/charts/axes/AxisRendererX.ts","../../../../../src/.internal/charts/elements/HeatLegend.ts","../../../../../src/.internal/core/elements/Grip.ts","../../../../../src/.internal/charts/Chart.ts","../../../../../src/.internal/charts/elements/Bullet.ts","../../../../../src/.internal/charts/series/Series.ts","../../../../../src/.internal/charts/types/SerialChart.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/cartesian.js","../../../../../src/.internal/charts/map/MapSeries.ts","../../../../../src/.internal/charts/map/MapObject.ts","../../../../../src/.internal/charts/map/MapImage.ts","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../../../../../src/.internal/charts/map/MapUtils.ts","../../../../../src/.internal/charts/map/MapPolygon.ts","../../../../../src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/distance.js","../../../../../src/.internal/charts/map/projections/Projection.ts","../../../../../src/.internal/charts/map/SmallMap.ts","../../../../../src/.internal/charts/map/Geo.ts","../../../../../src/.internal/charts/map/MapLineObject.ts","../../../../../src/.internal/charts/map/MapImageSeries.ts","../../../../../src/.internal/charts/map/MapLine.ts","../../../../../src/.internal/charts/map/MapLineSeries.ts","../../../../../src/.internal/charts/map/Graticule.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../../../../../src/.internal/charts/map/GraticuleSeries.ts","../../../../../src/.internal/charts/types/MapChart.ts","../../../../../src/.internal/charts/map/MapSpline.ts","../../../../../src/.internal/charts/map/MapArc.ts","../../../../../src/.internal/charts/map/MapSplineSeries.ts","../../../../../src/.internal/charts/map/MapArcSeries.ts","../../../../../src/.internal/charts/map/ZoomControl.ts","../node_modules/d3-geo/src/projection/mercator.js","../../../../../src/.internal/charts/map/projections/Mercator.ts","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/miller.js","../../../../../src/.internal/charts/map/projections/Miller.ts","../node_modules/d3-geo-projection/src/eckert6.js","../../../../../src/.internal/charts/map/projections/Eckert6.ts","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/orthographic.js","../../../../../src/.internal/charts/map/projections/Orthographic.ts","../node_modules/d3-geo/src/projection/stereographic.js","../../../../../src/.internal/charts/map/projections/Stereographic.ts","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../../../../../src/.internal/charts/map/projections/Albers.ts","../node_modules/d3-geo/src/projection/albersUsa.js","../../../../../src/.internal/charts/map/projections/AlbersUSA.ts","../node_modules/d3-geo/src/projection/naturalEarth1.js","../../../../../src/.internal/charts/map/projections/NaturalEarth1.ts","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../../../../../src/.internal/charts/map/projections/AzimuthalEqualArea.ts","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/centroid.js","../../../../../src/.internal/charts/map/projections/EqualEarth.ts","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/transverseMercator.js"],"names":["module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_unsupportedIterableToArray","o","minLen","n","Array","from","test","_arrayLikeToArray","arr","len","arr2","Queue","require","polylabel","polygon","precision","debug","minX","minY","maxX","maxY","p","width","height","cellSize","Math","min","h","degeneratePoleOfInaccessibility","distance","cellQueue","compareMax","x","y","Cell","bestCell","area","points","j","a","b","f","getCentroidCell","bboxCell","d","numProbes","cell","console","log","round","max","poleOfInaccessibility","inside","minDistSq","Infinity","k","ring","getSegDistSq","sqrt","pointToPolygonDist","SQRT2","px","py","dx","dy","t","default","TinyQueue","data","compare","defaultCompare","_down","item","_up","top","bottom","pos","parent","current","halfLength","left","best","right","childrenCreated","className","applyTheme","_label","component","labels","addSprite","_disposers","itemContainer","Disposer","removeValue","properties","color","setProperty","_valueLabel","valueLabels","_itemContainer","itemContainers","togglable","events","on","ev","toggleDataItem","target","dataItem","focusable","focusedItem","dataContext","uidAttr","readerControls","readerLabelledBy","sprite","DataItem","Sprite","isDisposed","visibilitychanged","readerChecked","visible","disableType","isActive","enableType","addDisposer","dataItems","remove","_marker","markers","createMarker","layout","setPropertyValue","Container","applyOnClones","padding","margin","clickable","role","cursorOverStyle","Mouse","pointer","background","fillOpacity","List","template","body","isKey","event","isEnabled","dispatchImmediately","interfaceColors","InterfaceColorSet","marker","interactionsEnabled","setStateOnChildren","strokeOpacity","propertyFields","fill","valign","disabledColor","getFor","activeState","newValue","states","stroke","rectangle","createChild","RoundedRectangle","label","Label","text","truncate","fullWords","valueLabel","align","textAlign","position","handleScrollbar","applyInternalDefaults","readerTitle","language","translate","createDataItem","validateDataElements","scrollbar","start","end","validateDataElement","container","legendDataItem","tempMaxWidth","maxWidth","Percent","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","setState","afterDraw","getPropertyValue","maxLabelWidth","each","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","scrollable","measuredHeight","pixelWidth","contentHeight","thumb","paddingRight","updateMasks","contentAlign","maxColumns","invalidate","Scrollbar","isMeasured","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","dispose","shift","ds","delta","pixelY","maskRectangle","isHiding","isHidden","colorOrig","hidden","show","svgContainer","readerAlert","locale","hide","handleDataItemPropertyChange","Component","registeredClasses","relevant","Responsive","widthXS","stateId","heightXS","isXS","disabled","_axis","breakSize","marginRight","marginTop","marginBottom","fillShape","WavedLine","zIndex","_fillShape","startLine","_startLine","endLine","_endLine","addBreakSprite","get","axis","set","renderer","gridContainer","createBreakSprites","breakTemplate","axisBreaks","copyFrom","invalidateSeries","positionToPoint","startPosition","endPosition","draw","updateBreakElement","AxisItemLocation","_grid","isRange","axisRanges","grid","clone","shouldClone","sprites","_tick","tick","ticks","virtualParent","_axisFill","axisFill","isTemplate","axisFills","_text","_mask","_contents","contents","mask","createFill","_axisBreak","axisBreak","appendChildren","appendDataItem","hasProperty","prop","source","bullet","minPosition","maxPosition","setVisibility","noChangeValues","_bullet","_gridCount","_series","autoDispose","_axisItemCount","Axis","hideTooltipWhileZooming","minWidth","minHeight","toggleZoomOutButton","zoomable","title","_dataItemsIterator","createNewItems","tooltip","Tooltip","pointerLength","fitPointerToBounds","filters","clear","cornerRadius","strokeWidth","readerHidden","series","preventShow","fillRule","index","opacity","invalidateLayout","ghostLabel","updateLabelElement","updateGridCount","gridCount","axisLength","minGridDistance","clearCache","validateLayout","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","initRenderer","above","bulletsContainer","updateGridContainer","validateAxisRanges","axisRange","validateBreaks","_axisBreaks","processBreak","breakContainer","registerSeries","moveValue","createMask","_renderer","chart","positionToAngle","pointToPosition","point","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","angle","hideTooltip","duration","_tooltipPosition","showTooltipAtPosition","local","_tooltip","toAxisPosition","tooltipContainer","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","tooltipLocation2","startPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","globalPoint","line","getTooltipText","delayedPointTo","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","fixDoc","setBounds","roundPosition","location","axisLocation","_axisRanges","processAxisRange","SortedList","createAxisBreak","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","stackKey","range","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","difference","startValue","endValue","adjustedEndValue","intersection","isInBreak","fixAxisBreaks","update","firstAxisBreak","first","getPositionLabel","_chart","createSeriesRange","resetIterators","processConfig","config","map","hasKey","getKey","configOrder","setDisabled","changed","_title","maybeXS","element","paper","add","pixelPerfect","invalidateDataItems","fillPath","path","measure","setPath","attr","nonScalingStroke","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","inited","invalidateAxisItems","baseGrid","disposers","setAxis","bind","processRenderer","positionItem","moveTo","position2","getHeight","pixelHeight","getWidth","coordinateToPosition","coordinate","coordinate2","updateGridElement","updateTickElement","updateBullet","updateFillElement","toggleVisibility","updatedStart","updatedEnd","_axisFills","createGrid","_ticks","createTick","_labels","createLabel","opposite","verticalCenter","inversedPosition","relativePositionSprite","innerHeight","rotation","toBack","toFront","bbx","bbw","bbh","pixelPaddingTop","pixelPaddingBottom","y1","y2","abs","w","tickLength","pixelX","basePoint","horizontalCenter","deltaX","x1","x2","wavedRectangle","WavedRectangle","setWavedSides","widthS","valueToPosition","setValue","_stepDecimalPlaces","_prevStepDecimalPlaces","_adjustLabelPrecision","_baseValue","_adjustedStart","_adjustedEnd","_extremesChanged","_deltaMinMax","_dsc","calculateTotals","axisFieldName","Number","MAX_VALUE","keepSelection","includeRangesInMinMax","step","_start","_end","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","getIndex","startIndex","endIndex","total","sum","excludeFromTotal","workingValue","setCalculatedValue","getMinMax","calculateZoom","validateAxisElements","positionToValue","differece","minMaxStep","adjustMinMax","stepDecimalPlaces","syncWithAxis","calculated","getCache","_step","fixSmallStep","minZoomed","logarithmic","LOG10E","pow","floor","maxZoomed","precisionChanged","find","formatLabel","currentText","oldValue","stepPower","decCount","adjustedMin","adjustedMax","adjustedStep","itemIndex","fillEndPosition","adjustLabelPrecision","numberFormatter","format","baseValue","_adapterO","apply","valueToPoint","_difference","treatZeroAs","invalidateLabels","breakStartPosition","breakEndPosition","breakStartValue","breakEndValue","E","xToValue","yToValue","animateMinMax","animate","property","to","rangeChangeDuration","rangeChangeEasing","POSITIVE_INFINITY","NEGATIVE_INFINITY","ignoreMinMax","seriesMin","seriesMax","minValue","maxValue","raiseCriticalError","_minReal","_maxReal","dif","fixMin","fixMax","exponent","power","extraMin","extraMax","strict","strictMinMax","animation","_minMaxAnimation","isFinished","_finalMax","_finalMin","validateDataItems","handleSelectionExtremesChange","strictMode","initialMin","initialMax","extra","ceil","stepDivisor","maxPrecision","minCount","maxCount","handleExtremesChange","selectionMin","selectionMax","allHidden","outOfRange","seriesSelectionMin","seriesSelectionMax","minMaxStep2","syncAxes","declination","setCache","zoom","getWorkingValue","stack","getValue","extraTooltipPrecision","valueStr","zoomToValues","skipRangeEvent","instantly","axisBreakDif","axisBreakGridCount","breakMinMaxStep","showTooltipAt","once","count","currentCount","synced","c","diff","omin","omax","ostep","checkSync","processingErrors","xAxis","bby","deltaY","maxHeight","pixelPaddingRight","pixelPaddingLeft","pixelMarginTop","pixelMarginBottom","innerWidth","heightXXS","markerContainer","markerCount","getMinFromRules","heatRules","heatRule","getMaxFromRules","valueAxis","reverseOrder","minColor","maxColor","seriesFill","Color","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","gradient","LinearGradient","addColor","strokeGradient","rgb","setColorProperty","_valueAxis","dataField","dataFieldDefined","updateMinMax","low","high","cs","icon","autoHideDelay","_autoHideTimeout","setTimeout","Button","_legend","Chart","titles","chartAndLegendContainer","chartContainer","showOnInit","processTitle","updateReaderTitleReferences","defaultState","transitionDuration","fixLayout","legend","feedLegend","uid","setSVGAttribute","join","removeSVGAttribute","setLegend","removeChildren","_dragGrip","touch","paddingLeft","paddingTop","paddingBottom","widthXXS","tooltipX","tooltipY","copyToLegendMarker","_bullets","Dictionary","bullets","_ignoreMinMax","_showBullets","LegendSettings","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","usePercentHack","simplifiedProcessing","Series","minBulletDistance","mainContainer","_shouldBeReady","hiddenState","transitionEasing","autoSetClassName","setClassName","positionBullet","processBullet","itemsFocusable","removeBullet","eachBullet","processValues","getFirstValue","getActualWorkingValue","getAbsoluteFirstValue","rangeChangeUpdate","working","prevValue","ksum","percent","children","updateTooltipBounds","topParent","rect","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","setKey","itemReaderText","xField","yField","isDynamic","deepInvalidate","populateString","hoverable","itemWidth","itemHeight","handleDataItemWorkingValueChange","dataRangeInvalid","invalidateProcessedData","rangesContainer","getAxisField","xPosition","yPosition","invalidateRawData","readerText","_itemReaderText","tooltipText","tooltipHTML","_legendDataItem","notRange","itemLabelText","labelText","e","modal","content","adapter","message","closable","suppressErrors","open","verbose","applyFilters","filter","_heatRules","foundSprite","clonedFrom","anySprite","child","anyChild","ruleTarget","propertyField","rule","parts","split","listitem","maybeIndex","match","maybeColorOrPercent","colors","ColorSet","_usesData","seriesContainer","patterns","createSeries","handleSeriesAdded","handleSeriesRemoved","dataUsers","dataUser","di","_dataUsers","handleSeriesAdded2","handleLegendSeriesAdded","hiddenInLegend","addData","dataInvalid","reinit","_data","dataFields","appear","_createForOfIteratorHelper","isArray","unsupportedIterableToArray","F","s","_e","it","normalCompletion","didErr","_e2","Adder","_partials","Float64Array","_n","hi","lo","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","hypot","sin","sign","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","v","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","feature","merged","deltaMax","sort","NaN","_east","_west","_south","_north","updateExtremes","getFeature","bounds","west","south","north","east","ignoreBounds","showInViewport","checkInclude","includes","excludes","id","indexOf","invalidateData","processIncExc","handleObjectAdded","mapObject","_geodata","geodata","reverseGeodata","processReverseGeodata","madeFromGeoData","splice","disposeData","_dataSources","getDataSource","removeDispose","loadData","setDataSourceEvents","getFeatures","_mapObjects","dispatch","_northDefined","_southDefined","_westDefined","_eastDefined","window","JSON","parse","asIs","field","showTooltip","res","showTooltipOn","has","handleTooltipMove","setDataItem","applyAccessibility","latitude","geoPoint","longitude","validatePosition","projection","d3Projection","d3Path","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","center","constant","circle","arguments","r","_","multiPolygonToGeo","multiPolygon","surface","hole","geoArea","multiPointToGeo","multiLineToGeo","multiLine","pointToGeo","multiGeoToPoint","geoPoints","geoToPoint","multiGeoLineToMultiLine","multiGeoLine","segment","multiGeoPolygonToMultipolygon","multiGeoPolygon","geoPolygon","getCircle","getBackground","stepLong","stepLat","ln","ll","lt","pathGenerator","calculateVisualCenter","biggestArea","biggestPolygon","_visualLongitude","_visualLatitude","measureElement","getTooltipX","convert","visualLongitude","visualLatitude","getTooltipY","_mapPolygon","mapPolygons","_polygon","_multiPolygon","_geoPolygon","_multiGeoPolygon","validateData","useGeodata","geoJSON","geodataNames","include","exclude","dataObject","mapPolygon","sortPolygonsBy","sortPolygonsReversed","valA","valB","dirA","dirB","boxArea","_mapPolygons","polygonTemplate","getPolygonById","_dataItem","lines","m","rejoin","concat","Intersection","other","segments","compareIntersection","startInside","interpolate","subject","clip","p1","pointEqual","link","isSubject","array","winding","point0","sinPhi1","cosPhi1","point1","absDelta","arc","phiArc","flatten","arrays","merge","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","point2","clipRectangle","x0","y0","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","ax","ay","methods","transformer","TransformStream","fit","fitBounds","clipExtent","scale","geoStream","fitExtent","extent","fitSize","size","fitWidth","fitHeight","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","dx2","dy2","dz","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","transformRotate","clipAngle","clipCircle","reflectX","reflectY","equirectangularRaw","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","_circle","projectionStream","contextStream","pathArea","pathMeasure","pathBounds","pathCentroid","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","lengthLineEnd","cosDelta","_d3Projection","_d3Path","invalidateProjection","unproject","deltaLongitude","deltaLatitude","unrotate","intermediatePoint","pointA","pointB","multiDistance","positionToGeoPoint","intermediatePointA","intermediatePointB","pa","pb","totalDistance","currentDistance","positionA","positionB","positionAB","percentHeight","percentWidth","moveToPosition","updateMapSize","Rectangle","contains","newSeries","rectPoint","spritePoint","seriesPointToGeo","zoomToGeoPoint","zoomLevel","updateRectangle","scaleRatio","bbox","group","node","getBBox","normalizePoint","wrapAngleTo180","latitude180","normalizeMultiline","multiline","adjustRotation","mapLine","shortestDistance","_mapImage","mapImages","_geoPoint","multiPoint","multiGeoPoint","_parseDataFrom","mapImage","_mapImages","getImageById","_imageListeners","createLine","Polyline","images","handleImagesToConnect","isReady","imagesToConnect","image","img","disposer","convertedPoints","convertedSegmentPoints","slen","_arrow","lineObjects","handleGlobalScale","_lineObjects","handleLineObjectAdded","mapLineObject","arrow","triangle","Triangle","_mapLine","mapLines","_multiLine","_multiGeoLine","_geoLine","geoLine","_mapLines","lineTemplate","getLineById","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","longitudeStep","latitudeStep","singleSprite","lineStrings","lineString","zoomDuration","zoomEasing","minZoomLevel","maxZoomLevel","_prevZoomGeoPoint","maxPanOut","homeZoomLevel","zoomStep","centerMapOnZoomOut","backgroundSeries","handleAllInited","inert","resizable","handleMapTransform","handleDoubleHit","handleDrag","dragWhileResize","previousWidth","previousHeight","updateCenterGeoPoint","_mapAnimation","updateScaleRatio","_zoomGeoPointReal","chartContainerBg","dragStart","interactions","downPointers","dragStop","handleMapDown","inertia","inertias","hasFocused","getEventKey","_zoomControl","isFocused","pan","mouseWheelBehavior","interaction","handlePanDown","handlePanUp","panSprite","Circle","handlePanMove","panBehavior","svgPoint","htmlContainer","_downPointOrig","_downDeltaLongitude","_downDeltaLatitude","isResized","areTransformed","dln","dlt","dlg","downGeoLocal","geoLocal","goHome","updateZoomGeoPoint","seriesPoint","maxLeft","maxRight","maxTop","maxBottom","seriesMaxLeft","seriesMaxRight","seriesMaxTop","seriesMaxBottom","seriesWidth","seriesHeight","_centerGeoPoint","ww","hh","zoomGeoPoint","cssScale","svgPointToGeo","zoomIn","mouseOptions","sensitivity","zoomOut","wheelable","draggable","_backgroundSeries","foundGraticule","deltaLong","deltaLat","initialScale","invalidateDataUsers","_fitWidth","_fitHeight","hScale","vScale","geoPointToSVG","geoPointToSeries","mapPoint","zoomToMapObject","polygonPoint","zoomToRectangle","level","splitLongitude","newLong","_prevZoomLevel","_smallMap","smallMap","zoomControl","plusButton","exportable","minusButton","rotateMap","createClassInstance","homeGeoPoint","centerGeoPoint","setPaper","hideOverflow","setTapToActivate","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","asFunction","hasLicense","commercialLicense","licenses","Polyspline","tensionX","tensionY","Polyarc","slider","handleBackgroundClick","updateThumbSize","handleThumbDrag","readerLive","maxPower","LN2","minPower","updateThumb","stepCount","isDown","createBackground","mercatorRaw","mercatorProjection","reclip","SQRT1_2","millerRaw","eckert6Raw","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","orthographicRaw","stereographicRaw","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","streams","multiplex","naturalEarth1Raw","phi4","azimuthalEqualAreaRaw","cxcy","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","W0","W1","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","azimuthalEquidistantRaw","tany","conicConformalRaw","fy","conicEquidistantRaw","g","gy","nx","gnomonicRaw","sa","tx","ty","kx","ky","transverseMercatorRaw"],"mappings":"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","file":"static/js/9.6ef6e420.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../core/utils/Color\";\r\nimport { RadialGradient } from \"../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../core/rendering/fills/Pattern\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../core/Sprite\";\r\nimport { Disposer, IDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic colorOrig: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element.\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Main color of legend data item.\r\n\t *\r\n\t * This is set by the target element this legend item represents, like\r\n\t * a Series or a Slice.\r\n\t *\r\n\t * It can be used to derive a color in legend's sub-items, like label:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"legend\": {\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"text\": \"[{color}]{name}[/]\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n\t * @param value  Main color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Main color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element for \"value label\".\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to the main [[Container]] that holds legend item's elements:\r\n\t * marker and labels.\r\n\t *\r\n\t * @return Item container\r\n\t */\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet itemContainer = component.itemContainers.create();\r\n\t\t\titemContainer.parent = component;\r\n\t\t\t\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\t// Add click/tap event to toggle item\r\n\t\t\tif (itemContainer.togglable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\tcomponent.toggleDataItem(<this>ev.target.dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t\t// for keyboard toggling\r\n\t\t\tif (itemContainer.focusable) {\r\n\t\t\t\titemContainer.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t// We need this here in order to reset focused item when it is clicked\r\n\t\t\t\t\t// normally so that it is not toggled by ENTER afterwards\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = <this>ev.target.dataItem;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n\t\t\t\tconst visibilitychanged = function(ev: AMEvent<Sprite | DataItem, ISpriteEvents & IDataItemEvents>[\"visibilitychanged\"]) {\r\n\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] that holds legend item's marker element.\r\n\t *\r\n\t * @return Marker\r\n\t */\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t */\r\n\tposition?: LegendPosition;\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\r\n\tpublic scrollbar: Scrollbar;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"scrollable\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(8, 0, 8, 0);\r\n\t\titemContainer.margin(0, 10, 0, 10);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"switch\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tconst focusedItem = this.focusedItem;\r\n\t\t\t\tconst target = focusedItem.itemContainer;\r\n\t\t\t\tif (target.togglable) {\r\n\t\t\t\t\tthis.toggleDataItem(focusedItem);\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\ttarget.dispatchImmediately(\"hit\", { event: ev });\r\n\r\n\t\t\t\t\t// We need this here because \"hit\" event resets `this.focusedItem`\r\n\t\t\t\t\t// And we need it here\r\n\t\t\t\t\tthis.focusedItem = focusedItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.fullWords = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.on(\"layoutvalidated\", this.handleScrollbar, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.scrollbar.start = 0;\r\n\t\t\tthis.scrollbar.end = 1;\r\n\t\t}\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\r\n\t\t$utils.used(dataItem.label);\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet tempMaxWidth = dataItem.label.maxWidth;\r\n\t\tif(!(dataItem.label.width instanceof Percent)){\r\n\t\t\tdataItem.label.width = undefined;\t\r\n\t\t}\r\n\t\t\r\n\t\tif (tempMaxWidth > 0) {\r\n\t\t\tdataItem.label.maxWidth = tempMaxWidth;\r\n\t\t}\r\n\t\tif (valueLabel.align == \"right\") {\r\n\t\t\tvalueLabel.width = undefined;\r\n\t\t}\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\tif (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.markers.template.propertyFields.fill = undefined;\r\n\t\t}\r\n\r\n\t\tif (dataContext.updateLegendValue) {\r\n\t\t\tdataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n\t\t}\r\n\r\n\t\tif (dataContext.component && dataContext.component.updateLegendValue) {\r\n\t\t\tdataContext.component.updateLegendValue(dataContext);\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\r\n\t\tcontainer.isActive = !visible;\r\n\t\tif (container.isActive) {\r\n\t\t\tcontainer.setState(\"active\", 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontainer.setState(\"default\", 0);\r\n\t\t}\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\r\n\tpublic afterDraw() {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\t\tlet maxLabelWidth = 0;\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.maxWidth = undefined;\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n\t\t\t\tmaxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet maxValueLabelWidth = 0;\r\n\t\tthis.valueLabels.each((label) => {\r\n\t\t\tif (label.invalid) {\t\t\t\t\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n\t\t\t\tmaxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet maxMarkerWidth = 0;\r\n\t\tthis.markers.each((marker) => {\r\n\t\t\tif (marker.invalid) {\r\n\t\t\t\tmarker.validate();\r\n\t\t\t}\r\n\t\t\tif (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n\t\t\t\tmaxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet itemContainer = this.itemContainers.template;\r\n\t\tlet margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n\t\tlet maxAdjustedLabelWidth: number;\r\n\t\tlet trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tmaxAdjustedLabelWidth = maxLabelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxWidth = maxWidth - margin;\r\n\t\t\tif (maxWidth > trueMaxWidth) {\r\n\t\t\t\tmaxWidth = trueMaxWidth;\r\n\t\t\t}\r\n\t\t\tmaxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n\t\t}\r\n\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n\t\t\t\tif(!(label.width instanceof Percent)){\r\n\t\t\t\t\tlabel.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n\t\t\t\t\tlabel.maxWidth = label.width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (this.valueLabels.template.align == \"right\") {\r\n\t\t\tthis.valueLabels.each((valueLabel) => {\r\n\t\t\t\tvalueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsuper.afterDraw();\r\n\t}\r\n\r\n\r\n\tprotected handleScrollbar() {\r\n\t\tlet scrollbar = this.scrollbar;\r\n\t\tif (this.scrollable && scrollbar) {\r\n\t\t\tscrollbar.height = this.measuredHeight;\r\n\t\t\tscrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n\r\n\t\t\tif (this.contentHeight > this.measuredHeight) {\r\n\t\t\t\tscrollbar.visible = true;\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + + scrollbar.pixelMarginRight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMasks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 5, 10, 10);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.contentAlign = \"none\";\r\n\t\t\t\tthis.valueLabels.template.align = \"right\";\r\n\r\n\t\t\t\tif (!$type.isNumber(this.maxColumns)) {\r\n\t\t\t\t\tthis.maxColumns = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.width = undefined;\r\n\t\t\t\tthis.maxWidth = 220;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.maxColumns = undefined;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.align = \"left\";\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `false` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * If set to `true`, all markers will be shown as squares, regardless of te\r\n\t * series type.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * Please note that `maxHeight` is automatically set for Legend when its\r\n\t * `position` is set to `\"left\"` or `\"right\"`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t * @param  value  Legend Scrollable?\r\n\t */\r\n\tpublic set scrollable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"scrollable\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tlet scrollbar = this.createChild(Scrollbar);\r\n\t\t\t\tthis.scrollbar = scrollbar;\r\n\t\t\t\tscrollbar.isMeasured = false;\r\n\t\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\t\tscrollbar.endGrip.__disabled = true;\r\n\t\t\t\tscrollbar.startGrip.__disabled = true;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.marginLeft = 5;\r\n\r\n\t\t\t\tthis._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\r\n\t\t\t\tthis._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t\tif (this.scrollbar) {\r\n\t\t\t\t\t\tthis.scrollbar.dispose();\r\n\t\t\t\t\t\tthis.scrollbar = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling of legend.\r\n\t *\r\n\t * @param  event  Event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]): void {\r\n\t\tlet shift = event.shift.y;\r\n\t\tlet scrollbar = this.scrollbar\r\n\t\tif (scrollbar) {\r\n\t\t\tlet ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n\t\t\tlet delta = scrollbar.end - scrollbar.start;\r\n\t\t\tif (shift > 0) {\r\n\t\t\t\tscrollbar.start = $math.max(0, scrollbar.start - ds);\r\n\t\t\t\tscrollbar.end = scrollbar.start + delta;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.end = $math.min(1, scrollbar.end - ds);\r\n\t\t\t\tscrollbar.start = scrollbar.end - delta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMasks(): void {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.itemContainers.each((itemContainer) => {\r\n\t\t\t\titemContainer.dy = -this.scrollbar.thumb.pixelY * this.contentHeight / this.measuredHeight;\r\n\t\t\t\titemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: this.measuredWidth, height: this.measuredHeight }\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend Scrollable?\r\n\t */\r\n\tpublic get scrollable(): boolean {\r\n\t\treturn this.getPropertyValue(\"scrollable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.color = item.colorOrig;\r\n\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n\t\t\titem.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tdataItem.valueLabel.invalidate();\r\n\t\tdataItem.label.invalidate();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"bottom\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"right\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Axis break module\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { IWavedShape } from \"../../core/defs/IWavedShape\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t */\r\n\tbreakSize?: number;\r\n\r\n\t/**\r\n\t * Starting value.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * End value.\r\n\t */\r\n\tendValue?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines [[AxisBreak]] adapters.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBreakAdapters extends IContainerAdapters, IAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBreak extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: Axis;\r\n\r\n\t/**\r\n\t * Reference to parent Axis.\r\n\t */\r\n\tprotected _axis = new MutableValueDisposer<this[\"_axisType\"]>();\r\n\r\n\t/**\r\n\t * A reference to starting line element.\r\n\t */\r\n\tprotected _startLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to ending line element.\r\n\t */\r\n\tprotected _endLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to fill shape.\r\n\t */\r\n\tprotected _fillShape: IWavedShape;\r\n\r\n\t/**\r\n\t * A list of axis data items which fall within this break.\r\n\t */\r\n\tpublic dataItems: List<AxisDataItem> = new List<AxisDataItem>();\r\n\r\n\t/**\r\n\t * Adjusted start value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedStartValue: number;\r\n\r\n\t/**\r\n\t * Adjusted end value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedEndValue: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisBreak\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.breakSize = 0.01;\r\n\t\tthis.marginLeft = -5;\r\n\t\tthis.marginRight = -5;\r\n\t\tthis.marginTop = -5;\r\n\t\tthis.marginBottom = -5;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create elements\r\n\t\t// (these won't be used actually, just for setting properties)\r\n\t\tlet fillShape = new WavedLine();\r\n\t\tfillShape.fill = interfaceColors.getFor(\"background\");\r\n\t\tfillShape.stroke = color();\r\n\t\tfillShape.fillOpacity = 0.9;\r\n\t\tfillShape.zIndex = 0;\r\n\t\tthis._fillShape = fillShape;\r\n\r\n\t\tlet startLine = new WavedLine();\r\n\t\tstartLine.fill = color();\r\n\t\tstartLine.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tstartLine.strokeOpacity = 0.3;\r\n\t\tstartLine.zIndex = 1;\r\n\t\tthis._startLine = startLine;\r\n\r\n\t\tlet endLine = new WavedLine();\r\n\t\tendLine.fill = color();\r\n\t\tendLine.stroke = color(\"#000000\");// interfaceColors.getFor(\"grid\");\r\n\t\tendLine.strokeOpacity = 0.3;\r\n\t\tendLine.zIndex = 2;\r\n\t\tthis._endLine = endLine;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the starting line of the break.\r\n\t *\r\n\t * @param sprite  Element\r\n\t */\r\n\tpublic set startLine(sprite: IWavedShape) {\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\t\tthis._startLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get startLine(): IWavedShape {\r\n\t\treturn this._startLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the end line of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set endLine(sprite: IWavedShape) {\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t\tthis._endLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get endLine(): IWavedShape {\r\n\t\treturn this._endLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for fill of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set fillShape(sprite: IWavedShape) {\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tthis._fillShape = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get fillShape(): IWavedShape {\r\n\t\treturn this._fillShape;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a break element (e.g. lines, fill) to the break, which is\r\n\t * [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite Element to add\r\n\t */\r\n\tpublic addBreakSprite(sprite: IWavedShape) {\r\n\t\tsprite.parent = this;\r\n\t\tsprite.isMeasured = false;\r\n\t\tthis._disposers.push(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis this Break is associated with.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: this[\"_axisType\"]) {\r\n\t\tif (this._axis.get() !== axis) {\r\n\t\t\tthis._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n\t\t\taxis.renderer.createBreakSprites(this);\r\n\r\n\t\t\t// this can't go to copyFrom, as axis is set later\r\n\t\t\tlet breakTemplate: AxisBreak = axis.axisBreaks.template;\r\n\r\n\t\t\tthis.startLine.copyFrom(breakTemplate.startLine);\r\n\t\t\tthis.endLine.copyFrom(breakTemplate.endLine);\r\n\t\t\tthis.fillShape.copyFrom(breakTemplate.fillShape);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): this[\"_axisType\"] {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @param value  Relative axis break\r\n\t */\r\n\tpublic set breakSize(value: number) {\r\n\t\tif (this.setPropertyValue(\"breakSize\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative axis break\r\n\t */\r\n\tpublic get breakSize(): number {\r\n\t\treturn this.getPropertyValue(\"breakSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's start.\r\n\t *\r\n\t * @return Start point\r\n\t */\r\n\tpublic get startPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.startPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's end.\r\n\t *\r\n\t * @return End point\r\n\t */\r\n\tpublic get endPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.endPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break starts.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break ends.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\t\trenderer.updateBreakElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A starting value for the break.\r\n\t *\r\n\t * @param value  Starting value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Starting value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\treturn this.getPropertyValue(\"startValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An end value for the break.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.getPropertyValue(\"endValue\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n","/**\r\n * Base class for all Axis\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem, IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\n\r\n// Charts\r\nimport { Chart } from \"../Chart\";\r\n\r\n// Series\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\n\r\n// Elements\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { PointedRectangle } from \"../../core/elements/PointedRectangle\";\r\n\r\n// Types\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n// Utils\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class AxisDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Reference to a related [[Grid]] element.\r\n\t */\r\n\tprotected _grid: Grid;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisTick]] element.\r\n\t */\r\n\tprotected _tick: AxisTick;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisLabel]] element.\r\n\t */\r\n\tprotected _label: AxisLabel;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisFill]] element.\r\n\t */\r\n\tprotected _axisFill: AxisFill;\r\n\r\n\t/**\r\n\t * A mask for axis. We're using [[AxisFill]] since the mask, basically, has\r\n\t * the same shape and features.\r\n\t */\r\n\tprotected _mask: AxisFill;\r\n\r\n\t/**\r\n\t * Container which might be used to hold some extra items, like series\r\n\t * segments when data item is used for axis range.\r\n\t */\r\n\tprotected _contents: Container;\r\n\r\n\t/**\r\n\t * A text to be used as label for this data item.\r\n\t */\r\n\tprotected _text: string;\r\n\r\n\t/**\r\n\t * Holds a physical position of the grid line associated with this data item,\r\n\t * so that it can be used when measuring distance between points, and hiding\r\n\t * some of them so they don't overlap.\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * If the data item is within an existing [[AxisBreak]] this property will\r\n\t * hold a reference to that [[AxisBreak]].\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Axis;\r\n\r\n\t/**\r\n\t * Used to distinguish from real data points and those data items that are\r\n\t * used for ranges, like `series.axisRanges` or `axis.axisRanges`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isRange: boolean;\r\n\r\n\t/**\r\n\t * relative position of data item on axis\r\n\t */\r\n\tpublic position: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullet: Sprite;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * beginning than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `minLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t *     \"dataItems\": {\r\n\t *       \"minPosition\": 0.2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic minPosition?: number;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * end than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `maxLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis end.\r\n\t *     \"dataItems\": {\r\n\t *       \"maxPosition\": 0.8\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic maxPosition?: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Actual index of the axis data item.\r\n\t * \r\n\t * @since 4.7.8\r\n\t */\r\n\tpublic itemIndex: number;\r\n\r\n\t/**\r\n\t * A [[Grid]] element associated with this data item.\r\n\t *\r\n\t * If there is no grid element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param grid  Grid element\r\n\t */\r\n\tpublic set grid(grid: Grid) {\r\n\t\tif (this._grid && this._grid != grid) {\r\n\t\t\t$array.remove(this.sprites, this._grid);\r\n\t\t\tthis._grid.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (grid) {\r\n\t\t\tif (grid.dataItem && grid.dataItem != this) {\r\n\t\t\t\t$array.remove(grid.dataItem.sprites, grid);\r\n\t\t\t\tgrid.dataItem.grid = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(grid);\r\n\t\t}\r\n\t\tthis._grid = grid;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grid element\r\n\t */\r\n\tpublic get grid(): Grid {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: Grid;\r\n\t\t\t\tlet grid: Grid;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.grid;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.grid.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = component.renderer.grid.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.grid.removeValue(grid);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.grid = grid;\r\n\t\t\t\tgrid.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(grid);\r\n\t\t\t\tgrid.axis = this.component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisTick]] element associated with this data item.\r\n\t *\r\n\t * If there is no tick element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param tick  Tick element\r\n\t */\r\n\tpublic set tick(tick: AxisTick) {\r\n\t\tif (this._tick && this._tick != tick) {\r\n\t\t\t$array.remove(this.sprites, this._tick);\r\n\t\t\tthis._tick.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (tick) {\r\n\t\t\tif (tick.dataItem && tick.dataItem != this) {\r\n\t\t\t\t$array.remove(tick.dataItem.sprites, tick);\r\n\t\t\t\ttick.dataItem.tick = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(tick);\r\n\t\t}\r\n\t\tthis._tick = tick;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): AxisTick {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisTick;\r\n\t\t\t\tlet tick: AxisTick;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.tick;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.ticks.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = component.renderer.ticks.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.ticks.removeValue(tick);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick = tick;\r\n\t\t\t\ttick.axis = this.component;\r\n\t\t\t\ttick.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(tick);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisLabel]] element associated with this data item.\r\n\t *\r\n\t * If there is no label element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set label(label: AxisLabel) {\r\n\t\tif (this._label && this._label != label) {\r\n\t\t\t$array.remove(this.sprites, this._label);\r\n\t\t\tthis._label.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (label) {\r\n\t\t\tif (label.dataItem && label.dataItem != this) {\r\n\t\t\t\t$array.remove(label.dataItem.sprites, label);\r\n\t\t\t\tlabel.dataItem.label = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): AxisLabel {\r\n\t\tif (!this._label) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisLabel;\r\n\t\t\t\tlet label: AxisLabel;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.label;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.labels.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = component.renderer.labels.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.labels.removeValue(label);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(label);\r\n\t\t\t\tthis.label = label;\r\n\t\t\t\tlabel.shouldClone = false;\r\n\t\t\t\tlabel.axis = this.component;\r\n\t\t\t\tlabel.virtualParent = component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisFill]] associated element with this data item.\r\n\t *\r\n\t * If there is no fill element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set axisFill(axisFill: AxisFill) {\r\n\t\tif (this._axisFill && this._axisFill != axisFill) {\r\n\t\t\t$array.remove(this.sprites, this._axisFill);\r\n\t\t\tthis._axisFill.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.dataItem && axisFill.dataItem != this) {\r\n\t\t\t\t$array.remove(axisFill.dataItem.sprites, axisFill);\r\n\t\t\t\taxisFill.dataItem.axisFill = undefined;\r\n\t\t\t}\r\n\t\t\taxisFill.axis = this.component;\r\n\t\t\tthis.addSprite(axisFill);\r\n\t\t}\r\n\t\tthis._axisFill = axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get axisFill(): AxisFill {\r\n\t\tif (!this._axisFill) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisFill;\r\n\t\t\t\tlet axisFill: AxisFill;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.axisFill;\r\n\t\t\t\t\tif (!this.isTemplate && template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.axisFills.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = component.renderer.axisFills.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.axisFills.removeValue(axisFill);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.axisFill = axisFill;\r\n\t\t\t\taxisFill.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(axisFill);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * Text to be used as data item's label.\r\n\t *\r\n\t * @param text Text label\r\n\t */\r\n\tpublic set text(text: string) {\r\n\t\tthis._text = text;\r\n\t\tif (this._label) { // do not use getter, it will create unwanted instances!\r\n\t\t\tthis._label.text = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text label\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * Data item's mask.\r\n\t *\r\n\t * @return Mask\r\n\t */\r\n\tpublic get mask(): AxisFill {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Container]] to place all visual elements, related to data item\r\n\t * in.\r\n\t *\r\n\t * If there is no Container, a new one is created.\r\n\t *\r\n\t * @return Contents container\r\n\t */\r\n\tpublic get contents(): Container {\r\n\t\tif (!this._contents) {\r\n\t\t\tlet contents = new Container();\r\n\t\t\tthis.addSprite(contents);\r\n\t\t\tcontents.isMeasured = false;\r\n\t\t\tthis._contents = contents;\r\n\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet mask: AxisFill = component.renderer.createFill(this.component);\r\n\t\t\t\tmask.disabled = false;\r\n\t\t\t\tmask.axis = component;\r\n\t\t\t\tthis.addSprite(mask);\r\n\t\t\t\tthis._mask = mask;\r\n\t\t\t\tcontents.mask = mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._contents;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisBreak]] this data item falls within.\r\n\t *\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic set axisBreak(axisBreak: this[\"_axisBreak\"]) {\r\n\t\tif (this._axisBreak) {\r\n\t\t\tthis._axisBreak.dataItems.removeValue(this);\r\n\t\t}\r\n\t\tif (axisBreak) {\r\n\t\t\taxisBreak.dataItems.push(this);\r\n\t\t}\r\n\t\tthis._axisBreak = axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis break\r\n\t */\r\n\tpublic get axisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn this._axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.validateDataElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends data item's elements to the parent [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendChildren() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.appendDataItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data item has particular property set.\r\n\t *\r\n\t * @param prop  Property name\r\n\t * @return Property set?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop == \"component\" ? true : super.hasProperty(prop);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[AxisDataItem]].\r\n\t *\r\n\t * @param source Source AxisDataItem\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.text = source.text;\r\n\t\tif (source.bullet) {\r\n\t\t\tthis.bullet = source.bullet.clone();\r\n\t\t}\r\n\r\n\t\tthis.minPosition = source.minPosition;\r\n\t\tthis.maxPosition = source.maxPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t\tif (this._contents) {\r\n\t\t\tthis._contents.visible = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n\t * bullet in the middle of the cell, or specific value.\r\n\t *\r\n\t * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n\t * instead. It has a `location` property which can be used to indicate\r\n\t * precise relative location within cell/range.\r\n\t *\r\n\t * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n\t * into it.\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * let flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * var flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"FlagBullet\",\r\n\t *         \"label\": {\r\n\t *           \"text\": \"Hello\"\r\n\t *         }\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.5.9\r\n\t * @param  value  Bullet\r\n\t */\r\n\tpublic set bullet(value: Sprite) {\r\n\t\tif (this._bullet && this._bullet != value) {\r\n\t\t\t$array.remove(this.sprites, this._bullet);\r\n\t\t\tthis._bullet.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tthis._bullet = value;\r\n\t\tif (value) {\r\n\t\t\tthis.addSprite(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bullet\r\n\t */\r\n\tpublic get bullet(): Sprite {\r\n\t\treturn this._bullet;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[AxisDataItem]]\r\n * Includes both the [[DataItemAdapter]] definitions and properties\r\n * @see {@link DataItemAdapter}\r\n */\r\nexport interface IAxisDataItemAdapters extends IDataItemAdapters {\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport enum AxisItemLocation {\r\n\tStart = 0,\r\n\tMiddle = 0.5,\r\n\tEnd = 1\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Axis]].\r\n */\r\nexport interface IAxisDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Axis]].\r\n */\r\nexport interface IAxisProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Axis start location.\r\n\t *\r\n\t * * 0 - None of the first cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the first cell is shown.\r\n\t * * 1 - Full first cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\r\n\t/**\r\n\t * Axis end location.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tendLocation?: number;\r\n\r\n\t/**\r\n\t * Indicates if cusor's tooltip should be shown on this Axis.\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\ttoggleZoomOutButton?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\r\n\tzoomable?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Axis]].\r\n */\r\nexport interface IAxisEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * Invoked when available axis lenght changes, e.g. after resizing the whole\r\n\t * chart.\r\n\t */\r\n\tlengthchanged: {}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Axis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisAdapters extends IComponentAdapters, IAxisProperties {\r\n\t/**\r\n\t * Applied to the tooltip text before it is shown.\r\n\t */\r\n\tgetTooltipText: string;\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nexport class Axis<T extends AxisRenderer = AxisRenderer> extends Component {\r\n\r\n\t/**\r\n\t * Defines list of data fields.\r\n\t */\r\n\tpublic _dataFields: IAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the [[DataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A list of Axis Ranges.\r\n\t */\r\n\tprotected _axisRanges: ListTemplate<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisEvents;\r\n\r\n\t/**\r\n\t * A [[Label]] instance that is used for Axis title label.\r\n\t */\r\n\tprotected _title: Label;\r\n\r\n\t/**\r\n\t * \"X\", \"Y\", etc.\r\n\t *\r\n\t * This is needed so that Axis knows which of the values from series' data\r\n\t * items it should use.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisLetter: string;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tprotected _chart: Chart;\r\n\r\n\t/**\r\n\t * A type for renderer used for this Axis.\r\n\t */\r\n\tpublic _renderer: T;\r\n\r\n\t/**\r\n\t * Number of Grid elements on the axis.\r\n\t */\r\n\tprotected _gridCount: number = 10;\r\n\r\n\t/**\r\n\t * A list of [[XYSeries]] that are using this Axis.\r\n\t */\r\n\tprotected _series: List<XYSeries> = new List<XYSeries>();\r\n\r\n\t/**\r\n\t * Holds the length of the Axis, so that we can check if it changed after\r\n\t * other changes and we need to update layouts.\r\n\t */\r\n\tprotected _prevLength: number;\r\n\r\n\t/**\r\n\t * A list of Axis Breaks associated with this Axis.\r\n\t */\r\n\tprotected _axisBreaks: SortedListTemplate<this[\"_axisBreak\"]>;\r\n\r\n\t/**\r\n\t * A reference to the Iterator for Axis' data items.\r\n\t */\r\n\tprotected _dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A name of the data field this Axis looks for its data in, e.g. \"category\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisFieldName: string;\r\n\r\n\t// we save these values so that cursur could use them if axis line is a fill\r\n\r\n\t/**\r\n\t * [currentItemStartPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemStartPoint: IPoint;\r\n\r\n\t/**\r\n\t * [currentItemEndPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemEndPoint: IPoint;\r\n\r\n\tprotected _tooltipPosition: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic relativePositionSprite?: Sprite;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem and its index as\r\n\t * parameters.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * For example, you can set it up to highlight only weekends on a\r\n\t * [[DateAxis]].\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"], index?: number): void {\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = dataItem.index;\r\n\t\t}\r\n\t\tif (index / 2 == Math.round(index / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\tdataItem.axisFill.opacity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.opacity = 1;\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Full length of the axis, in pixels.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisFullLength: number;\r\n\r\n\t/**\r\n\t * Ghost label is used to prevent chart shrinking/expanding when zooming or\r\n\t * when data is invalidated. You can set custom text on it so that it would\r\n\t * be bigger/smaller,\r\n\t */\r\n\tpublic ghostLabel: AxisLabel;\r\n\r\n\t/**\r\n\t * Specifies if axis should be automatically disposed when removing from\r\n\t * chart's axis list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _axisItemCount: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tif (this.constructor === Axis) {\r\n\t\t\tthrow new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n\t\t}\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.minWidth = 0.0001;\r\n\t\tthis.minHeight = 0.0001;\r\n\t\tthis.className = \"Axis\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n\t\tthis.toggleZoomOutButton = true;\r\n\t\tthis.zoomable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create title\r\n\t\tthis.title = new Label();\r\n\t\tthis.title.shouldClone = false;\r\n\t\tthis._disposers.push(this.title);\r\n\t\tthis.setPropertyValue(\"startLocation\", 0);\r\n\t\tthis.setPropertyValue(\"endLocation\", 1);\r\n\r\n\t\t// Data item iterator\r\n\t\tthis._dataItemsIterator = new $iter.ListIterator<this[\"_dataItem\"]>(this.dataItems, () => this.dataItems.create());\r\n\t\tthis._dataItemsIterator.createNewItems = true;\r\n\r\n\t\t// Create tooltip\r\n\t\tlet tooltip: Tooltip = new Tooltip();\r\n\t\tthis._disposers.push(tooltip);\r\n\t\ttooltip.label.padding(5, 10, 5, 10);\r\n\t\ttooltip.background.pointerLength = 5;\r\n\t\ttooltip.fitPointerToBounds = true;\r\n\t\ttooltip.background.filters.clear();\r\n\r\n\t\t// Set virtual parentfor the tooltip so that it can properly inheirt\r\n\t\t// formatters from the axis.\r\n\t\ttooltip.virtualParent = this;\r\n\r\n\t\t// Create background element for the tooltip\r\n\t\tlet background: PointedRectangle = <PointedRectangle>tooltip.background;\r\n\t\tbackground.cornerRadius = 0;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.stroke = background.fill;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\ttooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n\r\n\t\tthis.tooltip = tooltip;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.readerHidden = true;\r\n\r\n\t\tthis.events.on(\"rangechangestarted\", () => {\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = true;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.events.on(\"rangechangeended\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = false;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new AxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tsuper.invalidateLayout();\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateLayout();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates series of this axis.\r\n\t */\r\n\tpublic invalidateSeries(): void {\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Override to cancel super call for data element validation.\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tthis._axisItemCount = 0;\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tthis.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n\t\t\tthis.ghostLabel.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of grid items on the axis.\r\n\t */\r\n\tprotected updateGridCount() {\r\n\t\tif (this.renderer) {\r\n\t\t\tlet gridCount = this.axisLength / this.renderer.minGridDistance;\r\n\t\t\tif (gridCount != this._gridCount) {\r\n\t\t\t\tthis._gridCount = gridCount;\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateGridCount();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.updateAxisLine();\r\n\t\t\trenderer.updateTooltip();\r\n\t\t\trenderer.updateBaseGridElement();\r\n\t\t}\r\n\r\n\t\tif (this._prevLength != this.axisLength) {\r\n\t\t\tthis.dispatchImmediately(\"lengthchanged\");\r\n\t\t\tthis._prevLength = this.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a data item to the Axis.\r\n\t *\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic appendDataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tif (tick) {\r\n\t\t\tif (tick.above) {\r\n\t\t\t\ttick.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.label) {\r\n\t\t\tdataItem.label.parent = renderer;\r\n\t\t}\r\n\r\n\t\tlet axisFill = dataItem.axisFill;\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.above) {\r\n\t\t\t\taxisFill.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxisFill.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet grid = dataItem.grid;\r\n\t\tif (grid) {\r\n\t\t\tif (grid.above) {\r\n\t\t\t\tgrid.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgrid.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\tdataItem.bullet.parent = renderer.bulletsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws Axis' related items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis.validateLayout();\r\n\r\n\t\tthis.renderer.updateGridContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Redars Axis ranges.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateAxisRanges(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\tthis.appendDataItem(axisRange);\r\n\t\t\tthis.validateDataElement(axisRange);\r\n\t\t\tif (axisRange.grid) {\r\n\t\t\t\taxisRange.grid.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.tick) {\r\n\t\t\t\taxisRange.tick.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.axisFill) {\r\n\t\t\t\taxisRange.axisFill.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.label) {\r\n\t\t\t\taxisRange.label.validate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis breaks, so they are redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\taxisBreak.invalidate();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Associates an Axis break with this Axis, after it is inserted into\r\n\t * `axisBreaks`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic processBreak(event: IListEvents<this[\"_axisBreak\"]>[\"inserted\"]) {\r\n\t\tlet axisBreak: this[\"_axisBreak\"] = event.newValue;\r\n\t\taxisBreak.parent = this.renderer.breakContainer;\r\n\t\taxisBreak.axis = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a [[XYSeries]] element with this Axis.\r\n\t *\r\n\t * Returns a [[Disposer]] for all events, added to Series for watching\r\n\t * changes in Axis, and vice versa.\r\n\t * @ignore\r\n\t * @param series  Series\r\n\t * @return Event disposer\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\tthis.series.moveValue(series);\r\n\r\n\t\treturn new MultiDisposer([\r\n\t\t\tnew Disposer(() => {\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}),\r\n\r\n\t\t\tthis.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"lengthchanged\", series.createMask, series, false),\r\n\t\t\tthis.events.on(\"startchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"endchanged\", series.invalidate, series, false),\r\n\t\t\t//axis.events.on(\"validated\", chart.handleCursorPositionChange, chart, false)\t\t\t\r\n\r\n\t\t\t// TODO should these be disposed of ?\r\n\t\t\t//series.events.on(\"datavalidated\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"visibilitychanged\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"hidden\", this.processSeriesDataItems, this)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisRenderer]] to be used to render this Axis.\r\n\t *\r\n\t * Please note that most of the settings, related to Axis' appearance are set\r\n\t * via its renderer. Not directly on the Axis.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n\t * @param renderer  Renderer\r\n\t */\r\n\tpublic set renderer(renderer: this[\"_renderer\"]) {\r\n\t\tif (renderer != this._renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\trenderer.chart = this.chart;\r\n\t\t\trenderer.axis = this;\r\n\t\t\trenderer.parent = this;\r\n\t\t\tthis.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n\t\t\tthis.initRenderer();\r\n\r\n\t\t\tthis._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n\r\n\t\t\tlet ghostLabel = this.renderer.labels.create();\r\n\t\t\tthis._disposers.push(ghostLabel);\r\n\t\t\tghostLabel.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n\t\t\tghostLabel.text = \"L\";\r\n\t\t\tghostLabel.parent = this.renderer;\r\n\t\t\tghostLabel.shouldClone = false;\r\n\t\t\tghostLabel.fillOpacity = 0;\r\n\t\t\tghostLabel.opacity = 0;\r\n\t\t\tghostLabel.strokeOpacity = 0;\r\n\t\t\tghostLabel.interactionsEnabled = false;\r\n\t\t\tghostLabel.validate();\r\n\r\n\t\t\tthis.ghostLabel = ghostLabel;\r\n\r\n\t\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\t\tghostLabel.text = \"L\";\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Renderer\r\n\t */\r\n\tpublic get renderer(): this[\"_renderer\"] {\r\n\t\treturn this._renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to angle. (for circular axes)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\treturn this.renderer.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\treturn this.renderer.pointToPosition(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position to coordinate.\r\n\t *\r\n\t * @since 4.7.15\r\n\t * @param position (0-1)\r\n\t * @return coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\treturn this.renderer.positionToCoordinate(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start  [description]\r\n\t * @param end    [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: any, end: any): string {\r\n\t\treturn this.renderer.getPositionRangePath(start, end);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic anyToPosition(value: any): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: any): IOrientationPoint {\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition [description]\r\n\t * @param endPosition   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.getPositionRangePath(startPosition, endPosition);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Actual axis length in pixels.\r\n\t *\r\n\t * @return Axis length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.axisLength;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if axis should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n\t\t\tif (value && this.renderer) {\r\n\t\t\t\tthis.renderer.updateTooltip();\r\n\t\t\t}\r\n\t\t\telse if (this.tooltip) {\r\n\t\t\t\tthis.tooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.6.2\r\n\t * @param  value  Toggle zoom out button?\r\n\t */\r\n\tpublic set toggleZoomOutButton(value: boolean) {\r\n\t\tthis.setPropertyValue(\"toggleZoomOutButton\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Toggle zoom out button?\r\n\t */\r\n\tpublic get toggleZoomOutButton(): boolean {\r\n\t\treturn this.getPropertyValue(\"toggleZoomOutButton\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis._tooltipPosition = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\r\n\t\tif (!tooltip || this.dataItems.length <= 0) {\r\n\t\t\tthis._tooltipPosition = undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!local) {\r\n\t\t\t\tposition = this.toAxisPosition(position);\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t\tthis._tooltipPosition = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.renderer;\r\n\r\n\t\t\t//@todo: think of how to solve this better\r\n\t\t\tif (!tooltip.parent) {\r\n\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltipLocation = renderer.tooltipLocation;\r\n\r\n\t\t\tlet startPosition: number = this.getCellStartPosition(position);\r\n\t\t\tlet endPosition: number = this.getCellEndPosition(position);\r\n\r\n\t\t\tif (this.tooltipPosition == \"fixed\") {\r\n\t\t\t\tposition = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n\t\t\t}\r\n\r\n\t\t\tposition = $math.fitToRange(position, this.start, this.end);\r\n\r\n\t\t\tif (this._tooltipPosition != position) {\r\n\t\t\t\tthis._tooltipPosition = position;\r\n\r\n\t\t\t\tlet tooltipLocation2 = renderer.tooltipLocation2;\r\n\r\n\t\t\t\tlet startPoint: IPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n\t\t\t\tlet endPoint: IPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n\r\n\t\t\t\t// save values so cursor could use them\r\n\t\t\t\tthis.currentItemStartPoint = startPoint;\r\n\t\t\t\tthis.currentItemEndPoint = endPoint;\r\n\r\n\t\t\t\tif (renderer.fullWidthTooltip) {\r\n\t\t\t\t\ttooltip.width = endPoint.x - startPoint.x;\r\n\t\t\t\t\ttooltip.height = endPoint.y - startPoint.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet point: IPoint = renderer.positionToPoint(position, tooltipLocation2);\r\n\t\t\t\tlet globalPoint: IPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n\t\t\t\ttooltip.text = this.getTooltipText(position);\r\n\r\n\t\t\t\tif (tooltip.text) {\r\n\t\t\t\t\ttooltip.delayedPointTo(globalPoint);\r\n\t\t\t\t\ttooltip.show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) to Axis position with zoom level and\r\n\t * inversed taken into account.\r\n\t *\r\n\t * @param position Global position (0-1)\r\n\t * @return Position within Axis (0-1)\r\n\t */\r\n\tpublic toAxisPosition(position: number): number {\r\n\r\n\t\tposition = this.renderer.toAxisPosition(position);\r\n\r\n\t\tif (position == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tposition = position * (this.end - this.start);\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = this.start + position;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts position on the axis with zoom level and\r\n\t * inversed taken into account to global position.\r\n\t *\r\n\t * @param position Axis position (0-1)\r\n\t * @return Global position (0-1)\r\n\t */\r\n\tpublic toGlobalPosition(position: number): number {\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = position - this.start;\r\n\t\t}\r\n\r\n\t\treturn position / (this.end - this.start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to be used for cursor's Axis tooltip.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position coordinate (px)\r\n\t * @return Label text\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n\t * place.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointerOrientation  Pointer (stem) orientation\r\n\t * @param boundingRectangle   A rectangle for tooltip to fit within\r\n\t */\r\n\tpublic updateTooltip(pointerOrientation: PointerOrientation, boundingRectangle: IRectangle): void {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.fixDoc = false;\r\n\t\t\ttooltip.pointerOrientation = pointerOrientation;\r\n\t\t\ttooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [roundPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position  Relative position\r\n\t * @param location  Location on axis\r\n\t * @return Rounded position\r\n\t */\r\n\tpublic roundPosition(position: number, location: AxisItemLocation, axisLocation?: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellStartPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellEndPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis ranges for this Axis.\r\n\t *\r\n\t * @return Axis ranges\r\n\t */\r\n\tpublic get axisRanges(): ListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (!this._axisRanges) {\r\n\t\t\tlet dataItem: AxisDataItem = this.createDataItem();\r\n\t\t\tdataItem.isRange = true;\r\n\t\t\tdataItem.axisFill = this.renderer.axisFills.template.clone();\r\n\t\t\tdataItem.grid = this.renderer.grid.template.clone();\r\n\t\t\tdataItem.tick = this.renderer.ticks.template.clone();\r\n\t\t\tdataItem.label = this.renderer.labels.template.clone();\r\n\r\n\t\t\tdataItem.isTemplate = true;\r\n\t\t\tdataItem.component = this;\r\n\t\t\tdataItem.axisFill.disabled = false;\r\n\t\t\tdataItem.tick.disabled = false;\r\n\t\t\tdataItem.grid.disabled = false;\r\n\t\t\tdataItem.label.disabled = false;\r\n\r\n\t\t\tthis._axisRanges = new ListTemplate<this[\"_dataItem\"]>(dataItem);\r\n\t\t\tthis._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisRanges));\r\n\t\t\tthis._disposers.push(this._axisRanges.template);\r\n\t\t}\r\n\t\treturn this._axisRanges;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an axis range after it has been added to the axis range list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<this[\"_dataItem\"]>[\"inserted\"]) {\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\taxisRange.component = this;\r\n\t\taxisRange.isRange = true;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis breaks on this Axis.\r\n\t *\r\n\t * @return Axis breaks.\r\n\t */\r\n\tpublic get axisBreaks(): SortedListTemplate<this[\"_axisBreak\"]> {\r\n\t\tif (!this._axisBreaks) {\r\n\t\t\tthis._axisBreaks = new SortedListTemplate<this[\"_axisBreak\"]>(this.createAxisBreak(), (a, b) => {\r\n\t\t\t\treturn $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n\t\t\t});\r\n\r\n\t\t\tthis._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisBreaks));\r\n\t\t\tthis._disposers.push(this._axisBreaks.template);\r\n\t\t}\r\n\t\treturn this._axisBreaks;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new axis break.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new AxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Series currently associated with this Axis.\r\n\t *\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem): void {\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t/**\r\n\t * Updates Axis based on all Series that might influence it.\r\n\t *\r\n\t * Called by Series after Series data is validated.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisBySeries(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideUnusedDataItems(): void {\r\n\t\t// hide all unused\r\n\t\tlet dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]> = this._dataItemsIterator;\r\n\r\n\t\tdataItemsIterator.createNewItems = false;\r\n\r\n\t\t$iter.each(dataItemsIterator.iterator(), (dataItem) => {\r\n\t\t\tthis.validateDataElement(dataItem); // solves shrinking\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t});\r\n\r\n\t\tdataItemsIterator.clear();\r\n\t\tdataItemsIterator.createNewItems = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series' data item that corresponds to specific position on Axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series    Series\r\n\t * @param position  Position (0-1)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle that corresponds to specific position on axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       ???\r\n\t * @param location  Location\r\n\t * @param stackKey  ???\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point coordinates\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes axis breaks that fall between `min` and `max` (???)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param min  Start value\r\n\t * @param max  End value\r\n\t * @return Spread o\r\n\t */\r\n\tprotected adjustDifference(min: number, max: number): number {\r\n\t\tlet difference: number = max - min;\r\n\t\tif ($type.isNumber(difference)) {\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.eachContinue(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t// breaks are sorted, we don't need go further anymore\r\n\t\t\t\t\t\tif (startValue > max) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (endValue >= min) {\r\n\t\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tlet intersection: IRange = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tdifference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn difference;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if specific value falls within a break.\r\n\t *\r\n\t * Returns [[AxisBreak]] the value falls into.\r\n\t *\r\n\t * @param value  Value to check\r\n\t * @return Axis break\r\n\t */\r\n\tprotected isInBreak(value: number): this[\"_axisBreak\"] {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\treturn $iter.find(this._axisBreaks.iterator(), (axisBreak) =>\r\n\t\t\t\tvalue >= axisBreak.adjustedStartValue &&\r\n\t\t\t\tvalue <= axisBreak.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixAxisBreaks description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected fixAxisBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks: SortedListTemplate<this[\"_axisBreak\"]> = this._axisBreaks;\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t\t// This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n\t\t\t\t// TODO very inefficient\r\n\t\t\t\t$array.each($iter.toArray(axisBreaks.iterator()), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n\t\t\t\t\tlet endValue: number = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\t\tthis._axisBreaks.update(axisBreak);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tlet firstAxisBreak: this[\"_axisBreak\"] = axisBreaks.first;\r\n\t\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t\t// process breaks\r\n\t\t\t\t// TODO does this need to call axisBreaks.update ?\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t// breaks can't overlap\r\n\t\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n\t *\r\n\t * Yes, also for category axis, this helps to avoid jumping of categories\r\n\t * while scrolling and does not do a lot of extra work as we use\r\n\t * protected `_startIndex` and `_endIndex` when working with items.\r\n\t *\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * [startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a formatted label based on position.\r\n\t *\r\n\t * Individual axis types should override this method to generate a label\r\n\t * that is relevant to axis type.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\treturn Math.round(position * 100) + \"%x\";\r\n\t}\r\n\r\n\t/**\r\n\t * A Chart this Axis belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a data item for a Series range.\r\n\t *\r\n\t * @param series  Target Series\r\n\t * @return Range data item\r\n\t */\r\n\tpublic createSeriesRange(series: XYSeries): this[\"_dataItem\"] {\r\n\t\tlet range = this.axisRanges.create();\r\n\t\trange.component = this;\r\n\t\trange.axisFill = this.renderer.axisFills.template.clone();\r\n\t\trange.axisFill.disabled = false;\r\n\t\trange.axisFill.fillOpacity = 0;\r\n\r\n\t\trange.grid = this.renderer.grid.template.clone();\r\n\t\trange.grid.disabled = true;\r\n\r\n\t\trange.tick = this.renderer.ticks.template.clone();\r\n\t\trange.tick.disabled = true;\r\n\r\n\t\trange.label = this.renderer.labels.template.clone();\r\n\t\trange.label.disabled = true;\r\n\r\n\t\trange.addDisposer(new Disposer(() => {\r\n\t\t\tseries.axisRanges.removeValue(range);\r\n\t\t}))\r\n\r\n\t\tseries.axisRanges.push(range);\r\n\t\treturn range;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.copyFrom(source.renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (source.renderer) {\r\n\t\t\t\tthis.renderer = source.renderer.clone();\r\n\t\t\t\tthis._disposers.push(this.renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (source.title) {\r\n\t\t\tif (!this.title) {\r\n\t\t\t\tthis.title = source.title.clone();\r\n\t\t\t\tthis.title.parent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.title.copyFrom(source.title);\r\n\t\t\t}\r\n\t\t\tthis._disposers.push(this.title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t */\r\n\tprotected resetIterators(): void {\r\n\t\tthis._dataItemsIterator.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\r\n\t\t\t\t\t// If `series` is set, we know it's a series range\r\n\t\t\t\t\tif ($type.hasValue(range[\"series\"])) {\r\n\t\t\t\t\t\tif ($type.isString(range[\"series\"])) {\r\n\t\t\t\t\t\t\tif (this.map.hasKey(range[\"series\"])) {\r\n\t\t\t\t\t\t\t\t//range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n\t\t\t\t\t\t\t\tdelete (range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i].config = range;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Ordering function used in JSON setup.\r\n\t *\r\n\t * @param a  Item A\r\n\t * @param b  Item B\r\n\t * @return Order\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// last\r\n\t\telse if (a == \"title\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"title\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// first\r\n\t\telse if (a == \"component\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"component\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - Full first cell is shown.\r\n\t * * 0.5 - Half of first cell is shown.\r\n\t * * 1 - None of the first cell is visible. (you probably don't want that)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.gridContainer.disabled = value;\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Label]] element which serves as a title to the axis.\r\n\t *\r\n\t * When axis is created it aleready has an element, so you can just modify\r\n\t * it.\r\n\t *\r\n\t * Or you can replace it with your own instance of `Label`.\r\n\t * \r\n\t * @param  value  Title label\r\n\t */\r\n\tpublic set title(value: Label) {\r\n\t\tif (this._title && this._title != value) {\r\n\t\t\tthis._title.dispose();\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tvalue.parent = this;\r\n\t\t\tvalue.shouldClone = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title label\r\n\t */\r\n\tpublic get title(): Label {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the axis be zoomed with scrollbar/cursor?\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.28\r\n\t * @param  value  Zoomable?\r\n\t */\r\n\tpublic set zoomable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"zoomable\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoomable?\r\n\t */\r\n\tpublic get zoomable(): boolean {\r\n\t\treturn this.getPropertyValue(\"zoomable\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Axis && target.tooltip) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.cursorTooltipEnabled = false;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Axis, AxisItemLocation, AxisDataItem } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFill]].\r\n */\r\nexport interface IAxisFillProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Start position. (0-1)\r\n\t */\r\n\tstartPosition?: number;\r\n\r\n\t/**\r\n\t * End position. (0-1)\r\n\t */\r\n\tendPosition?: number;\r\n\r\n\t/**\r\n\t * Location within the axis.\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFill]].\r\n */\r\nexport interface IAxisFillEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFill]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillAdapters extends ISpriteAdapters, IAxisFillProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisFill extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillEvents;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * [_dataItem description]\r\n\t *\r\n\t * Not sure what this is doing here?\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper();\r\n\t\tthis.axis = axis;\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.className = \"AxisFill\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.location = 0;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.__disabled || this.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n\t\t\tthis.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t\tif (this.isMeasured) {\r\n\t\t\t\tthis.measure();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An actual starting position of the fill.\r\n\t *\r\n\t * @param value  Starting position\r\n\t */\r\n\tpublic set startPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"startPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn this.getPropertyValue(\"startPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * An actual end position of the fill.\r\n\t *\r\n\t * @param value End position\r\n\t */\r\n\tpublic set endPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"endPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn this.getPropertyValue(\"endPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the fill. (0-1)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteEvents, ISpriteAdapters } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grid]].\r\n */\r\nexport interface IGridProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Location of the grid item within cell. (0-1)\r\n\t */\r\n\tlocation?: AxisItemLocation;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grid]].\r\n */\r\nexport interface IGridEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters  for [[Grid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridAdapters extends ISpriteAdapters, IGridProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nexport class Grid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridEvents;\r\n\r\n\t/**\r\n\t * An axis data item that corresponds to the this grid element.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Grid\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.fill = color(); // \"none\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to place grid line on.\r\n\t *\r\n\t * * 0 - start\r\n\t * * 0.5 - middle\r\n\t * * 1 - end\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable grid on smaller charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Grid) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\t//this.nonScaling = true; // not good for perf\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n","/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n","/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the tick on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referece to Axis element this tick is placed on.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if tick should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally tick goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Chart } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t */\r\n\tminGridDistance?: number;\r\n\r\n\t/**\r\n\t * Draw axis labels inside axis.\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Draw axis on opposite side of the plot area?\r\n\t */\r\n\topposite?: boolean;\r\n\r\n\t/**\r\n\t * Inverse the order of the scale for the Axis.\r\n\t */\r\n\tinversed?: boolean;\r\n\r\n\t/**\r\n\t * Location of the cell start. (0-1)\r\n\t */\r\n\tcellStartLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the cell end. (0-1)\r\n\t */\r\n\tcellEndLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the axis tooltip. (0-1)\r\n\t */\r\n\ttooltipLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the tooltip relative secondary axis cell. (0-1)\r\n\t */\r\n\ttooltipLocation2?: number;\t\r\n\r\n\t/**\r\n\t * Resize axis tooltip to the full width of the cell.\r\n\t */\r\n\tfullWidthTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Labels with position less than this will be hidden.\r\n\t */\r\n\tminLabelPosition?: number;\r\n\r\n\t/**\r\n\t * Labels with position bigger than this will be hidden.\r\n\t */\r\n\tmaxLabelPosition?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererAdapters extends IContainerAdapters, IAxisRendererProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRenderer extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererEvents;\r\n\r\n\t/**\r\n\t * A related Axis.\r\n\t */\r\n\tprotected _axis: Axis;\r\n\r\n\t/**\r\n\t * A line object of the related axis.\r\n\t */\r\n\tpublic line: AxisLine;\r\n\r\n\t/**\r\n\t * Base grid element. ([[Sprite]])\r\n\t *\r\n\t * For value axes base grid is at value 0.\r\n\t *\r\n\t * For category/date axis it is added at the end of the last item/date.\r\n\t *\r\n\t */\r\n\tpublic baseGrid: Sprite;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[Grid]] elements.\r\n\t */\r\n\tpublic gridContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the axis bullets.\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[AxisBreak]] elements.\r\n\t */\r\n\tpublic breakContainer: Container;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<Chart>();\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: Grid;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFill;\r\n\r\n\t/**\r\n\t * Defines type for tick elements.\r\n\t */\r\n\tpublic _tickType: AxisTick;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabel;\r\n\r\n\t/**\r\n\t * A list of grid elements.\r\n\t */\r\n\tprotected _grid: ListTemplate<this[\"_gridType\"]>;\r\n\r\n\t/**\r\n\t * A list of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tickType\"]>;\r\n\r\n\t/**\r\n\t * A list of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_labelType\"]>;\r\n\r\n\t/**\r\n\t * A list of fill elements.\r\n\t */\r\n\tprotected _axisFills: ListTemplate<this[\"_fillType\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRenderer\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.minGridDistance = 50;\r\n\t\tthis.inside = false;\r\n\t\tthis.inversed = false;\r\n\t\tthis.tooltipLocation = 0.5;\r\n\t\tthis.fullWidthTooltip = false;\r\n\t\tthis.cellStartLocation = 0;\r\n\t\tthis.cellEndLocation = 1;\r\n\r\n\t\tthis.minLabelPosition = 0;\r\n\t\tthis.maxLabelPosition = 1;\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tlet gridContainer = this.createChild(Container);\r\n\t\tgridContainer.shouldClone = false;\r\n\t\tgridContainer.layout = \"none\";\r\n\t\t//\tgridContainer.isMeasured = false;\r\n\t\tgridContainer.virtualParent = this;\r\n\t\tgridContainer.width = percent(100);\r\n\t\tgridContainer.height = percent(100);\r\n\r\n\t\tthis.gridContainer = gridContainer;\r\n\t\t// not good without this\r\n\t\tgridContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.invalidateAxisItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tlet breakContainer = this.createChild(Container);\r\n\t\tbreakContainer.shouldClone = false;\r\n\t\tbreakContainer.isMeasured = false;\r\n\t\tbreakContainer.layout = \"none\";\r\n\t\tbreakContainer.width = percent(100);\r\n\t\tbreakContainer.height = percent(100);\r\n\t\tthis.breakContainer = breakContainer;\r\n\r\n\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.line = this.createChild(AxisLine);\r\n\t\tthis.line.shouldClone = false;\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tlet baseGrid: Grid = this.createChild(Grid);\r\n\t\tbaseGrid.shouldClone = false;\r\n\t\tthis.baseGrid = baseGrid;\r\n\r\n\t\t// Make elements disposable\r\n\t\tlet disposers = this._disposers;\r\n\t\tdisposers.push(baseGrid);\r\n\t\tdisposers.push(this.line);\r\n\t\tdisposers.push(gridContainer);\r\n\t\tdisposers.push(breakContainer);\r\n\t\tdisposers.push(bulletsContainer);\r\n\t\tdisposers.push(this._chart);\r\n\r\n\t\tthis.ticks.template.disabled = true;\r\n\t\tthis.axisFills.template.disabled = true;\r\n\t\tthis.axisFills.template.interactionsEnabled = false;\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @param axis Axis\r\n\t */\r\n\tset axis(axis: Axis) {\r\n\t\tthis.setAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @return axis Axis\r\n\t */\r\n\tget axis(): Axis {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tthis._axis = axis;\r\n\t\tthis.baseGrid.parent = axis;\r\n\t\tthis.line.parent = axis;\r\n\t\tthis.gridContainer.bind(\"opacity\", axis);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tthis.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n\t\tthis.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n\t\tthis.labels.template.inside = this.inside;\r\n\t\tthis.ticks.template.inside = this.inside;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-positions an element to new coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item   A target element\r\n\t * @param point  New coordinates\r\n\t */\r\n\tpublic positionItem(item: Sprite, point: IPoint): void {\r\n\t\tif (item) {\r\n\t\t\titem.moveTo(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?:number): IPoint {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review / units)\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate;\r\n\t}\r\n\r\n\tpublic updateGridContainer() {\r\n\r\n\t}\r\n\r\n\r\n\tprotected getHeight(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelHeight;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelHeight || 0;\r\n\t}\r\n\r\n\tprotected getWidth(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelWidth;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelWidth || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis data items, effectively causing them re-evaluated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic invalidateAxisItems(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\taxis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fill         Fill element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateFillElement(fill: AxisFill, position: number, endPosition: number): void {\r\n\t\tfill.startPosition = position;\r\n\t\tfill.endPosition = endPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tthis.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n\t\tthis.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n\t\tthis.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n\t\tthis.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * Use it to control density of the grid/labels on the axis.element.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n\t * @param value  Min distance (px)\r\n\t */\r\n\tpublic set minGridDistance(value: number) {\r\n\t\tif (this.setPropertyValue(\"minGridDistance\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min distance (px)\r\n\t */\r\n\tpublic get minGridDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minGridDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of an element, based on its current position and\r\n\t * min/max position settings.\r\n\t *\r\n\t * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite       An element to toggle\r\n\t * @param position     Elements current position\r\n\t * @param minPosition  Min position setting\r\n\t * @param maxPosition  Max position setting\r\n\t */\r\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tlet dataItem = sprite.dataItem;\r\n\t\tif(dataItem && dataItem instanceof AxisDataItem){\r\n\t\t\tif($type.isNumber(dataItem.minPosition)){\r\n\t\t\t\tminPosition = dataItem.minPosition;\r\n\t\t\t}\r\n\t\t\tif($type.isNumber(dataItem.maxPosition)){\r\n\t\t\t\tmaxPosition = dataItem.maxPosition;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tlet updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n\t\tlet updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n\r\n\t\tif (!sprite.disabled) {\r\n\t\t\tif (position < updatedStart || position > updatedEnd) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Fill elements.\r\n\t *\r\n\t * Those are fill elements that cover the space between every second set\r\n\t * of grid lines, and can be configured to create striped charts.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable them, set\r\n\t * template to true.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"axisFills\": {\r\n\t *         \"disabled\": false\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n\t * @return Fill elements\r\n\t */\r\n\tpublic get axisFills(): ListTemplate<this[\"_fillType\"]> {\r\n\t\tif (!this._axisFills) {\r\n\t\t\tlet fill = this.createFill(this.axis);\r\n\t\t\tthis._axisFills = new ListTemplate<AxisFill>(fill);\r\n\t\t\tfill.applyOnClones = true;\r\n\t\t\tfill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisFills));\r\n\t\t\tthis._disposers.push(this._axisFills.template);\r\n\t\t}\r\n\t\treturn this._axisFills;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFill(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Grid elements.\r\n\t *\r\n\t * @return Grid elements\r\n\t */\r\n\tpublic get grid(): ListTemplate<this[\"_gridType\"]> {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet grid = this.createGrid();\r\n\t\t\tthis._grid = new ListTemplate<Grid>(grid);\r\n\t\t\tgrid.applyOnClones = true;\r\n\t\t\tgrid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._grid));\r\n\t\t\tthis._disposers.push(this._grid.template);\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new Grid();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Tick elements.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable ticks, you'll\r\n\t * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"ticks\": {\r\n\t *         \"disabled\": false,\r\n\t *         \"strokeOpacity\": 0.5\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Tick elements\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tickType\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick: AxisTick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\ttick.isMeasured = false;\r\n\t\t\ttick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._ticks = new ListTemplate<AxisTick>(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t\tthis._disposers.push(this._ticks.template);\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new tick element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Tick element\r\n\t */\r\n\tpublic createTick(): this[\"_tickType\"] {\r\n\t\treturn new AxisTick();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Label elements.\r\n\t *\r\n\t * @return Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_labelType\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tthis._labels = new ListTemplate<AxisLabel>(label);\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tlabel.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t\tthis._disposers.push(this._labels.template);\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabel();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n\t *\r\n\t * Does not work with all renderers, like AxisRendererRadial.\r\n\t *\r\n\t * @param value  Labels inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\r\n\t\tif (this.setPropertyValue(\"inside\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.height = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis should be drawn on the opposite side of the plot\r\n\t * area than it would normally be drawn based on chart's settings.\r\n\t *\r\n\t * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n\t * [[AxisRenderer Circular].\r\n\t *\r\n\t * @param value  Draw axis on opposite side?\r\n\t */\r\n\tpublic set opposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"opposite\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw axis on opposite side?\r\n\t */\r\n\tpublic get opposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"opposite\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n\t * (between two grid lines)\r\n\t *\r\n\t * NOTE: this setting is ignored on circular axis types.\r\n\t *\r\n\t * @param value Full width tooltip?\r\n\t */\r\n\tpublic set fullWidthTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width tooltip?\r\n\t */\r\n\tpublic get fullWidthTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within secondary axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation2(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation2\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation2(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation2\");\r\n\t}\t\r\n\r\n\t/**\r\n\t * Location for the cell start.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellStartLocation` identifies where, within available space, the actual\r\n\t * cell starts.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell start (0-1)\r\n\t */\r\n\tpublic set cellStartLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell start (0-1)\r\n\t */\r\n\tpublic get cellStartLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellStartLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell end.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellEndLocation` identifies where, within available space, the actual\r\n\t * cell ends.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell end (0-1)\r\n\t */\r\n\tpublic set cellEndLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell end (0-1)\r\n\t */\r\n\tpublic get cellEndLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellEndLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the scale of the axis should be flipped.\r\n\t *\r\n\t * @param value Flip axis?\r\n\t */\r\n\tpublic set inversed(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inversed\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Flip axis?\r\n\t */\r\n\tpublic get inversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"inversed\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the start of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near start of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Min label position (0-1)\r\n\t */\r\n\tpublic set minLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"minLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min label position (0-1)\r\n\t */\r\n\tpublic get minLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"minLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the and of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near end of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Max label position (0-1)\r\n\t */\r\n\tpublic set maxLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max label position (0-1)\r\n\t */\r\n\tpublic get maxLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"maxLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all settings and related items from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param source  Source object\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.grid.template.copyFrom(source.grid.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.axisFills.template.copyFrom(source.axisFills.template);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.baseGrid.copyFrom(source.baseGrid);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n","/**\r\n * Axis Bullet module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerAdapters, IContainerEvents, IContainerProperties } from \"../../core/Container\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw inside plot area (`true`) or outside it (`false`).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapter for [[AxisBullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBulletAdapters extends IContainerAdapters, IAxisBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a positioned bullet (element) on an Axis.\r\n *\r\n * ```TypeScript\r\n * let range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * let flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JavaScript\r\n * var range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * var flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"xAxes\": [{\r\n *     \"type\": \"DateAxis\",\r\n *     // ...\r\n *     \"axisRanges\": [{\r\n *       \"date\": new Date(2018, 0, 5),\r\n *       \"bullet: {\r\n *         \"type\": \"FlagBullet\",\r\n *         \"label\": {\r\n *           \"text\": \"Hello\"\r\n *         }\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.9\r\n * @see {@link IAxisBulletEvents} for a list of available events\r\n * @see {@link IAxisBulletAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBulletEvents;\r\n\r\n\t/**\r\n\t * Data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisBullet\";\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * let bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * var bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"endDate\": new Date(2018, 0, 6),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"AxisBullet\",\r\n\t *         \"location\": 1,\r\n\t *         \"children\": [{\r\n\t *           \"type\": \"FlagBullet\",\r\n\t *           \"label\": {\r\n\t *             \"text\": \"Hello\"\r\n\t *           }\r\n\t *         }]\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0.5\r\n\t * @param  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBullet\"] = AxisBullet;","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { HorizontalCenter } from \"../../core/defs/HorizontalCenter\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererYAdapters extends IAxisRendererAdapters, IAxisRendererYProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererYProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererYAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererYEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY\";\r\n\t\tthis.minGridDistance = 40;\r\n\t\tthis.opposite = false;\r\n\t\tthis.height = percent(100);\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"horizontal\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.y = axis.pixelY;\r\n\t\t\tgridContainer.height = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet inversedPosition = 1 - value;\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet y = axis.pixelY;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\ty = $utils.spritePointToSprite({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tlet relativeY = y / relativePositionSprite.innerHeight;\r\n\t\t\t\tlet relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;\r\n\r\n\t\t\t\treturn 1 - (inversedPosition - relativeY) / relativeHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.valign = \"middle\";\r\n\r\n\t\t\tif (!(axis.height instanceof Percent)) {\r\n\t\t\t\taxis.height = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\ttitle.rotation = 90;\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.rotation = -90;\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 2000;\r\n\t\t\tlet bbx: number = 0;\r\n\t\t\tlet bby: number = 0;\r\n\t\t\tlet bbw: number = bigNum;\r\n\t\t\tlet bbh: number = this.axisLength;\r\n\r\n\t\t\t// right\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\telse {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n\t}\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.y, point.x);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = (1 - axis.start) - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + (1 - axis.end);\r\n\t\t}\r\n\t\treturn $math.round(position, 5);\r\n\t}\t\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet y1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet y2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet h: number = Math.abs(y2 - y1);\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet y: number = Math.min(y1, y2);\r\n\t\tlet x: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//\tpoint.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\ttry {\r\n\t\t\t$utils.used(this.axis.title.measuredWidth);\r\n\t\t} catch {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tif (!this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet h: number = this.axisLength;\r\n\t\tlet y: number = axis.basePoint.y;\r\n\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tif (y < - 0.2 || y > h + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet horizontalCenter: HorizontalCenter;\r\n\t\tlet deltaX = 0;\r\n\t\tlet maxWidth = this.gridContainer.maxWidth;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\tif (label.align == \"left\") {\r\n\t\t\t\t\tdeltaX = -maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = -maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = 0 + deltaX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\tif (label.align == \"right\") {\r\n\t\t\t\t\tdeltaX = maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = this.measuredWidth + deltaX;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.horizontalCenter = horizontalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet x1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet x2: number = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n\r\n\t\tstartPoint.y = $math.fitToRange(startPoint.y, -1, this.axisLength + 1);\r\n\t\tendPoint.y = $math.fitToRange(endPoint.y, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet w = Math.abs(x2 - x1);\r\n\r\n\t\tstartLine.x = x1;\r\n\t\tstartLine.height = 0;\r\n\t\tstartLine.width = w;\r\n\r\n\t\tendLine.x = x1;\r\n\t\tendLine.height = 0;\r\n\t\tendLine.width = w;\r\n\r\n\t\tfillShape.width = w;\r\n\t\tfillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n\t\tfillShape.x = x1;\r\n\t\tfillShape.y = endPoint.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(true, false, true, false);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (!axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n","/**\r\n * Value Axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { IDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ValueAxisDataItem extends AxisDataItem {\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ValueAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.endValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A data point's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values[\"value\"].value;\r\n\t}\r\n\r\n\t/**\r\n\t * Data point's numeric end value.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tthis.setValue(\"endValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.values[\"endValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n */\r\nexport interface IMinMaxStep {\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisDataFields extends IAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisProperties extends IAxisProperties {\r\n\tstrictMinMax?: boolean;\r\n\tlogarithmic?: boolean;\r\n\tmaxPrecision?: number;\r\n\tadjustLabelPrecision?: boolean;\r\n\textraTooltipPrecision?: number;\r\n\textraMin?: number;\r\n\textraMax?: number;\r\n\tkeepSelection?: boolean;\r\n\tincludeRangesInMinMax?: boolean;\r\n\tsyncWithAxis?: ValueAxis;\r\n\ttreatZeroAs?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisEvents extends IAxisEvents {\r\n\r\n\t/**\r\n\t * Invoked when selection/zoom on axis occurs and start/end coordinates\r\n\t * change.\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start/end coordinates of the axis change.\r\n\t */\r\n\textremeschanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[ValueAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisAdapters extends IAxisAdapters, IValueAxisProperties {\r\n\t/**\r\n\t * Applied to the base value of the axis\r\n\t */\r\n\tbaseValue: number,\r\n\r\n\t/**\r\n\t * Applied to the min value of the axis\r\n\t */\r\n\tmin: number\r\n\r\n\t/**\r\n\t * Applied to the max value of the axis\r\n\t */\r\n\tmax: number\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IValueAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: ValueAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: ValueAxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisEvents;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: XYChart;\r\n\r\n\t/**\r\n\t * A list of Series that are using this Axis.\r\n\t */\r\n\tpublic series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * Minimum value for the axis scale.\r\n\t */\r\n\tprotected _min: number;\r\n\r\n\t/**\r\n\t * Maximum value for the axis scale.\r\n\t */\r\n\tprotected _max: number;\r\n\r\n\t/**\r\n\t * User-defined min value for axis.\r\n\t */\r\n\tprotected _minDefined: number;\r\n\r\n\t/**\r\n\t * User-defined max value for axis.\r\n\t */\r\n\tprotected _maxDefined: number;\r\n\r\n\t/**\r\n\t * [_minAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minAdjusted: number;\r\n\r\n\t/**\r\n\t * [_maxAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxAdjusted: number;\r\n\r\n\t/**\r\n\t * Min real value. (lowest value of all data points)\r\n\t */\r\n\tprotected _minReal: number;\r\n\r\n\t/**\r\n\t * Max real value. (highest value of all data points)\r\n\t */\r\n\tprotected _maxReal: number;\r\n\r\n\t/**\r\n\t * Min value within current zoom.\r\n\t */\r\n\tprotected _minZoomed: number;\r\n\r\n\t/**\r\n\t * Max value within current zoom.\r\n\t */\r\n\tprotected _maxZoomed: number\r\n\r\n\t/**\r\n\t * [_step description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _step: number;\r\n\r\n\t/**\r\n\t * [_stepDecimalPlaces description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _stepDecimalPlaces: number = 0;\r\n\tprotected _prevStepDecimalPlaces: number = 0;\r\n\tprotected _adjustLabelPrecision: boolean = true;\r\n\r\n\t/**\r\n\t * [_difference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _difference: number;\r\n\r\n\t/**\r\n\t * Base value for the axis.\r\n\t */\r\n\tprotected _baseValue: number = 0;\r\n\r\n\t/**\r\n\t * [_previousValue description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousValue: number;\r\n\r\n\t/**\r\n\t * [_previousPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousPoint: IPoint;\r\n\r\n\t/**\r\n\t * Adjusted start in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedStart: number = 0;\r\n\r\n\t/**\r\n\t * Adjusted end in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedEnd: number = 1;\r\n\r\n\tprotected _finalMin: number;\r\n\tprotected _finalMax: number;\r\n\r\n\tprotected _extremesChanged: boolean = false;\r\n\r\n\tprotected _deltaMinMax: number = 1;\r\n\r\n\tprotected _dsc: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem as parameter.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tif (!dataItem.axisFill.disabled) {\r\n\t\t\t// rounding in left to solve floating point number\r\n\t\t\tif ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n\t\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, we\r\n\t * don't do it by default.\r\n\t *\r\n\t * In case you use `totalPercent` or `total` in your charts, this must be set\r\n\t * to `true`.\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n\t */\r\n\tpublic calculateTotals: boolean = false;\r\n\r\n\r\n\tprotected _minMaxAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"value\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000);\r\n\t\tthis.setPropertyValue(\"extraMin\", 0);\r\n\t\tthis.setPropertyValue(\"extraMax\", 0);\r\n\t\tthis.setPropertyValue(\"strictMinMax\", false);\r\n\t\tthis.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n\t\tthis.setPropertyValue(\"adjustLabelPrecision\", true);\r\n\t\tthis.setPropertyValue(\"extraTooltipPrecision\", 0);\r\n\t\tthis.keepSelection = false;\r\n\t\tthis.includeRangesInMinMax = false;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ValueAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new ValueAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\t\tthis.clearCache();\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t\tthis._end = 1;\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._start != 0) {\r\n\t\t\t\tthis.dispatchImmediately(\"startchanged\");\r\n\t\t\t}\r\n\t\t\tif (this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"endchanged\");\r\n\r\n\t\t\t}\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._maxZoomed = this._maxDefined;\r\n\t\tthis._minZoomed = this._minDefined;\r\n\r\n\t\tthis._maxAdjusted = this._maxDefined;\r\n\t\tthis._minAdjusted = this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data items of the related Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\t\t// @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n\t\tif (this.calculateTotals) {\r\n\t\t\tlet series: XYSeries = this.series.getIndex(0);\r\n\t\t\tlet startIndex: number = series.startIndex;\r\n\r\n\t\t\tif (series.dataItems.length > 0) {\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tstartIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tlet endIndex: number = series.endIndex;\r\n\t\t\t\tif (endIndex < series.dataItems.length) {\r\n\t\t\t\t\tendIndex++;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\tfor (let i: number = startIndex; i < endIndex; ++i) {\r\n\t\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\t\tconst total: { [index: string]: number } = {};\r\n\t\t\t\t\tconst sum: { [index: string]: number } = {};\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(total[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] = Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] += Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] = value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] += value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, total[key], \"total\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (!$type.isNumber(this._minAdjusted)) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = null;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tthis.calculateZoom();\r\n\r\n\t\tthis.validateAxisElements();\r\n\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.validateBreaks();\r\n\r\n\t\tthis.hideUnusedDataItems();\r\n\r\n\t\tthis.renderer.invalidateLayout();\r\n\t\t// hide too close\r\n\t\t//this.hideTooCloseDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tif ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet min: number = this.positionToValue(this.start);\r\n\t\t\tlet max: number = this.positionToValue(this.end);\r\n\r\n\t\t\tlet differece: number = this.adjustDifference(min, max);\r\n\t\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\r\n\t\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n\t\t\tthis._stepDecimalPlaces = stepDecimalPlaces;\r\n\r\n\t\t\tmin = $math.round(min, stepDecimalPlaces);\r\n\t\t\tmax = $math.round(max, stepDecimalPlaces);\r\n\r\n\t\t\tminMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\t\t\tlet step = minMaxStep.step;\r\n\r\n\t\t\tif (this.syncWithAxis) {\r\n\t\t\t\tlet calculated = this.getCache(min + \"-\" + max);\r\n\t\t\t\tif ($type.isNumber(calculated)) {\r\n\t\t\t\t\tstep = calculated;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = minMaxStep.min;\r\n\t\t\t\tmax = minMaxStep.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._minZoomed != min || this._maxZoomed != max || this._step != step || this._dsc) {\r\n\t\t\t\tthis._dsc = false;\r\n\t\t\t\tthis._minZoomed = min;\r\n\t\t\t\tthis._maxZoomed = max;\r\n\r\n\t\t\t\tthis._step = step;\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fixSmallStep(step: number): number {\r\n\t\tif (1 + step == 1) {\r\n\t\t\tstep *= 2;\r\n\t\t\treturn this.fixSmallStep(step);\r\n\t\t}\r\n\t\treturn step;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\t// first regular items\r\n\t\t\tlet value: number = this.minZoomed - this._step * 2;\r\n\r\n\t\t\tif (!this.logarithmic) {\r\n\t\t\t\tvalue = Math.floor(value / this._step) * this._step;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = Math.floor(this.minZoomed / this._step) * this._step;\r\n\t\t\t\t\tif (value == 0) {\r\n\t\t\t\t\t\tvalue = this.minZoomed;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet maxZoomed = this._maxZoomed + this._step;\r\n\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\r\n\t\t\tif (this._step == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._step = this.fixSmallStep(this._step);\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\tconst precisionChanged = this._prevStepDecimalPlaces != this._stepDecimalPlaces;\r\n\t\t\tthis._prevStepDecimalPlaces = this._stepDecimalPlaces;\r\n\r\n\t\t\twhile (value <= maxZoomed) {\r\n\t\t\t\tlet axisBreak: ValueAxisBreak = <ValueAxisBreak>this.isInBreak(value);\r\n\r\n\t\t\t\tif (!axisBreak) {\r\n\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === value);\r\n\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\tdataItem.axisBreak = undefined;\r\n\r\n\t\t\t\t\tif (dataItem.value != value || precisionChanged) {\r\n\t\t\t\t\t\tdataItem.value = value;\r\n\t\t\t\t\t\tdataItem.text = this.formatLabel(value);\r\n\r\n\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (dataItem.value >= this.min && dataItem.value <= this.max) {\r\n\t\t\t\t\t\t\tif (dataItem.label) {\r\n\t\t\t\t\t\t\t\tif ((this.axisLetter == \"Y\" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == \"X\" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tlet oldValue = value;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));\r\n\r\n\t\t\t\tif (stepPower < 1) {\r\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n\t\t\t\t\tdecCount = Math.min(13, decCount);\r\n\t\t\t\t\t// round value to avoid floating point issues\r\n\t\t\t\t\tvalue = $math.round(value, decCount);\r\n\t\t\t\t\t// ceil causes problems: https://codepen.io/team/amcharts/pen/XWMjZwy?editors=1010\r\n\t\t\t\t\tif (oldValue == value) {\r\n\t\t\t\t\t\tvalue = maxZoomed;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// breaks later\r\n\t\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance) {\r\n\t\t\t\t\t\t\tlet breakValue: number = axisBreak.adjustedMin;\r\n\r\n\t\t\t\t\t\t\twhile (breakValue <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tif (breakValue >= axisBreak.adjustedStartValue && breakValue <= axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === breakValue);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value != breakValue) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.value = breakValue;\r\n\t\t\t\t\t\t\t\t\t\tdataItem.text = this.formatLabel(breakValue);\r\n\t\t\t\t\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreakValue += axisBreak.adjustedStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tlet value: number = dataItem.value;\r\n\t\tlet endValue: number = dataItem.endValue;\r\n\r\n\t\tlet position: number = this.valueToPosition(value);\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet endPosition: number = position;\r\n\t\tlet fillEndPosition: number = this.valueToPosition(value + this._step);\r\n\r\n\t\tif ($type.isNumber(endValue)) {\r\n\t\t\tendPosition = this.valueToPosition(endValue);\r\n\t\t\tfillEndPosition = endPosition;\r\n\t\t}\r\n\r\n\t\t// this point is needed to calculate distance to satisfy minGridDistance\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, position, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[NumberFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\tif (this.adjustLabelPrecision && value != 0) {\r\n\t\t\treturn this.numberFormatter.format(value, undefined, this._stepDecimalPlaces);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.numberFormatter.format(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\tlet baseValue: number = this.baseValue;\r\n\t\tlet position: number = this.valueToPosition(baseValue);\r\n\t\tlet basePoint: IPoint = this.renderer.positionToPoint(position);\r\n\r\n\t\treturn basePoint;\r\n\t}\r\n\r\n\t/**\r\n\t * A base value.\r\n\t *\r\n\t * This is a threshold value that will divide \"positive\" and \"negative\"\r\n\t * value ranges.\r\n\t *\r\n\t * Other scale-related functionality also depend on base value. E.g. stacks,\r\n\t * value-dependent coloring, etc.\r\n\t *\r\n\t * @param value Base value\r\n\t */\r\n\tpublic set baseValue(value: number) {\r\n\t\tthis._baseValue = value;\r\n\t\tthis.invalidateLayout();\r\n\t\tthis.invalidateSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\r\n\t\tlet baseValue = this._baseValue;\r\n\t\tif (this.logarithmic) {\r\n\t\t\tbaseValue = this.min;\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn baseValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"baseValue\", baseValue);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis\r\n\t *\r\n\t * An alias to `valueToPosition()`.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Position\r\n\t */\r\n\tpublic anyToPosition(value: number): number {\r\n\t\treturn this.valueToPosition(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic valueToPoint(value: number): IOrientationPoint {\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: number): IOrientationPoint {\r\n\t\treturn this.valueToPoint(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t// todo: think if possible to take previous value and do not go through all previous breaks\r\n\t\t\tlet min: number = this.min;\r\n\t\t\tlet max: number = this.max;\r\n\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\t\t\t\tlet difference: number = this._difference;\r\n\r\n\t\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\r\n\t\t\t\t\t\t\tif (value < startValue) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: startValue, end: endValue }, { start: min, end: max })) { // todo: check this once and set some flag in axisBreak\r\n\t\t\t\t\t\t\t\tstartValue = Math.max(startValue, min);\r\n\t\t\t\t\t\t\t\tendValue = Math.min(endValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\t\t\t\tif (value > endValue) {\r\n\t\t\t\t\t\t\t\t\tmin += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\t\t\t\telse if (value < startValue) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvalue = startValue + (value - startValue) * breakSize;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tposition = (value - min) / difference;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\t\t\tif (value <= treatZeroAs) {\r\n\t\t\t\t\t\t\tvalue = treatZeroAs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tposition = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//position = $math.round(position, 10);\r\n\r\n\t\t\t\treturn position;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tsuper.invalidateLabels();\r\n\t\tif (this.dataItems) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = undefined;\r\n\t\t\t})\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an relative position to a corresponding value within\r\n\t * axis' scale.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet min: number = this.min;\r\n\t\tlet max: number = this.max;\r\n\r\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet difference: number = max - min; //no need to adjust!\r\n\r\n\t\t\tlet value: number = null;\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// in case we have some axis breaks\r\n\t\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\t\t\tlet breakStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet breakEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n\r\n\t\t\t\t\t\t\tif (breakStartValue > max) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n\r\n\t\t\t\t\t\t\t\tbreakStartValue = $math.max(breakStartValue, min);\r\n\t\t\t\t\t\t\t\tbreakEndValue = $math.min(breakEndValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tdifference -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\r\n\t\t\t\t\t\t\t\t// position to the right of break end\r\n\t\t\t\t\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\t\t\t\t\tmin += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// position to the left of break start\r\n\t\t\t\t\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlet breakPosition: number = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\t\t\t\t\tvalue = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tif (this.logarithmic) {\r\n\t\t\t\t\tvalue = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = position * difference + min;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an X coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param x  X (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic xToValue(x: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Y coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param y  Y (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic yToValue(y: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\tif (this.renderer instanceof AxisRendererY) {\r\n\t\t\treturn 1 - this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\treturn this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates smallest and biggest value for the axis scale.\r\n\t * @ignore\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic getMinMax() {\r\n\r\n\t\tthis.updateGridCount();\r\n\r\n\t\tlet min: number = Number.POSITIVE_INFINITY;\r\n\t\tlet max: number = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t// only if min and max are not set from outside, we go through min and max influencers\r\n\t\tif (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.ignoreMinMax) {\r\n\t\t\t\t\t// check min\r\n\t\t\t\t\tlet seriesMin: number = series.min(this);\r\n\t\t\t\t\tif ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// check max\r\n\t\t\t\t\tlet seriesMax: number = series.max(this);\r\n\r\n\t\t\t\t\tif ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.includeRangesInMinMax) {\r\n\t\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\r\n\t\t\t\t\t\tif (minValue < min || !$type.isNumber(min)) {\r\n\t\t\t\t\t\t\tmin = minValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (maxValue > max || !$type.isNumber(max)) {\r\n\t\t\t\t\t\t\tmax = maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.logarithmic) {\r\n\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\tif (min <= 0) {\r\n\t\t\t\t\tmin = treatZeroAs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthis.raiseCriticalError(new Error(\"Logarithmic value axis can not have values <= 0.\"), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (min == 0 && max == 0) {\r\n\t\t\tmax = 0.9;\r\n\t\t\tmin = -0.9;\r\n\t\t}\r\n\r\n\t\t// if defined from outside\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._minReal = min;\r\n\t\tthis._maxReal = max;\r\n\r\n\t\tif (min == Number.POSITIVE_INFINITY) {\r\n\t\t\tmin = undefined;\r\n\t\t}\r\n\t\tif (max == Number.NEGATIVE_INFINITY) {\r\n\t\t\tmax = undefined;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n\r\n\r\n\t\tmin = this.fixMin(min);\r\n\t\tmax = this.fixMax(max);\r\n\r\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\r\n\t\t\tif (max - min != 0) {\r\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// the number by which we need to raise 10 to get difference\r\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\r\n\r\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t\t\t// reduce this number by 10 times\r\n\t\t\t\tpower = power / 10;\r\n\r\n\t\t\t\tthis._deltaMinMax = power;\r\n\t\t\t}\r\n\t\t\tmin -= this._deltaMinMax;\r\n\t\t\tmax += this._deltaMinMax;\r\n\t\t}\r\n\r\n\t\tmin -= (max - min) * this.extraMin;\r\n\t\tmax += (max - min) * this.extraMax;\r\n\r\n\t\tlet strict = this.strictMinMax;\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tstrict = true;\r\n\t\t}\r\n\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\tdif = max - min;  //new\r\n\r\n\t\t// do it for the second time (importat!)\r\n\t\tminMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\t// return min max if strict\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\t\tmin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = this._minReal;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\t\tmax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmax = this._maxReal;\r\n\t\t\t}\r\n\r\n\t\t\tif (max - min <= 0.00000001) {\r\n\t\t\t\tmin -= this._deltaMinMax;\r\n\t\t\t\tmax += this._deltaMinMax;\r\n\t\t\t}\r\n\r\n\t\t\tmin -= (max - min) * this.extraMin;\r\n\t\t\tmax += (max - min) * this.extraMax;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tthis._step = minMaxStep.step;\r\n\r\n\t\tif (!$type.isNumber(min) && !$type.isNumber(max)) {\r\n\t\t\tthis.start = 0;\r\n\t\t\tthis.end = 1;\r\n\r\n\t\t\tthis.renderer.labels.each((label) => {\r\n\t\t\t\tlabel.dataItem.text = \"\";\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// checking isNumber is good when all series are hidden\r\n\t\tif ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet animation = this._minMaxAnimation;\r\n\r\n\t\t\tif (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tanimation = this.animateMinMax(min, max);\r\n\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n\r\n\t\t\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\t\t//this.validateDataItems();\r\n\t\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\t\tseries.validate();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._minMaxAnimation = animation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\tseries.invalidate();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._minAdjusted = min;\r\n\t\t\t\t\tthis._maxAdjusted = max;\r\n\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._extremesChanged = false;\r\n\t\tthis._difference = this.adjustDifference(min, max);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\t// will fail if 0\r\n\t\tif (gridCount <= 1) {\r\n\t\t\tgridCount = 1;\r\n\t\t}\r\n\r\n\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\tlet initialMin: number = min;\r\n\t\tlet initialMax: number = max;\r\n\r\n\t\t// in case min and max is the same, use max\r\n\t\tif (difference === 0) {\r\n\t\t\tdifference = Math.abs(max);\r\n\t\t}\r\n\r\n\t\t// the number by which we need to raise 10 to get difference\r\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\r\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t// reduce this number by 10 times\r\n\t\tpower = power / 10;\r\n\r\n\t\tlet extra: number = power;\r\n\t\tif (strictMode) {\r\n\t\t\textra = 0;\r\n\t\t}\r\n\r\n\t\tif (!this.logarithmic) {\r\n\r\n\t\t\t// round down min\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin = Math.floor(min / power) * power;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.ceil(max / power) * power;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\r\n\t\t\t}\r\n\r\n\t\t\t// don't let min go below 0 if real min is >= 0\r\n\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\t// don't let max go above 0 if real max is <= 0\r\n\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\r\n\t\t\t\tmin = this.baseValue;\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: think of a better way or to restrict zooming when no series are selected\r\n\t\t\tif (min == Infinity) {\r\n\t\t\t\tmin = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (max == -Infinity) {\r\n\t\t\t\tmax = 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tif (this._minDefined > 0) {\r\n\t\t\t\t\tmin = this._minDefined;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmin = min;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._maxDefined > 0) {\r\n\t\t\t\t\tmax = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n\t\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// repeat diff, exponent and power again with rounded values\r\n\t\t//difference = this.adjustDifference(min, max);\r\n\t\t/*\r\n\r\n\t\t\t\tif(min > initialMin){\r\n\t\t\t\t\tmin = initialMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(max < initialMax){\r\n\t\t\t\t\tmax = initialMax;\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\t\tpower = Math.pow(10, Math.floor(exponent));\r\n\t\tpower = power / 10;\r\n\r\n\t\t// approximate difference between two grid lines\r\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\r\n\r\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n\r\n\t\t// TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n\t\t// the step should divide by  2, 5, and 10.\r\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\r\n\r\n\r\n\t\tif (stepDivisor > 5) {\r\n\t\t\tstepDivisor = 10;\r\n\t\t}\r\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\r\n\t\t\tstepDivisor = 5;\r\n\t\t}\r\n\r\n\t\t// now get real step\r\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n\r\n\t\tif (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n\t\t\tstep = $math.ceil(step, this.maxPrecision);\r\n\t\t}\r\n\r\n\t\tlet decCount: number = 0;\r\n\t\t// in case numbers are smaller than 1\r\n\t\tif (stepPower < 1) {\r\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n\t\t\t// round step\r\n\t\t\tstep = $math.round(step, decCount);\r\n\t\t}\r\n\t\tif (!this.logarithmic) {\r\n\t\t\t// final min and max\r\n\t\t\tlet minCount = Math.floor(min / step);\r\n\r\n\t\t\tmin = $math.round(step * minCount, decCount);\r\n\r\n\t\t\tlet maxCount: number;\r\n\r\n\t\t\tif (!strictMode) {\r\n\t\t\t\tmaxCount = Math.ceil(max / step);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxCount = Math.floor(max / step);\r\n\t\t\t}\r\n\r\n\t\t\tif (maxCount == minCount) {\r\n\t\t\t\tmaxCount++;\r\n\t\t\t}\r\n\r\n\t\t\tmax = $math.round(step * maxCount, decCount);\r\n\r\n\t\t\tif (max < initialMax) {\r\n\t\t\t\tmax = max + step;\r\n\t\t\t}\r\n\r\n\t\t\tif (min > initialMin) {\r\n\t\t\t\tmin = min - step;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * A minimum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Min value\r\n\t */\r\n\tpublic set min(value: number | undefined) {\r\n\t\tif (this._minDefined != value) {\r\n\t\t\tthis._minDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min value\r\n\t */\r\n\tpublic get min(): number | undefined {\r\n\t\tlet min = this._minAdjusted;\r\n\t\tif (!$type.isNumber(min)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Min value\r\n\t */\r\n\tpublic get minDefined(): number {\r\n\t\treturn this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Max value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Man value\r\n\t */\r\n\tpublic get maxDefined(): number {\r\n\t\treturn this._maxDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting minimum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n\t * we asked to expand minimum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMin(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMin\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get extraMin(): number {\r\n\t\treturn this.getPropertyValue(\"extraMin\");\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting maximum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n\t * we asked to expand maximum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMax(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMax\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min multiplier\r\n\t */\r\n\tpublic get extraMax(): number {\r\n\t\treturn this.getPropertyValue(\"extraMax\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Current calculated delta in values between two adjacent grid lines (step).\r\n\t *\r\n\t * This is a read-only value and cannot be used to set actual step.\r\n\t *\r\n\t * @readonly\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n\t * @return [description]\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this._step;\r\n\t}\r\n\r\n\t/**\r\n\t * A maximum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Max value\r\n\t */\r\n\tpublic set max(value: number | undefined) {\r\n\t\tif (this._maxDefined != value) {\r\n\t\t\tthis._maxDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max value\r\n\t */\r\n\tpublic get max(): number | undefined {\r\n\t\tlet max = this._maxAdjusted;\r\n\t\tif (!$type.isNumber(max)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * By default the axis will adjust precision of all numbers to match number\r\n\t * of decimals in all its labels, e.g.: `1.0`, `1.5`, `2.0`.\r\n\t *\r\n\t * To disable set `adjustLabelPrecision` to `false`, to use whatever other\r\n\t * precision or number format settings are set.\r\n\t *\r\n\t * IMPORTANT: This setting will be ignored if your number format uses\r\n\t * modifiers, e.g. `\"#a\"`.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.14\r\n\t * @param  value  Adjust precision\r\n\t */\r\n\tpublic set adjustLabelPrecision(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"adjustLabelPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Adjust precision\r\n\t */\r\n\tpublic get adjustLabelPrecision(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustLabelPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the Series to register itself as the user of this Axis.\r\n\t *\r\n\t * This will also decorate both the Series and Axis with event handlers, used\r\n\t * to redraw on Axis position/zoom change.\r\n\t *\r\n\t * A disposer for those events is returned, so that they can be disposed\r\n\t * together with Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series  Series\r\n\t * @return Disposer for events\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\treturn new MultiDisposer([\r\n\t\t\tsuper.registerSeries(series),\r\n\r\n\t\t\tseries.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n\t\t\tseries.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n\t\t\tthis.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform tasks after Axis zoom.\r\n\t */\r\n\tprotected handleSelectionExtremesChange(): void {\r\n\r\n\t\tlet selectionMin: number;\r\n\t\tlet selectionMax: number;\r\n\r\n\t\tlet allHidden: boolean = true;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.ignoreMinMax && !series.isHidden && !series.outOfRange) {\r\n\r\n\t\t\t\tif (series.visible && !series.isHiding) {\r\n\t\t\t\t\tallHidden = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesSelectionMin: number = series.selectionMin(this);\r\n\t\t\t\tlet seriesSelectionMax: number = series.selectionMax(this);\r\n\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMin)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n\t\t\t\t\t\tselectionMin = seriesSelectionMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check max\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMax)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n\t\t\t\t\t\tselectionMax = seriesSelectionMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.includeRangesInMinMax) {\r\n\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\t\t\t\t\tif (minValue < selectionMin) {\r\n\t\t\t\t\t\tselectionMin = minValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (maxValue > selectionMax) {\r\n\t\t\t\t\t\tselectionMax = maxValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method\r\n\t\t//$iter.each(this.series.iterator(), (series) => {\r\n\t\t//\tif (!series.appeared) {\r\n\t\t//\t\tallHidden = true;\r\n\t\t//\t}\r\n\t\t//})\r\n\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMin = this.min;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMin = this._minReal;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMax = this.max;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMax = this._maxReal;\r\n\t\t}\r\n\r\n\t\tif (selectionMin == selectionMax) {\r\n\r\n\t\t\tselectionMin -= this._deltaMinMax;\r\n\t\t\tselectionMax += this._deltaMinMax;\r\n\r\n\t\t\tlet minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);\r\n\t\t\tselectionMin = minMaxStep2.min;\r\n\t\t\tselectionMax = minMaxStep2.max;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tselectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n\t\tselectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n\r\n\t\tselectionMin = $math.fitToRange(selectionMin, this.min, this.max);\r\n\t\tselectionMax = $math.fitToRange(selectionMax, this.min, this.max);\r\n\r\n\t\t// do it for the second time !important\r\n\t\tdif = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tminMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tselectionMin = $math.max(selectionMin, this._minDefined);\r\n\t\t\tselectionMax = $math.min(selectionMax, this._maxDefined);\r\n\t\t}\r\n\t\tlet step = minMaxStep.step;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tminMaxStep = this.syncAxes(selectionMin, selectionMax, step)\r\n\t\t\tselectionMin = minMaxStep.min;\r\n\t\t\tselectionMax = minMaxStep.max;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\tstep = minMaxStep.step;\r\n\r\n\t\t// needed because of grouping\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\r\n\t\tlet start: number = this.valueToPosition(selectionMin);\r\n\t\tlet end: number = this.valueToPosition(selectionMax);\r\n\r\n\t\t// in case all series are hidden or hiding, full zoomout\r\n\t\tif (allHidden && !this.syncWithAxis) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t}\r\n\r\n\t\tlet declination = 0;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tdeclination = 5;\r\n\t\t\tthis.setCache(selectionMin + \"-\" + selectionMax, step);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._step != step || this._minZoomed != selectionMin || this._maxZoomed != selectionMax) {\r\n\t\t\t\tthis._dsc = true;\r\n\t\t\t}\r\n\t\t\tthis._step = step;\r\n\t\t\tthis._minZoomed = selectionMin;\r\n\t\t\tthis._maxZoomed = selectionMax;\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tthis.zoom({ start: start, end: end }, false, false, declination);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether to blindly use exact `min` and `max` values set by user\r\n\t * when generating Axis scale.\r\n\t *\r\n\t * If not set, the Axis might slightly adjust those values to accomodate a\r\n\t * better looking grid.\r\n\t *\r\n\t * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`\r\n\t * will result in fixing the scale of the axis to actual lowest and highest\r\n\t * values in the series within currently selected scope.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use exact values?\r\n\t */\r\n\tpublic set strictMinMax(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"strictMinMax\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use exact values?\r\n\t */\r\n\tpublic get strictMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"strictMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this axis should use a logarithmic scale.\r\n\t *\r\n\t * Please note that logarithmic axis can **only** accommodate values bigger\r\n\t * than zero.\r\n\t *\r\n\t * Having zero or negative values will result in error and failure of the\r\n\t * whole chart.\r\n\t *\r\n\t * @param value Logarithmic scale?\r\n\t */\r\n\tpublic set logarithmic(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"logarithmic\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Logarithmic scale?\r\n\t */\r\n\tpublic get logarithmic(): boolean {\r\n\t\treturn this.getPropertyValue(\"logarithmic\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if a current selection (zoom) should be kept across data updates.\r\n\t *\r\n\t * If your axis is zoomed while chart's data is updated, the axis will try\r\n\t * to retain the same start and end values.\r\n\t *\r\n\t * You can also use this to initially pre-zoom axis:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"keepSelection\": true,\r\n\t *     \"start\": 0.5,\r\n\t *     \"end\": 0.7\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will start the chart zoomed from the middle of the actual scope\r\n\t * to 70%.\r\n\t *\r\n\t * @since 4.1.1\r\n\t * @default false\r\n\t * @param  value  Preseve zoom after data update?\r\n\t */\r\n\tpublic set keepSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"keepSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Preseve zoom after data update?\r\n\t */\r\n\tpublic get keepSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"keepSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, values of axis ranges will be included when calculating\r\n\t * range of values / scale of the [[ValueAxis]].\r\n\t *\r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Include ranges?\r\n\t */\r\n\tpublic set includeRangesInMinMax(value: boolean) {\r\n\t\tthis.setPropertyValue(\"includeRangesInMinMax\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Include ranges?\r\n\t */\r\n\tpublic get includeRangesInMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"includeRangesInMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of decimals to allow when placing grid lines and labels\r\n\t * on axis.\r\n\t *\r\n\t * Set it to `0` (zero) to force integer-only axis labels.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return max precision\r\n\t */\r\n\tpublic get maxPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"maxPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * This setting allows using bigger precision for numbers displayed in axis\r\n\t * tooltip.\r\n\t *\r\n\t * Please note that this setting indicates additional decimal places to\r\n\t * automatically-calculated axis number precision.\r\n\t *\r\n\t * So if your axis displays numbers like 0.1, 0.2, etc. (one decimal place),\r\n\t * and you set `extraTooltipPrecision = 1`, tooltips will display numbers\r\n\t * like 0.12, 0.25, etc. (two decimal places).\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.8.3\r\n\t * @param  value  Extra decimals\r\n\t */\r\n\tpublic set extraTooltipPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraTooltipPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Extra decimals\r\n\t */\r\n\tpublic get extraTooltipPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"extraTooltipPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tthis._extremesChanged = true;\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tlet mw = 0;\r\n\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tif (dataItem.label && dataItem.label.pixelWidth > mw) {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  ?\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  ?\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueX\";\r\n\t\t}\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  Stack ID\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start     [description]\r\n\t * @param end       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: number, end: number, location?: number): string {\r\n\t\tlet startPosition: number = this.valueToPosition(start);\r\n\t\tlet endPosition: number = this.valueToPosition(end);\r\n\r\n\t\treturn this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces + this.extraTooltipPrecision);\r\n\t\tlet valueStr = this.tooltip.numberFormatter.format(value);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean): void {\r\n\t\tlet start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\tlet end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A smallest value in axis scale within current zoom.\r\n\t *\r\n\t * @return Min zoom value\r\n\t */\r\n\tpublic get minZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.max(this.min, this._minZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._minZoomed\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A biggest value in axis scale within current zoom.\r\n\t * @return [description]\r\n\t */\r\n\tpublic get maxZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.min(this.max, this._maxZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._maxZoomed;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t// process breaks\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t// break difference\r\n\t\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif * axisBreak.breakSize) * this._gridCount / (this.max - this.min);\r\n\r\n\t\t\t\t// calculate min, max and step for axis break\r\n\t\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);\r\n\r\n\t\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet value: number = this.positionToValue(position);\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific value\r\n\t *\r\n\t * @param value Value\r\n\t */\r\n\tpublic showTooltipAt(value: number) {\r\n\t\tthis.showTooltipAtPosition(this.valueToPosition(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.min = source.min;\r\n\t\tthis.max = source.max;\r\n\t\tthis.calculateTotals = source.calculateTotals;\r\n\t\tthis._baseValue = source.baseValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Enables syncing of grid with another axis.\r\n\t *\r\n\t * To enable, set to a reference of the other `ValueAxis`. This axis will try\r\n\t * to maintain its scale in such way that its grid matches target axis grid.\r\n\t *\r\n\t * IMPORTANT #1: At this stage it's an experimental feature. Use it at your\r\n\t * own risk, as it may not work in 100% of the scenarios.\r\n\t *\r\n\t * IMPORTANT #2: `syncWithAxis` is not compatible with `strictMinMax` and\r\n\t * `sequencedInterpolation` settings.\r\n\t * \r\n\t * IMPORTANT #3: `syncWithAxis` is not compatible with scrollbars. Make sure\r\n\t * you do not add a scrollbar in the same direction as synced axes. For\r\n\t * example, if you have vertical synced axes, do not add `scrollbarY` on\r\n\t * your chart. It will create anomalies when used.\r\n\t *\r\n\t * IMPORTANT #4: `syncWithAxis` is not compatible with `XYCursor` if it has\r\n\t * its `behavior` set to either `zoomY` or `zoomXY`.\r\n\t *\r\n\t * @since 4.8.1\r\n\t * @param  axis  Target axis\r\n\t */\r\n\tpublic set syncWithAxis(axis: ValueAxis) {\r\n\t\tif (this.setPropertyValue(\"syncWithAxis\", axis, true)) {\r\n\t\t\tif (axis) {\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"extremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"startendchanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis.events.on(\"shown\", this.handleSelectionExtremesChange, this, false);\r\n\t\t\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\t\t\tthis.clearCache();\r\n\t\t\t\t\tthis._disposers.push(registry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t}))\r\n\t\t\t\t}, this, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target axis\r\n\t */\r\n\tpublic get syncWithAxis(): ValueAxis {\r\n\t\treturn this.getPropertyValue(\"syncWithAxis\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set, zero values will be treated as this value.\r\n\t *\r\n\t * It is useful if you need to use data with zero-values on a logarithmic\r\n\t * axis scale.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Zero replacement value\r\n\t */\r\n\tpublic set treatZeroAs(value: number) {\r\n\t\tthis.setPropertyValue(\"treatZeroAs\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zero replacement value\r\n\t */\r\n\tpublic get treatZeroAs(): number {\r\n\t\treturn this.getPropertyValue(\"treatZeroAs\");\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs with a target axis.\r\n\t *\r\n\t * @param  min  Min\r\n\t * @param  max  Max\r\n\t * @param  step Step\r\n\t */\r\n\tprotected syncAxes(min: number, max: number, step: number) {\r\n\t\tlet axis = this.syncWithAxis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tif (!$type.isNumber(min)) {\r\n\t\t\t\tmin = this.min;\r\n\t\t\t}\r\n\t\t\tif (!$type.isNumber(max)) {\r\n\t\t\t\tmax = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(step)) {\r\n\t\t\t\tstep = this._step;\r\n\t\t\t}\r\n\r\n\t\t\tlet count: number = Math.round((axis.maxZoomed - axis.minZoomed) / axis.step);\r\n\t\t\tlet currentCount = Math.round((max - min) / step);\r\n\r\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n\t\t\t\tlet synced = false;\r\n\t\t\t\tlet c = 0\r\n\t\t\t\tlet diff = (max - min) * 0.01;\r\n\t\t\t\tlet omin = min;\r\n\t\t\t\tlet omax = max;\r\n\t\t\t\tlet ostep = step;\r\n\r\n\t\t\t\twhile (synced != true) {\r\n\t\t\t\t\tsynced = this.checkSync(omin, omax, ostep, count);\r\n\t\t\t\t\tc++;\r\n\t\t\t\t\tif (c > 1000) {\r\n\t\t\t\t\t\tsynced = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!synced) {\r\n\t\t\t\t\t\t//omin = min - diff * c;\r\n\r\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\r\n\t\t\t\t\t\t\tomin = min - diff * c;\r\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\r\n\t\t\t\t\t\t\t\tomin = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tomax = max + diff * c;\r\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\r\n\t\t\t\t\t\t\t\tomax = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet minMaxStep = this.adjustMinMax(omin, omax, omax - omin, this._gridCount, true);\r\n\t\t\t\t\t\tomin = minMaxStep.min;\r\n\t\t\t\t\t\tomax = minMaxStep.max;\r\n\t\t\t\t\t\tostep = minMaxStep.step;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmin = omin;\r\n\t\t\t\t\t\tmax = omax;\r\n\t\t\t\t\t\tstep = ostep;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if axis needs to be resunced with some other axis.\r\n\t */\r\n\tprotected checkSync(min: number, max: number, step: number, count: number): boolean {\r\n\t\tlet currentCount = (max - min) / step;\r\n\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.syncWithAxis) && $type.isString(config.syncWithAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.syncWithAxis)) {\r\n\t\t\t\t\tconfig.syncWithAxis = this.map.getKey(config.syncWithAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[ValueAxis] No axis with id \\\"\" + config.syncWithAxis + \"\\\" found for `syncWithAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { VerticalCenter } from \"../../core/defs/VerticalCenter\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererXAdapters extends IAxisRendererAdapters, IAxisRendererXProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererXProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererXAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererXEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisRendererX\";\r\n\r\n\t\tthis.minGridDistance = 120;\r\n\r\n\t\tthis.opposite = false;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.width = percent(100);\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"vertical\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.x = axis.pixelX;\r\n\t\t\tgridContainer.width = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\t// can not do this in init, as axis is set later\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tif (!(axis.width instanceof Percent)) {\r\n\t\t\t\taxis.width = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\t// @todo Is thi sneeded?\r\n\t\t\t$utils.used(this.line);\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.rotation = 0;\r\n\t\t\ttitle.align = \"center\";\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t\tthis.toBack();\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet bigNum: number = 1000;\r\n\t\t\tlet bbx: number = this.line.pixelX;\r\n\t\t\tlet bby: number = this.line.pixelY;\r\n\t\t\tlet bbw: number = this.axisLength;\r\n\r\n\t\t\tlet bbh: number = bigNum;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\telse {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet deltaY = 0;\r\n\t\tlet verticalCenter: VerticalCenter;\r\n\t\tlet maxHeight = this.gridContainer.maxHeight;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\tif (label.valign == \"bottom\") {\r\n\t\t\t\t\tdeltaY = maxHeight;\r\n\t\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y = deltaY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\tif (label.valign == \"top\") {\r\n\t\t\t\t\tdeltaY = -maxHeight;\r\n\t\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = -maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y += deltaY;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.verticalCenter = verticalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.x, point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet x1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet x2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet w: number = Math.abs(x2 - x1);\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet x: number = Math.min(x1, x2);\r\n\t\tlet y: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet y1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet y2: number = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n\r\n\t\tstartPoint.x = $math.fitToRange(startPoint.x, -1, this.axisLength + 1);\r\n\t\tendPoint.x = $math.fitToRange(endPoint.x, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tstartLine.y = y1;\r\n\t\tstartLine.width = 0;\r\n\t\tstartLine.height = y2;\r\n\r\n\t\tendLine.y = y1;\r\n\t\tendLine.width = 0;\r\n\t\tendLine.height = y2;\r\n\r\n\t\tfillShape.height = y2;\r\n\t\tfillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n\t\tfillShape.y = y1;\r\n\t\tfillShape.x = startPoint.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet w: number = this.axisLength;\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tlet x: number = axis.basePoint.x;\r\n\t\tif (x < -0.2 || x > w + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(false, true, false, true);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet inversedPosition = value;\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet x = axis.pixelX;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tx = $utils.spritePointToSprite({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif(relativePositionSprite){\r\n\t\t\t\tlet relativeX = x / relativePositionSprite.innerWidth;\r\n\t\t\t\tlet relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;\r\n\r\n\t\t\t\treturn (inversedPosition - relativeX) / relativeWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * HeatLegend module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * Minimum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxValue?: number;\r\n\r\n\r\n\t/**\r\n\t * Maximum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxColor?: Color;\r\n\r\n\t/**\r\n\t * Number of markers (steps)\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmarkerCount?: number;\r\n\r\n\r\n\t/**\r\n\t * Orientation\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatLegend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatLegendAdapters extends IContainerAdapters, IHeatLegendProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class HeatLegend extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IHeatLegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IHeatLegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IHeatLegendEvents;\r\n\r\n\t/**\r\n\t * List of heat legend markers (color step rectangles).\r\n\t */\r\n\tpublic markers: ListTemplate<RoundedRectangle>;\r\n\r\n\t/**\r\n\t * Container which holds markers\r\n\t */\r\n\tpublic markerContainer: Container;\r\n\r\n\t/**\r\n\t * Value axis of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _valueAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * Series of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _series: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatLegend\";\r\n\r\n\t\tthis.markerContainer = this.createChild(Container);\r\n\t\tthis.markerContainer.shouldClone = false;\r\n\r\n\t\tthis.markerCount = 1;\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: RoundedRectangle = new RoundedRectangle();\r\n\t\tmarker.minHeight = 20;\r\n\t\tmarker.minWidth = 20;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.fillOpacity = 1;\r\n\t\tmarker.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tthis.markerContainer.minHeight = 20;\r\n\t\tthis.markerContainer.minWidth = 20;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\tthis.markers = new ListTemplate<RoundedRectangle>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tprotected getMinFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet minValue;\r\n\t\t\t$iter.eachContinue(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tminValue = heatRule.min;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getMaxFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet maxValue;\r\n\t\t\t$iter.each(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tmaxValue = heatRule.max;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.valueAxis.renderer.inversed = this.reverseOrder;\r\n\r\n\t\tlet series = this.series;\r\n\r\n\t\tlet minColor = this.minColor;\r\n\t\tlet maxColor = this.maxColor;\r\n\r\n\t\tif (!$type.hasValue(minColor)) {\r\n\t\t\tminColor = toColor(this.getMinFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (series) {\r\n\t\t\tlet seriesFill = series.fill;\r\n\t\t\tif (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n\t\t\t\tminColor = seriesFill;\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n\t\t\t\tmaxColor = seriesFill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tlet minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(minOpacity)) {\r\n\t\t\tminOpacity = 1;\r\n\t\t}\r\n\t\tlet maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(maxOpacity)) {\r\n\t\t\tmaxOpacity = 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(minStrokeOpacity)) {\r\n\t\t\tminStrokeOpacity = 1;\r\n\t\t}\r\n\t\tlet maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(maxStrokeOpacity)) {\r\n\t\t\tmaxStrokeOpacity = 1;\r\n\t\t}\r\n\r\n\t\tlet minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n\t\tlet maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n\r\n\r\n\t\t//if (series) {\r\n\t\tfor (let i = 0; i < this.markerCount; i++) {\r\n\t\t\tlet marker = this.markers.getIndex(i);\r\n\r\n\t\t\tif (!marker) {\r\n\t\t\t\tmarker = this.markers.create();\r\n\t\t\t\tmarker.parent = this.markerContainer;\r\n\t\t\t\tmarker.height = percent(100);\r\n\t\t\t\tmarker.width = percent(100);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.markerCount == 1) {\r\n\t\t\t\tlet gradient = new LinearGradient();\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tgradient.rotation = -90;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmarker.fill = gradient;\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet strokeGradient = new LinearGradient();\r\n\t\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\tstrokeGradient.rotation = -90;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmarker.stroke = strokeGradient;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet c = i;\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tc = this.markerCount - i - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, c / this.markerCount));\r\n\t\t\t\tmarker.fill = color;\r\n\r\n\t\t\t\tlet opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;\r\n\t\t\t\tmarker.fillOpacity = opacity;\r\n\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet color = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, c / this.markerCount));\r\n\t\t\t\t\tmarker.stroke = color;\r\n\r\n\t\t\t\t\tlet opacity = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;\r\n\t\t\t\t\tmarker.strokeOpacity = opacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet renderer = this.valueAxis.renderer;\r\n\t\tif (this.markerCount > 1) {\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\trenderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.valueAxis.invalidate();\r\n\r\n\t\tfor (let i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n\t\t\tthis.markers.getIndex(i).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maxColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\treturn this.getPropertyValue(\"maxColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set markerCount(value: number) {\r\n\t\tthis.setPropertyValue(\"markerCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of color squares (markers).\r\n\t * @return {number}\r\n\t */\r\n\tpublic get markerCount(): number {\r\n\t\treturn this.getPropertyValue(\"markerCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis.setPropertyValue(\"minValue\", value);\r\n\t\tthis.valueAxis.min = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minimum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis.setPropertyValue(\"maxValue\", value);\r\n\t\tthis.valueAxis.max = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\treturn this.getPropertyValue(\"maxValue\");\r\n\t}\r\n\r\n\t/**\r\n\t* Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n\t*\r\n\t* @param {\"horizontal\" | \"vertical\"}\r\n\t*/\r\n\tpublic set orientation(value: \"horizontal\" | \"vertical\") {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet markerContainer = this.markerContainer;\r\n\t\tlet valueAxis = this.valueAxis;\r\n\r\n\t\t// HORIZONTAL\r\n\t\tif (value == \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.width)) {\r\n\t\t\t\tthis.width = 200;\r\n\t\t\t}\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tvalueAxis.width = percent(100);\r\n\t\t\tvalueAxis.height = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"vertical\";\r\n\r\n\t\t\tthis.layout = \"vertical\";\r\n\t\t\tmarkerContainer.width = percent(100);\r\n\t\t\tmarkerContainer.height = undefined;\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererX();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// VERTICAL\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.height)) {\r\n\t\t\t\tthis.height = 200;\r\n\t\t\t}\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.layout = \"horizontal\";\r\n\t\t\tmarkerContainer.width = undefined;\r\n\t\t\tmarkerContainer.height = percent(100);\r\n\t\t\tvalueAxis.height = percent(100);\r\n\t\t\tvalueAxis.width = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererY();\r\n\t\t\t}\r\n\t\t\tvalueAxis.renderer.inside = true;\r\n\t\t\tvalueAxis.renderer.labels.template.inside = true;\r\n\r\n\t\t\tthis.markerContainer.reverseOrder = true;\r\n\t\t}\r\n\r\n\t\tlet renderer = valueAxis.renderer;\r\n\t\trenderer.grid.template.disabled = true;\r\n\t\trenderer.axisFills.template.disabled = true;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t\trenderer.labels.template.padding(2, 3, 2, 3);\r\n\r\n\t\trenderer.minHeight = undefined;\r\n\t\trenderer.minWidth = undefined;\r\n\r\n\t\tthis.markerContainer.layout = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns orientation value.\r\n\t *\r\n\t * @return {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\tpublic get orientation(): \"horizontal\" | \"vertical\" {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n\t * @param {ValueAxis}\r\n\t */\r\n\tpublic set valueAxis(valueAxis: ValueAxis) {\r\n\r\n\t\tthis._valueAxis = valueAxis;\r\n\r\n\t\tvalueAxis.parent = this;\r\n\t\tvalueAxis.strictMinMax = true;\r\n\t\tthis.orientation = this.orientation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns valueAxis value.\r\n\t * @return {ValueAxis}\r\n\t */\r\n\tpublic get valueAxis(): ValueAxis {\r\n\t\tif (!this._valueAxis) {\r\n\t\t\tthis.valueAxis = this.createChild(ValueAxis);\r\n\t\t\tthis.valueAxis.shouldClone = false;\r\n\t\t}\r\n\t\treturn this._valueAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n\t * @param series\r\n\t */\r\n\tset series(series: Series) {\r\n\t\tthis._series = series;\r\n\r\n\t\tlet dataField = \"value\";\r\n\r\n\t\ttry {\r\n\t\t\tlet dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n\t\t\tif (dataFieldDefined) {\r\n\t\t\t\tdataField = dataFieldDefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\r\n\t\tseries.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\t\t}, undefined, false);\r\n\r\n\t\tseries.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n\t\tseries.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns series value.\r\n\t * @return {Series}\r\n\t */\r\n\tget series(): Series {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates min/max of value axis.\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMinMax(min: number, max: number) {\r\n\t\tlet valueAxis = this.valueAxis;\r\n\t\tif (!$type.isNumber(this.minValue)) {\r\n\t\t\tvalueAxis.min = min;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.maxValue)) {\r\n\t\t\tvalueAxis.max = max;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n\t\t\t\tif ($type.isString(config.series)) {\r\n\t\t\t\t\tif (this.map.hasKey(config.series)) {\r\n\t\t\t\t\t\tconfig.series = this.map.getKey(config.series);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet seriesId = config.series;\r\n\t\t\t\t\t\tconst disposer = this.map.events.on(\"insertKey\", function(ev) {\r\n\t\t\t\t\t\t\tif (ev.key == seriesId) {\r\n\t\t\t\t\t\t\t\tthis.series = ev.newValue;\r\n\t\t\t\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t\tdelete config.series;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n","/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n\tlogarithmic?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bullets: Dictionary<string, Sprite>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t */\r\n\tpublic get bullets(): Dictionary<string, Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new Dictionary<string, Sprite>();\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._bullets));\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.bullets.clear();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t */\r\n\tname?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t */\r\n\titemReaderText: string\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t */\r\n\tprotected _bullets: ListTemplate<Sprite>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/**\r\n\t * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n\t */\r\n\tprotected _itemReaderTextChanged: boolean = false;\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * Most of the series use absolute values. However sometimes various\r\n\t * calculated percent values are need, e.g. item's percent representation\r\n\t * across all values in series, etc.\r\n\t *\r\n\t * It's a resource-intensive operation, so it is disabled by default.\r\n\t *\r\n\t * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n\t * or creating 100% stacks, this setting needs to be set to `true`.\r\n\t *\r\n\t * NOTE: `PieChart`, which relies on slice percentages, has this\r\n\t * automatically set to `true`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * When `calculatePercent` is enabled and data item's percent value is\r\n\t * calculated, last item's real value is used instead of its working value.\r\n\t *\r\n\t * This is done for the animations when last item in series (e.g. slice in\r\n\t * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n\t * calculated percent would always be 100%).\r\n\t *\r\n\t * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n\t * hack by setting `usePercentHack` to `false`.\r\n\t *\r\n\t * @since 4.9.13\r\n\t * @default true\r\n\t */\r\n\tpublic usePercentHack: boolean = true;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from\r\n\t * chart's `series` list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * When chart/series' data is processed, all kinds of derivative values are\r\n\t * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n\t * time-consuming operation, especially prominent in data-heavy charts.\r\n\t *\r\n\t * If your chart does not need those values, and you have a lot of data,\r\n\t * setting this to `true` might give a dramatic increase in initial chart\r\n\t * load speed.\r\n\t *\r\n\t * Please note, regular column and line series usage scenarios do not\r\n\t * require derivative values. Those come into play only when you do advanced\r\n\t * functionality like coloring segments of charts in different colors\r\n\t * depending on change between open and close values, have stacked series, or\r\n\t * display any of the derived values, like percent, in tooltips or bullets.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic simplifiedProcessing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Series) {\r\n\t\t\tthrow new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n\t\t}\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * We need this here so that class names can be applied to bullets container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName && this.bulletsContainer) {\r\n\t\t\tthis.bulletsContainer.className = this.className + \"-bullets\";\r\n\t\t\tthis.bulletsContainer.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param bullet  Sprite\r\n\t */\r\n\tpublic positionBullet(bullet: Sprite): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Sprite>[\"inserted\"]) {\r\n\t\tlet bullet: Sprite = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tthis.events.once(\"datavalidated\", (ev) => {\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tbullet.focusable = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Sprite>[\"removed\"]) {\r\n\t\tlet bullet: Sprite = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tif ($object.hasKey(dataItem.values, key)) {\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\t//if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t//startIndex++;\r\n\t\t//}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getAbsoluteFirstValue(key: string): number {\r\n\t\tfor (let i = 0; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tif (!this.simplifiedProcessing) {\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tlet count: { [index: string]: number } = {};\r\n\t\t\tlet sum: { [index: string]: number } = {};\r\n\t\t\tlet absoluteSum: { [index: string]: number } = {};\r\n\t\t\tlet low: { [index: string]: number } = {};\r\n\t\t\tlet high: { [index: string]: number } = {};\r\n\t\t\tlet open: { [index: string]: number } = {};\r\n\t\t\tlet close: { [index: string]: number } = {};\r\n\t\t\tlet previous: { [index: string]: number } = {};\r\n\t\t\tlet first: { [index: string]: number } = {};\r\n\t\t\tlet absoluteFirst: { [index: string]: number } = {};\r\n\r\n\t\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\t\tlet startIndex: number = $math.max(0, this.startIndex);\r\n\t\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\t\tlet endIndex: number = $math.min(this.endIndex, this.dataItems.length);\r\n\r\n\t\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\t\tstartIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\t\tendIndex = this.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// absolute sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteSum[key])) {\r\n\t\t\t\t\t\t\tabsoluteSum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tabsoluteSum[key] += Math.abs(value);\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteFirst[key])) {\r\n\t\t\t\t\t\t\tabsoluteFirst[key] = this.getAbsoluteFirstValue(key);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// change\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]), \"startChange\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]) / absoluteFirst[key] * 100, \"startChangePercent\");\r\n\r\n\t\t\t\t\t\t// previous change\r\n\t\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t\t// previous change percent\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.calculatePercent) {\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\tlet ksum: number = absoluteSum[key];\r\n\r\n\t\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tif (ksum > 0) {\r\n\t\t\t\t\t\t\t\tif (this.usePercentHack) {\r\n\t\t\t\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 0, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t\t// so we do startIndex - 1\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t\t// change percent\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, absoluteSum[key], \"absoluteSum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.filters.clear();\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tlet bulletsContainer = this.bulletsContainer;\r\n\t\tbulletsContainer.fill = this.fill;\r\n\t\tbulletsContainer.stroke = this.stroke;\r\n\t\tbulletsContainer.x = this.pixelX;\r\n\t\tbulletsContainer.y = this.pixelY;\r\n\r\n\t\tif (this.bulletsContainer.children.length > 0) {\r\n\t\t\tif (this._showBullets) {\r\n\r\n\t\t\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.children.each((bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tlet x = 0;\r\n\t\t\tlet y = 0;\r\n\t\t\tlet w = this.topParent.maxWidth;\r\n\t\t\tlet h = this.topParent.maxHeight;\r\n\t\t\tlet rect = { x: x, y: y, width: w, height: h };\r\n\r\n\t\t\tthis.tooltip.setBounds(rect);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Sprite): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t}\r\n\t\t\tthis.bullets.each((bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Sprite = <Sprite>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n\t\t\t\t\tif (!bullet) {\r\n\r\n\t\t\t\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\t\t\t\tif (disabledField && dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = false;\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = false;\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = true;\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbullet.shouldClone = false;\r\n\t\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t\tif (!this.visible || this.isHiding) {\r\n\t\t\t\t\t\t\tbullet.hide(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet readerText = this.itemReaderText;\r\n\r\n\t\t\t\t\t\tif (bullet instanceof Bullet) {\r\n\t\t\t\t\t\t\tif (!readerText) {\r\n\t\t\t\t\t\t\t\treaderText = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t\taxisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axis  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * IMPORTANT: This setting will work only when Series' base axis\r\n\t * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n\t * setting will be ignored, because it would be a huge overhead to measure\r\n\t * distance between each and every bullet.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Sprite]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Sprite>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value);\r\n\r\n\t\tlet legendDataItem = this.legendDataItem;\r\n\t\tif (legendDataItem) {\r\n\t\t\tlegendDataItem.component.invalidate();\r\n\t\t\tlegendDataItem.component.invalidateRawData();\r\n\t\t}\r\n\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t\tthis._itemReaderTextChanged = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn readerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"itemReaderText\", readerText);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif ((dataItem && !dataItem.isDisposed())|| notRange) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tthis.usePercentHack = source.usePercentHack;\r\n\t\tthis.simplifiedProcessing = source.simplifiedProcessing;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tif (this._chart && this._chart.modal) {\r\n\t\t\tthis._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n\t\t\tthis._chart.modal.closable = false;\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis._chart.modal.open();\r\n\t\t\t}\r\n\t\t\tthis._chart.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of heat rules to apply to series' elements based on the value\r\n\t * of the data item.\r\n\t *\r\n\t * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n\t * be applied to child objects of series, like columns, bullets, etc.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t * ```Javacript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t *```JSON\r\n\t *{\r\n\t *  // ...\r\n\t *  \"series\": [{\r\n\t *    \"type\": \"ColumnSeries\",\r\n\t *    \"heatRules\": [{\r\n\t *      \"target\": \"columns.template\",\r\n\t *      \"property\": \"fill\",\r\n\t *      \"min\": \"#F5DBCB\",\r\n\t *      \"max\": \"#ED7B84\",\r\n\t *      \"dataField\": \"valueY\"\r\n\t *    }]\r\n\t *  }]\r\n\t *}\r\n\t *```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n\t * @return  Heat rules\r\n\t */\r\n\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = dataItem.getActualWorkingValue(dataField);\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent: number;\r\n\t\t\t\t\t\t\t\t\tif (heatRule.logarithmic) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (workingValue - minValue) / (maxValue - minValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tconst maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n\t\t\t\t\t\t\t\tif (maybeIndex) {\r\n\t\t\t\t\t\t\t\t\tif (target[maybeIndex[1]] instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\t/*\r\n\t\tprotected getVisibility(): boolean {\r\n\t\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\t\tif (hidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn super.getVisibility();\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * A set of patterns to use for fills, like Series, Slices, etc.\r\n\t *\r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\tthis._usesData = false;\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series, false));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<Series>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(series);\r\n\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\tdataUser.invalidateDataItems();\r\n\t\t})\r\n\r\n\t\tif (series.autoDispose) {\r\n\t\t\tseries.dispose();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseries.parent = undefined;\r\n\t\t\tseries.bulletsContainer.parent = undefined;\r\n\t\t}\r\n\t\t//this.feedLegend();\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet dataItems = this.legend.dataItems;\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem && dataItem.dataContext == series) {\r\n\t\t\t\t\tlegend.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = legend.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet di = legend.data[i];\r\n\t\t\t\tif (di && di == series) {\r\n\t\t\t\t\t$array.remove(legend.data, di);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tif (series.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\r\n\r\n\t\tthis.handleSeriesAdded2(series);\r\n\t\tthis.handleLegendSeriesAdded(series);\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:Series){\r\n\t\tif (!series.hiddenInLegend) {\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.addData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2(series: Series) {\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._disposers.push(\r\n\t\t\t\t// on exit only as data is usually passed after push\r\n\t\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\tif (!series.data || series.data.length == 0) {\r\n\t\t\t\t\t\tseries.data = this.data;\r\n\t\t\t\t\t\tif (series.showOnInit) {\r\n\t\t\t\t\t\t\tseries.reinit()\r\n\t\t\t\t\t\t\tseries.setPropertyValue(\"showOnInit\", false);\r\n\t\t\t\t\t\t\tseries.showOnInit = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!series.isDisposed()) {\r\n\t\t\t\t\t\t\tseries.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\t\t\t\tif (series.data == this.data) {\r\n\t\t\t\t\t\t\t\t\t(<any>series)._data = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(series);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tsuper.appear();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.showOnInit && series.inited) {\r\n\t\t\t\tseries.appear();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","/**\r\n * Map series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../series/Series\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapObject } from \"./MapObject\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ListTemplate } from \"../../core/utils/List\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * South-most latitude.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * North-most latitude.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * East-most longitude.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * West-most longitude.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapSeries;\r\n\r\n\t/**\r\n\t * Shortcut to either [[MapLine]], [[MapImage]], or [[MapPolygon]].\r\n\t */\r\n\tpublic mapObject: MapObject;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeriesDataItem\";\r\n\t\tthis.values.value = {};\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the data item.\r\n\t *\r\n\t * Value may be used in heat-map calculations.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * zoom level itself or use object's `zoomLevel` if set.\r\n\t *\r\n\t * @param value  Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.setProperty(\"zoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.properties[\"zoomLevel\"];\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * center position itself or use object's `zoomGeoPoint` if set.\r\n\t *\r\n\t * @param value  Zoom geo point\r\n\t */\r\n\tpublic set zoomGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setProperty(\"zoomGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom geo point\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\treturn this.properties[\"zoomGeoPoint\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet geometry = this.getFeature().geometry;\r\n\t\tif (geometry) {\r\n\r\n\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\tlet west = bounds[0][0];\r\n\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\tlet north = bounds[1][1];\r\n\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\tlet changed = false;\r\n\t\t\tif (north != this.north) {\r\n\t\t\t\tthis._north = $math.round(north, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (south != this.south) {\r\n\t\t\t\tthis._south = $math.round(south, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (east != this.east) {\r\n\t\t\t\tthis._east = $math.round(east, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (west != this.west) {\r\n\t\t\t\tthis._west = $math.round(west, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\t// solves single russia prob\r\n\t\t\tif (this._east < this._west) {\r\n\t\t\t\tthis._east = 180;\r\n\t\t\t\tthis._west = -180;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [GEOJSONGeometry description]\r\n *\r\n * @todo Description\r\n */\r\nexport type GEOJSONGeometry = \"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\";\r\n\r\n/**\r\n * Defines data fields for [[MapSeries]].\r\n *\r\n * @todo Alllow any number of values?\r\n */\r\nexport interface IMapSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * A field name in data for a numeric value of the map object.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomLevel` of the map object.\r\n\t */\r\n\tzoomLevel?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomGeoPoint` of the map object.\r\n\t */\r\n\tzoomGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A flag telling if the series should get data from `geodata` or not\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseGeodata?: boolean;\r\n\r\n\t/**\r\n\t * A list of object ids to include from the series.\r\n\t */\r\n\tinclude?: string[];\r\n\r\n\t/**\r\n\t * A list of object ids to exclude from the series.\r\n\t */\r\n\texclude?: string[];\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t */\r\n\tignoreBounds?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesEvents extends ISeriesEvents {\r\n\tgeoBoundsChanged: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSeriesAdapters extends ISeriesAdapters, IMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for series of map objects.\r\n *\r\n * @see {@link IMapSeriesEvents} for a list of available Events\r\n * @see {@link IMapSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\t/**\r\n\t * The longitude of the East-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * The longitude of the West-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * The latitude of the South-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * The latitude of the North-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\tprotected _eastDefined: number;\r\n\r\n\tprotected _westDefined: number;\r\n\r\n\tprotected _southDefined: number;\r\n\r\n\tprotected _northDefined: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: MapChart;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\r\n\tprotected _mapObjects: ListTemplate<MapObject>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeries\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.showInViewport = true;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSeriesDataItem();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks whether object should be included in series.\r\n\t *\r\n\t * @param includes  A list of explicitly included ids\r\n\t * @param excludes  A list of explicitly excluded ids\r\n\t * @param id        Id of the object\r\n\t * @return Include?\r\n\t */\r\n\tprotected checkInclude(includes: string[], excludes: string[], id: string): boolean {\r\n\t\tif (includes) {\r\n\t\t\tif (includes.length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (includes.indexOf(id) == -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (excludes && excludes.length > 0) {\r\n\t\t\tif (excludes.indexOf(id) != -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Should the map extract all the data about element from the GeoJSON?\r\n\t *\r\n\t * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`\r\n\t * polygon series will need to contain geographical data in itself in order\r\n\t * to be drawn.\r\n\t *\r\n\t * If this is set to `true`, series will try to extract data for its objects\r\n\t * from either chart-level `geodata` or from series' `geodata` which holds\r\n\t * map infor in GeoJSON format.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use GeoJSON data?\r\n\t */\r\n\tpublic set useGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"useGeodata\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use GeoJSON data?\r\n\t */\r\n\tpublic get useGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"useGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be explictly included in the series.\r\n\t *\r\n\t * If this is not set, the series will automatically include all of the\r\n\t * objects, available in the GeoJSON map. (minus the ones listed in\r\n\t * `exclude`)\r\n\t *\r\n\t * If you need to display only specific objects, use `include`. E.g.:\r\n\t *\r\n\t * `include = [\"FR\", \"ES\", \"DE\"];`\r\n\t *\r\n\t * The above will show only France, Spain, and Germany out of the whole map.\r\n\t *\r\n\t * @param value  Included objects\r\n\t */\r\n\tpublic set include(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"include\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\t//this.data = [];\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Included objects\r\n\t */\r\n\tpublic get include(): string[] {\r\n\t\treturn this.getPropertyValue(\"include\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Ignore bounds?\r\n\t */\r\n\tpublic set ignoreBounds(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"ignoreBounds\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore bounds?\r\n\t */\r\n\tpublic get ignoreBounds(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreBounds\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be excluded from the series.\r\n\t *\r\n\t * E.g. you want to include all of the areas from a GeoJSON map, except\r\n\t * Antarctica.\r\n\t *\r\n\t * You'd leave `include` empty, and set `exclude = [\"AQ\"]`.\r\n\t *\r\n\t * @param value  Excluded ids\r\n\t */\r\n\tpublic set exclude(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"exclude\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Excluded ids\r\n\t */\r\n\tpublic get exclude(): string[] {\r\n\t\treturn this.getPropertyValue(\"exclude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a newly added object.\r\n\t *\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleObjectAdded(event: IListEvents<MapObject>[\"inserted\"]) {\r\n\t\tlet mapObject: MapObject = event.newValue;\r\n\t\tmapObject.parent = this;\r\n\t\tmapObject.series = this;\r\n\t\tmapObject.strokeWidth = mapObject.strokeWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The series supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tfor (let i = this.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (this.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\tthis.data.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.disposeData();\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, undefined, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"Point\" | \"MultiLineString\" | \"MultiPolygon\", coordinates: [number, number] | Array<Array<[number, number]>> | Array<Array<Array<[number, number]>>> } }[] {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tlet north: number;\r\n\t\tlet south: number;\r\n\t\tlet east: number;\r\n\t\tlet west: number;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.north > north || !$type.isNumber(north)) {\r\n\t\t\t\tnorth = dataItem.north;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.south < south || !$type.isNumber(south)) {\r\n\t\t\t\tsouth = dataItem.south;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.west < west || !$type.isNumber(west)) {\r\n\t\t\t\twest = dataItem.west;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.east > east || !$type.isNumber(east)) {\r\n\t\t\t\teast = dataItem.east;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this._mapObjects) {\r\n\t\t\tthis._mapObjects.each((mapObject) => {\r\n\t\t\t\tif (mapObject.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = mapObject.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = mapObject.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = mapObject.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = mapObject.east;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (this.north != north || this.east != east || this.south != south || this.west != west) {\r\n\t\t\tthis._north = north;\r\n\t\t\tthis._east = east;\r\n\t\t\tthis._west = west;\r\n\t\t\tthis._south = south;\r\n\r\n\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\tif (!this.ignoreBounds) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * North-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set north(value: number) {\r\n\t\tthis._northDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._northDefined)) {\r\n\t\t\treturn this._northDefined;\r\n\t\t}\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * South-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set south(value: number) {\r\n\t\tthis._southDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._southDefined)) {\r\n\t\t\treturn this._southDefined;\r\n\t\t}\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * West-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set west(value: number) {\r\n\t\tthis._westDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._westDefined)) {\r\n\t\t\treturn this._westDefined;\r\n\t\t}\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * East-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set east(value: number) {\r\n\t\tthis._eastDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._eastDefined)) {\r\n\t\t\treturn this._eastDefined;\r\n\t\t}\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthrow Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.tooltip && this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 10, y: 10, width: this.topParent.maxWidth - 20, height: this.topParent.maxHeight - 20 });\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSeries\"] = MapSeries;\r\nregistry.registeredClasses[\"MapSeriesDataItem\"] = MapSeriesDataItem;\r\n","/**\r\n * Map object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapSeries, MapSeriesDataItem } from \"./MapSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines propeties for [[MapObject]].\r\n */\r\nexport interface IMapObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A custom zoom level to use when `zoomToMapObject()` is called on this\r\n\t * map object.\r\n\t */\r\n\tzoomLevel?: number;\r\n\r\n\t/**\r\n\t * A custom point to use when `zoomToMapObject()` is called on this map\r\n\t * object.\r\n\t */\r\n\tzoomGeoPoint?: IGeoPoint;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapObject]].\r\n */\r\nexport interface IMapObjectEvents extends IContainerEvents {\r\n\tgeoBoundsChanged: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapObjectAdapters extends IContainerAdapters, IMapObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all map objects: lines, images, etc.\r\n *\r\n * @see {@link IMapObjectEvents} for a list of available events\r\n * @see {@link IMapObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapObjectEvents;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSeries;\r\n\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapObject\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.clickable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates this object, forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series && this.series.itemReaderText) {\r\n\t\t\tthis.readerTitle = this.series.itemReaderText;\r\n\t\t}\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet feature = this.getFeature();\r\n\t\tif (feature) {\r\n\t\t\tlet geometry = feature.geometry;\r\n\r\n\t\t\tif (geometry) {\t\t\t\t\r\n\t\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\t\tlet west = bounds[0][0];\r\n\t\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\t\tlet north = bounds[1][1];\r\n\t\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tif (north != this.north) {\r\n\t\t\t\t\tthis._north = $math.round(north, 8);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (south != this.south) {\r\n\t\t\t\t\tthis._south = $math.round(south);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (east != this.east) {\r\n\t\t\t\t\tthis._east = $math.round(east);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (west != this.west) {\r\n\t\t\t\t\tthis._west = $math.round(west);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\t\t\tif(this.series){\r\n\t\t\t\t\t\tthis.series.invalidateDataItems();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._east)) {\r\n\t\t\treturn this._east;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.east;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._west)) {\r\n\t\t\treturn this._west;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.west;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._south)) {\r\n\t\t\treturn this._south;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.south;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._north)) {\r\n\t\t\treturn this._north;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.north;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param optional point (sprite-related) to which tooltip must point.\r\n\t * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\t\tconst res = super.showTooltip(point);\r\n\t\tif (res && this.showTooltipOn == \"always\" && !this.series.chart.events.has(\"mappositionchanged\", this.handleTooltipMove, this)) {\r\n\t\t\tthis.addDisposer(this.series.chart.events.on(\"mappositionchanged\", this.handleTooltipMove, this));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprotected handleTooltipMove(ev: any): void {\r\n\t\tif(!this.tooltip.isHidden){\r\n\t\t\tthis.showTooltip();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]].\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: MapSeriesDataItem) {\r\n\t\tsuper.setDataItem(dataItem);\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapObject\"] = MapObject;\r\n","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapImageSeriesDataItem, MapImageSeries } from \"./MapImageSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapImage]].\r\n */\r\nexport interface IMapImageProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Latitude of the image location.\r\n\t */\r\n\tlatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the mage location.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapImage]].\r\n */\r\nexport interface IMapImageEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImage]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageAdapters extends IMapObjectAdapters, IMapImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to place an image on the map.\r\n *\r\n * @see {@link IMapImageEvents} for a list of available events\r\n * @see {@link IMapImageAdapters} for a list of available Adapters\r\n */\r\nexport class MapImage extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageEvents;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapImage\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude image is placed at.\r\n\t *\r\n\t * @param value  Latitude\r\n\t */\r\n\tpublic set latitude(value: number) {\r\n\t\tthis.setPropertyValue(\"latitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"latitude\");\r\n\t\t\r\n\t\tif(!$type.isNumber(latitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlatitude = this.dataItem.geoPoint.latitude;\r\n\t\t}\t\t\r\n\t\treturn latitude;\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude image is placed on.\r\n\t *\r\n\t * @param value  Longitude\r\n\t */\r\n\tpublic set longitude(value: number) {\r\n\t\tthis.setPropertyValue(\"longitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"longitude\");\r\n\t\tif(!$type.isNumber(longitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlongitude = this.dataItem.geoPoint.longitude;\r\n\t\t}\t\t\r\n\t\treturn longitude;\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions the image to it's current position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\t\tif ($type.isNumber(this.latitude) && $type.isNumber(this.longitude)) {\r\n\t\t\t//this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));\r\n\t\t\tlet p = this.series.chart.projection.d3Projection([this.longitude, this.latitude]);\r\n\r\n\t\t\tlet visible: any = this.series.chart.projection.d3Path({ type: 'Point', coordinates: [this.longitude, this.latitude] });\r\n\r\n\t\t\tif (!visible) {\r\n\t\t\t\tthis.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.moveTo({ x: p[0], y: p[1] });\r\n\t\t}\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [this.longitude, this.latitude] } };\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImage\"] = MapImage;\r\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","/**\r\n * A collection of Map-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in\r\n * geo-points (lat/long).\r\n *\r\n * @param multiPolygon  Source multi-polygon\r\n * @return Geo-multipolygon\r\n */\r\n\r\nexport function multiPolygonToGeo(multiPolygon: Array<[Array<[number, number]>, Array<[number, number]>]>): Array<Array<Array<IGeoPoint>>> {\r\n\treturn $array.map(multiPolygon, (polygon) => {\r\n\t\tlet surface: Array<[number, number]> = polygon[0];\r\n\t\tlet hole: Array<[number, number]> = polygon[1];\r\n\r\n\t\t//let holePoints: Array<IGeoPoint> = [];\r\n\r\n\t\tconst geoArea = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tgeoArea.push(multiPointToGeo(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tgeoArea.push(multiPointToGeo(hole));\r\n\t\t}\r\n\r\n\t\treturn geoArea;\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points\r\n * (lat/long).\r\n *\r\n * @param multiLine  Source multiline\r\n * @return Geo-multiline\r\n */\r\nexport function multiLineToGeo(multiLine: Array<Array<[number, number]>>): Array<Array<IGeoPoint>> {\r\n\treturn $array.map(multiLine, (multiLine) => {\r\n\t\treturn multiPointToGeo(multiLine);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiPointToGeo(points: Array<[number, number]>): Array<IGeoPoint> {\r\n\treturn $array.map(points, (point) => {\r\n\t\treturn pointToGeo(point);\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiGeoToPoint(geoPoints: Array<IGeoPoint>): Array<[number, number]> {\r\n\treturn $array.map(geoPoints, geoToPoint);\r\n}\r\n\r\n\r\n/**\r\n * Converts X/Y point into a lat/long geo-point.\r\n *\r\n * @param point  Source point\r\n * @return Geo-point\r\n */\r\nexport function pointToGeo(point: [number, number]): IGeoPoint {\r\n\treturn { longitude: point[0], latitude: point[1] }\r\n}\r\n\r\n/**\r\n * Converts lat/long geo-point into a X/Y point.\r\n *\r\n * @param point  Source geo-point\r\n * @return X/Y point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): [number, number] {\r\n\treturn [geoPoint.longitude, geoPoint.latitude];\r\n}\r\n\r\n\r\n/**\r\n * Converts geo line (collection of lat/long coordinates) to screen line (x/y).\r\n *\r\n * @param   multiGeoLine  Source geo line\r\n * @return                Screen line\r\n */\r\nexport function multiGeoLineToMultiLine(multiGeoLine: Array<Array<IGeoPoint>>): Array<Array<[number, number]>> {\r\n\treturn $array.map(multiGeoLine, (segment) => {\r\n\t\treturn $array.map(segment, geoToPoint);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a geo polygon (collection of lat/long coordinates) to screen\r\n * polygon (x/y).\r\n *\r\n * @param   multiGeoPolygon  Source polygon\r\n * @return                   Screen polygon\r\n */\r\nexport function multiGeoPolygonToMultipolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>): Array<Array<Array<[number, number]>>> {\r\n\treturn $array.map(multiGeoPolygon, (geoPolygon) => {\r\n\t\tlet surface = geoPolygon[0];\r\n\t\tlet hole = geoPolygon[1];\r\n\r\n\t\tconst multiPolygon = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(hole));\r\n\t\t}\r\n\r\n\t\treturn multiPolygon;\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a set of geographical coordinates for the circle with a center\r\n * at specific lat/long coordinates and radius (in degrees).\r\n *\r\n * @since 4.3.0\r\n * @param   longitude  Center longitude\r\n * @param   latitude   Center latitude\r\n * @param   radius     Radius (degrees)\r\n * @return             Circle coordinates\r\n */\r\nexport function getCircle(longitude: number, latitude: number, radius: number): Array<Array<Array<[number, number]>>> {\r\n\treturn [d3geo.geoCircle().center([longitude, latitude]).radius(radius)().coordinates as Array<Array<[number, number]>>];\r\n}\r\n\r\n/**\r\n * Returns a set of screen coordinates that represents a \"background\" area\r\n * between provided extremities.\r\n *\r\n * @since 4.3.0\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         Polygon\r\n */\r\nexport function getBackground(north: number, east: number, south: number, west: number): Array<Array<Array<[number, number]>>> {\r\n\r\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\r\n\r\n\tif(west == -180){\r\n\t\twest = -179.9999;\r\n\t}\r\n\tif(south == -90){\r\n\t\tsouth = -89.9999;\r\n\t}\r\n\tif(north == 90){\r\n\t\tnorth = 89.9999;\r\n\t}\r\n\tif(east == 180){\r\n\t\teast = 179.9999;\r\n\t}\r\n\r\n\r\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n\r\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\r\n\t\tlet surface: Array<[number, number]> = [];\r\n\t\tmultiPolygon.push([surface]);\r\n\r\n\t\tif(ln + stepLong > east){\r\n\t\t\tstepLong = east - ln;\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n\t\t\tsurface.push([ll, north]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\r\n\t\t\tsurface.push([ln + stepLong, lt]);\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n\t\t\tsurface.push([ll, south]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\r\n\t\t\tsurface.push([ln, lt]);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn multiPolygon;\r\n}\r\n","/**\r\n * Map polygon module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Polygon } from \"../../core/elements/Polygon\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport $polylabel from \"polylabel\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Set of geographical coordinates for the polygon.\r\n\t */\r\n\tmultiGeoPolygon?: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Set of screen coordinates for the polygon.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLongitude?: number;\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection, to depict the shortest distance how it would go on the actual\r\n\t * land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t */\r\n\tprecision?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonAdapters extends IMapObjectAdapters, IMapPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a polygon on the map.\r\n *\r\n * @see {@link IMapPolygonEvents} for a list of available events\r\n * @see {@link IMapPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class MapPolygon extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonEvents;\r\n\r\n\t/**\r\n\t * A visual polygon element.\r\n\t */\r\n\tpublic polygon: Polygon;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapPolygonSeries;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLatitude: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLongitude: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygon\";\r\n\r\n\t\tthis.polygon = this.createChild(Polygon);\r\n\t\tthis.polygon.shouldClone = false;\r\n\t\tthis.polygon.applyOnClones = true;\r\n\t\tthis.setPropertyValue(\"precision\", 0.5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set of coordinates for the polygon.\r\n\t *\r\n\t * @param multiGeoPolygon  Polygon coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis.setPropertyValue(\"multiGeoPolygon\", multiGeoPolygon, true);\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\tlet multiGeoPolygon = this.getPropertyValue(\"multiGeoPolygon\");\r\n\t\tif (!multiGeoPolygon && this.dataItem) {\r\n\t\t\tmultiGeoPolygon = this.dataItem.multiGeoPolygon;\r\n\t\t}\r\n\t\treturn multiGeoPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tif (this.setPropertyValue(\"multiPolygon\", multiPolygon)) {\r\n\t\t\tthis.updateExtremes();\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\tlet multiPolygon = this.getPropertyValue(\"multiPolygon\");\r\n\t\tif (!multiPolygon && this.dataItem) {\r\n\t\t\tmultiPolygon = this.dataItem.multiPolygon;\r\n\t\t}\r\n\t\treturn multiPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the polygon, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series) {\r\n\t\t\tlet projection = this.series.chart.projection;\r\n\r\n\t\t\tlet pathGenerator = projection.d3Path;\r\n\r\n\t\t\tif (this.multiPolygon) {\r\n\r\n\t\t\t\tif (this.series) {\r\n\t\t\t\t\tlet feature = { type: \"MultiPolygon\", coordinates: this.multiPolygon };\r\n\r\n\t\t\t\t\tprojection.d3Projection.precision(this.precision);\r\n\t\t\t\t\tthis.polygon.path = pathGenerator(<any>feature);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.series.calculateVisualCenter) {\r\n\t\t\t\t\tlet biggestArea = 0;\r\n\t\t\t\t\tlet biggestPolygon = this.multiPolygon[0];\r\n\r\n\t\t\t\t\tif (this.multiPolygon.length > 1) {\r\n\t\t\t\t\t\tfor (let i = 0; i < this.multiPolygon.length; i++) {\r\n\t\t\t\t\t\t\tlet polygon = this.multiPolygon[i];\r\n\t\t\t\t\t\t\tlet area = d3geo.geoArea({ type: \"Polygon\", coordinates: polygon });\r\n\r\n\t\t\t\t\t\t\tif (area > biggestArea) {\r\n\t\t\t\t\t\t\t\tbiggestPolygon = polygon;\r\n\t\t\t\t\t\t\t\tbiggestArea = area;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet center = $polylabel(biggestPolygon);\r\n\r\n\t\t\t\t\tthis._visualLongitude = center[0];\r\n\t\t\t\t\tthis._visualLatitude = center[1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._visualLongitude = this.longitude;\r\n\t\t\t\t\tthis._visualLatitude = this.latitude;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set visualLatitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLatitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Latitude\r\n\t */\r\n\tpublic get visualLatitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"visualLatitude\");\r\n\t\tif ($type.isNumber(latitude)) {\r\n\t\t\treturn (latitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLatitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLatitude\",\r\n\t\t\t\tthis._visualLatitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set visualLongitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLongitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Longitude\r\n\t */\r\n\tpublic get visualLongitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"visualLongitude\");\r\n\t\tif ($type.isNumber(longitude)) {\r\n\t\t\treturn (longitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLongitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLongitude\",\r\n\t\t\t\tthis._visualLongitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Not 100% sure about this, as if we add something to MapPolygon this\r\n\t * won't be true, but otherwise we will get all 0 and the tooltip won't\r\n\t * be positioned properly\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's width in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\treturn this.polygon.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's height in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\treturn this.polygon.pixelHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[MapPolygon]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.polygon.copyFrom(source.polygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tsuper.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * used to sorth polygons from big to small\r\n\t */\r\n\tpublic get boxArea() {\r\n\t\treturn (this.north - this.south) * (this.east - this.west);\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).y\r\n\t}\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygon\"] = MapPolygon;\r\n","/**\r\n * Map polygon series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapPolygon } from \"./MapPolygon\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapPolygonDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapPolygonSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapPolygonSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t */\r\n\tprotected _mapPolygon: MapPolygon;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon.\r\n\t */\r\n\tprotected _polygon: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiPolygon: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon.\r\n\t */\r\n\tprotected _geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>];\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapPolygonSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapPolygon(): MapPolygon {\r\n\t\tif (!this._mapPolygon) {\r\n\t\t\tlet mapPolygon = this.component.mapPolygons.create();\r\n\t\t\tthis._mapPolygon = mapPolygon;\r\n\t\t\tthis.addSprite(mapPolygon);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapPolygons.removeValue(mapPolygon);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapPolygon;\r\n\t\t}\r\n\t\treturn this._mapPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 200 ],\r\n\t *     [ 170, 240 ],\r\n\t *     [ 100, 150 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param polygon  Coordinates\r\n\t */\r\n\tpublic set polygon(polygon: Array<Array<[number, number]>>) {\r\n\t\tthis._polygon = polygon;\r\n\t\tthis.multiPolygon = [polygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get polygon(): Array<Array<[number, number]>> {\r\n\t\treturn this._polygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tthis._multiPolygon = multiPolygon;\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\treturn this._multiPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     { latitude: -10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: 10.0 },\r\n\t *     { latitude: -10.0, longitude: -10.0 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference\r\n\t * @param geoPolygon  Coordinates\r\n\t */\r\n\tpublic set geoPolygon(geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>]) {\r\n\t\tthis._geoPolygon = geoPolygon;\r\n\t\tthis.multiGeoPolygon = [geoPolygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoPolygon(): [Array<IGeoPoint>, Array<IGeoPoint>] {\r\n\t\treturn this._geoPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: 180.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ],\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: -170.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference\r\n\t * @param multiGeoPolygon  Coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis._multiGeoPolygon = multiGeoPolygon;\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\treturn this._multiGeoPolygon;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds polygon pixels.\r\n\t */\r\n\tpolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-polygon pixels.\r\n\t */\r\n\tmultiPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds polygon data in Geo coordinates.\r\n\t */\r\n\tgeoPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds poly-polygon data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesProperties extends IMapSeriesProperties {\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsBy: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\";\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsReversed: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygonSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonSeriesAdapters extends IMapSeriesAdapters, IMapPolygonSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map polygon elements.\r\n *\r\n * @see {@link IMapPolygonSeriesEvents} for a list of available Events\r\n * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapPolygonSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapPolygonSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map polygons in the series.\r\n\t */\r\n\tprotected _mapPolygons: ListTemplate<MapPolygon>;\r\n\r\n\t/**\r\n\t * Indicates if series should automatically calculate visual center of the\r\n\t * polygons (accessible via `visualLongitude` and `visualLatitude` properties\r\n\t * of the [[MapPolygon]]).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic calculateVisualCenter: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygonSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPolygon = \"multiPolygon\";\r\n\t\tthis.dataFields.polygon = \"polygon\";\r\n\r\n\t\tthis.dataFields.geoPolygon = \"geoPolygon\";\r\n\t\tthis.dataFields.multiGeoPolygon = \"multiGeoPolygon\";\r\n\r\n\t\tthis.setPropertyValue(\"sortPolygonsBy\", \"area\");\r\n\t\tthis.setPropertyValue(\"sortPolygonsReversed\", false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapPolygonSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\tthis.mapPolygons.clear();\r\n\t\tsuper.processIncExc();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = !this._dataSources[\"geodata\"] ? this.chart.geodata : undefined;\r\n\r\n\t\t\tif (this.geodata) {\r\n\t\t\t\tgeoJSON = this.geodata;\r\n\t\t\t}\r\n\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\r\n\t\t\t\t\t\t\tif (this.chart.geodataNames && this.chart.geodataNames[id]) {\r\n\t\t\t\t\t\t\t\tfeature.properties.name = this.chart.geodataNames[id];\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (type == \"Polygon\" || type == \"MultiPolygon\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\tif (coordinates) {\r\n\t\t\t\t\t\t\t\t\t// make the same as MultiPolygon\r\n\t\t\t\t\t\t\t\t\tif (type == \"Polygon\") {\r\n\t\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// find data object in user-provided data\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapPolygonDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\t\t\t// create one if not found\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPolygon: coordinates, id: id, madeFromGeoData: true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// in case found\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPolygon) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPolygon = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapPolygon);\r\n\t\t});\r\n\r\n\t\tif (this.sortPolygonsBy != \"none\") {\r\n\r\n\t\t\tconst sortBy = this.sortPolygonsBy;\r\n\t\t\tconst reversed = this.sortPolygonsReversed;\r\n\t\t\tthis.mapPolygons.sort((a, b) => {\r\n\t\t\t\tlet valA: number | string = \"\";\r\n\t\t\t\tlet valB: number | string = \"\";\r\n\t\t\t\tlet dirA: Ordering = -1;\r\n\t\t\t\tlet dirB: Ordering = 1;\r\n\r\n\t\t\t\tswitch (sortBy) {\r\n\t\t\t\t\tcase \"area\":\r\n\t\t\t\t\t\tvalA = a.boxArea;\r\n\t\t\t\t\t\tvalB = b.boxArea;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"name\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"id\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"latitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.south : a.north;\r\n\t\t\t\t\t\tvalB = reversed ? b.south : b.north;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"longitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.east : a.west;\r\n\t\t\t\t\t\tvalB = reversed ? b.east : b.west;\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valA < valB) {\r\n\t\t\t\t\treturn reversed ? dirB : dirA;\r\n\t\t\t\t}\r\n\t\t\t\tif (valA > valB) {\r\n\t\t\t\t\treturn reversed ? dirA : dirB;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.mapPolygons.each((mapPolygon, index) => {\r\n\t\t\t\tmapPolygon.validate();\r\n\t\t\t\t// makes small go first to avoid hover problems with IE\r\n\t\t\t\tif (!mapPolygon.zIndex && !mapPolygon.propertyFields.zIndex) {\r\n\t\t\t\t\tmapPolygon.zIndex = 1000000 - index;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * List of polygon elements in the series.\r\n\t *\r\n\t * @return Polygon list\r\n\t */\r\n\tpublic get mapPolygons(): ListTemplate<MapPolygon> {\r\n\r\n\t\tif (!this._mapPolygons) {\r\n\t\t\tlet polygonTemplate: MapPolygon = new MapPolygon();\r\n\r\n\t\t\tlet mapPolygons: ListTemplate<MapPolygon> = new ListTemplate<MapPolygon>(polygonTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapPolygons));\r\n\t\t\tthis._disposers.push(mapPolygons.template);\r\n\t\t\tmapPolygons.template.focusable = true;\r\n\t\t\tmapPolygons.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapPolygons = mapPolygons;\r\n\t\t\tthis._mapObjects = mapPolygons;\r\n\t\t}\r\n\r\n\t\treturn this._mapPolygons;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapPolygon by id in geoJSON file\r\n\t * @param polygon id\r\n\t * @return {MapPolygon}\r\n\t */\r\n\tpublic getPolygonById(id: string): MapPolygon {\r\n\t\treturn $iter.find(this.mapPolygons.iterator(), (mapPolygon) => {\r\n\t\t\tlet dataContext: any = mapPolygon.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapPolygons.template.copyFrom(source.mapPolygons.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] {\r\n\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapPolygons.each((mapPolygon) => {\r\n\t\t\tif (this.dataItems.indexOf(mapPolygon._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapPolygon.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * Available options: `\"area\"` (default), `\"name\"`, `\"longitude\"`,\r\n\t * `\"latitude\"`, `\"id\"`, and `\"none\"`.\r\n\t *\r\n\t * @default area\r\n\t * @since 4.9.36\r\n\t * @param value  How to sort map polygons\r\n\t */\r\n\tpublic set sortPolygonsBy(value: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\") {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsBy\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return How to sort map polygons\r\n\t */\r\n\tpublic get sortPolygonsBy(): \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.9.36\r\n\t * @param value  Reverse polygon sort direction\r\n\t */\r\n\tpublic set sortPolygonsReversed(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsReversed\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reverse polygon sort direction\r\n\t */\r\n\tpublic get sortPolygonsReversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsReversed\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygonSeries\"] = MapPolygonSeries;\r\nregistry.registeredClasses[\"MapPolygonSeriesDataItem\"] = MapPolygonSeriesDataItem;\r\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","/**\r\n * This module contains funcitonality related to geographical projections\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../../core/defs/IGeoPoint\";\r\n//import { IGeoRectangle } from \"../../../core/defs/IGeoRectangle\";\r\nimport { IPoint, IOrientationPoint } from \"../../../core/defs/IPoint\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as $math from \"../../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport { MapChart } from \"../../types/MapChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for a geographical projection.\r\n */\r\nexport class Projection {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Projection: d3geo.GeoProjection;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Path: d3geo.GeoPath;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis.d3Projection = d3geo.geoEquirectangular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic set d3Projection(projection: d3geo.GeoProjection) {\r\n\t\tthis._d3Projection = projection;\r\n\t\tprojection.precision(0.1);\r\n\t\tthis._d3Path = d3geo.geoPath().projection(projection);\r\n\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateProjection();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic get d3Projection(): d3geo.GeoProjection {\r\n\t\treturn this._d3Projection;\r\n\t}\r\n\r\n\t/**\r\n\t * d3 path generator method\r\n\t * @ignore\r\n\t */\r\n\tpublic get d3Path(): d3geo.GeoPath {\r\n\t\treturn this._d3Path;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.d3Projection.scale() / 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a geographical point (lat/long) to a screen point (x/y)\r\n\t * @param geoPoint Geo point (lat/long)\r\n\t * @return Screen point (x/y)\r\n\t */\r\n\tpublic convert(geoPoint: IGeoPoint): IPoint {\r\n\t\t/*\r\n\t\tgeoPoint = $geo.normalizePoint(geoPoint);\r\n\t\tgeoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\tlet pointInRadians: IPoint = this.project(geoPoint.longitude * $math.RADIANS, geoPoint.latitude * $math.RADIANS);\r\n\t\treturn {\r\n\t\t\tx: $math.round(pointInRadians.x * $math.DEGREES - this.centerPoint.x, 4) * this.scale,\r\n\t\t\ty: $math.round(-pointInRadians.y * $math.DEGREES - this.centerPoint.y, 4) * this.scale\r\n\t\t};*/\r\n\r\n\t\tlet p = this.d3Projection([geoPoint.longitude, geoPoint.latitude]);\r\n\t\tif (p) {\r\n\t\t\treturn { x: p[0], y: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a screen point (x/y) to a geographical point (lat/long)\r\n\t * @param point Screen point (x/y)\r\n\t * @return Geo point (lat/long)\r\n\t */\r\n\tpublic invert(point: IPoint): IGeoPoint {\r\n\t\t/*\r\n\t\tlet pointInRadians: IGeoPoint = this.unproject((point.x / this.scale + this.centerPoint.x) * $math.RADIANS, (-point.y / this.scale - this.centerPoint.y) * $math.RADIANS);\r\n\r\n\t\tlet geoPoint = { longitude: pointInRadians.longitude * $math.DEGREES, latitude: pointInRadians.latitude * $math.DEGREES };\r\n\r\n\t\tgeoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\t*/\r\n\t\tlet p = this.d3Projection.invert([point.x, point.y]);\r\n\t\tif (p) {\r\n\t\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns X/Y coordinates.\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param lambda [description]\r\n\t * @param phi    [description]\r\n\t * @return X/Y coordinates\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic project(lambda: number, phi: number): IPoint {\r\n\t\treturn this.convert({ longitude: lambda * $math.DEGREES, latitude: phi * $math.DEGREES });\r\n\t}\r\n\r\n\t/**\r\n\t * Returns geographical coordinates (lat/long).\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param x X coordinate\r\n\t * @param y Y coordinate\r\n\t * @return Geographical point\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic unproject(x: number, y: number): IGeoPoint {\r\n\t\treturn this.invert({ x: x, y: y });\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic rotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS + deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic unrotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS - deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };\r\n\t}\r\n\r\n\r\n\t//@todo: move to some utils?\r\n\t//@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html\r\n\tpublic intermediatePoint(pointA: IGeoPoint, pointB: IGeoPoint, position: number): IGeoPoint {\r\n\t\tlet p = d3geo.geoInterpolate([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude])(position);\r\n\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t};\r\n\r\n\t// returns radians\r\n\tpublic multiDistance(multiGeoLine: Array<Array<IGeoPoint>>): number {\r\n\t\tlet distance = 0;\r\n\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\tlet pointA = points[p - 1];\r\n\t\t\t\t\tlet pointB = points[p];\r\n\t\t\t\t\tdistance += this.distance(pointA, pointB);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t// returns radians\r\n\tpublic distance(pointA: IGeoPoint, pointB: IGeoPoint): number {\r\n\t\treturn d3geo.geoDistance([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude]);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IOrientationPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet intermediatePoint = this.positionToGeoPoint(multiGeoLine, position);\r\n\t\t\tlet intermediatePointA = this.positionToGeoPoint(multiGeoLine, position - 0.01);\r\n\t\t\tlet intermediatePointB = this.positionToGeoPoint(multiGeoLine, position + 0.01);\r\n\r\n\t\t\tif (intermediatePointA && intermediatePointB) {\r\n\r\n\t\t\t\tlet point = this.convert(intermediatePoint);\r\n\r\n\t\t\t\tlet pa = this.convert(intermediatePointA);\r\n\t\t\t\tlet pb = this.convert(intermediatePointB);\r\n\r\n\t\t\t\treturn { x: point.x, y: point.y, angle: $math.getAngle(pa, pb) };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToGeoPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IGeoPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet totalDistance: number = this.multiDistance(multiGeoLine);\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IGeoPoint;\r\n\t\t\tlet pointB: IGeoPoint;\r\n\r\n\t\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = this.distance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = multiGeoLine.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\treturn this.intermediatePoint(pointA, pointB, positionAB);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { longitude: 0, latitude: 0 };\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Projection\"] = Projection;\r\n","/**\r\n * A module for the mini-map control.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapSeries } from \"./MapSeries\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SmallMap]].\r\n */\r\nexport interface ISmallMapProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[SmallMap]].\r\n */\r\nexport interface ISmallMapEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SmallMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISmallMapAdapters extends IContainerAdapters, ISmallMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SmallMap extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISmallMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISmallMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISmallMapEvents;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A container that holds the visual elements for the mini-map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic seriesContainer: Container;\r\n\r\n\t/**\r\n\t * The rectangle element which highlights current viewport.\r\n\t */\r\n\tpublic rectangle: Rectangle;\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t */\r\n\tprotected _series: List<MapSeries>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SmallMap\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.align = \"left\";\r\n\t\tthis.valign = \"bottom\";\r\n\t\tthis.percentHeight = 20;\r\n\t\tthis.percentWidth = 20;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Set background defailts\r\n\t\tthis.background.fillOpacity = 0.9;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\t// Set up events\r\n\t\tthis.events.on(\"hit\", this.moveToPosition, this, false);\r\n\t\tthis.events.on(\"maxsizechanged\", this.updateMapSize, this, false);\r\n\r\n\t\t// Create a container\r\n\t\tthis.seriesContainer = this.createChild(Container);\r\n\t\tthis.seriesContainer.shouldClone = false;\r\n\r\n\t\t// Create an outline rectangle\r\n\t\tlet rectangle: Rectangle = this.createChild(Rectangle);\r\n\t\trectangle.shouldClone = false;\r\n\t\trectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\trectangle.strokeWidth = 1;\r\n\t\trectangle.strokeOpacity = 0.5;\r\n\t\trectangle.fill = color(); //\"none\";\r\n\t\trectangle.verticalCenter = \"middle\";\r\n\t\trectangle.horizontalCenter = \"middle\";\r\n\t\trectangle.isMeasured = false;\r\n\t\trectangle.visible = false;\t\t\r\n\r\n\t\tthis.rectangle = rectangle;\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<MapSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<MapSeries>();\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]) {\r\n\t\tlet series: MapSeries = event.newValue;\r\n\t\tif (this.chart.series.contains(series)) {\r\n\t\t\tlet newSeries = series.clone();\r\n\t\t\tthis._series.removeValue(series);\r\n\t\t\tthis._series.push(newSeries);\r\n\t\t\tseries = newSeries;\r\n\r\n\t\t\tthis.chart.dataUsers.push(newSeries);\r\n\t\t}\r\n\t\tseries.chart = this.chart;\r\n\t\tseries.parent = this.seriesContainer;\r\n\t\tseries.interactionsEnabled = false;\r\n\t\tseries.events.on(\"inited\", this.updateMapSize, this, false);\r\n\t\tseries.hidden = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<MapSeries>[\"removed\"]) {\r\n\t\t//let sourceSeries: MapSeries = event.oldValue;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves main map pan position after click on the small map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic moveToPosition(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tlet rectPoint: IPoint = $utils.spritePointToSprite(event.spritePoint, this, this.seriesContainer);\r\n\t\tlet geoPoint: IGeoPoint = this.chart.seriesPointToGeo(rectPoint);\r\n\t\tthis.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart/map that this control is meant for.\r\n\t *\r\n\t * @param chart  Chart/map\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tif (this.chart != chart) {\r\n\t\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\t\t//chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"mappositionchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"scaleratiochanged\", this.updateMapSize, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart/map\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the viewport recangle as per current map zoom/pan position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRectangle(): void {\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet zoomLevel: number = chart.zoomLevel;\r\n\t\tlet rectangle: Rectangle = this.rectangle;\r\n\r\n\t\trectangle.width = this.pixelWidth / zoomLevel;\r\n\t\trectangle.height = this.pixelHeight / zoomLevel;\r\n\r\n\t\tlet scale: number = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\r\n\t\tlet seriesContainer: Container = chart.seriesContainer;\r\n\r\n\t\trectangle.x = Math.ceil(( - seriesContainer.pixelX) * scale / zoomLevel) + this.seriesContainer.pixelX;\r\n\t\trectangle.y = Math.ceil(( - seriesContainer.pixelY) * scale / zoomLevel) + this.seriesContainer.pixelY;\r\n\r\n\t\trectangle.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Update map size so that internal elements can redraw themselves after\r\n\t * the size of the small map changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateMapSize(): void {\r\n\t\tif (this.chart) {\r\n\t\t\tlet scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\t\t\tthis.seriesContainer.scale = scale;\r\n\r\n\t\t\tlet bbox: IRectangle = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t\ttry { // Add exception catching to tame FF\r\n\t\t\t\tbbox = this.seriesContainer.group.node.getBBox();\r\n\t\t\t} catch (err) { }\r\n\r\n\t\t\tif(bbox.width > 0){\r\n\t\t\t\tthis.rectangle.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.seriesContainer.x = this.pixelWidth / 2 - bbox.x * scale - bbox.width / 2 * scale;\r\n\t\t\tthis.seriesContainer.y = this.pixelHeight / 2 - bbox.y * scale - bbox.height / 2 * scale;\r\n\r\n\t\t\tthis.updateRectangle();\r\n\t\t\tthis.afterDraw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update elements after drawing the small map.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\t//this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n\t\tthis.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n","/**\r\n * A collection of GeoJSON format-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * Normalizes a geo-point.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo-point\r\n * @return Normalized geo-point\r\n */\r\nexport function normalizePoint(geoPoint: IGeoPoint): IGeoPoint {\r\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\r\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\r\n\r\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n\r\n\tif (Math.abs(latitude180) > 90) {\r\n\t\tlongitude = wrapAngleTo180(longitude + 180);\r\n\t}\r\n\r\n\tgeoPoint.longitude = longitude;\r\n\tgeoPoint.latitude = latitude;\r\n\r\n\treturn geoPoint;\r\n}\r\n\r\n/**\r\n * Normalizes all points of a geo-line.\r\n *\r\n * @ignore Exclude from docs\r\n * @param multiline  Source geo-line\r\n * @return Normalized geo-line\r\n */\r\nexport function normalizeMultiline(multiline: Array<Array<IGeoPoint>>): Array<Array<IGeoPoint>> {\r\n\t$array.each(multiline, (segment) => {\r\n\t\t$array.each(segment, (point) => {\r\n\t\t\tnormalizePoint(point);\r\n\t\t});\r\n\t});\r\n\treturn multiline;\r\n}\r\n\r\n/**\r\n * [wrapAngleTo180 description]\r\n *\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n * @param angle  Angle\r\n * @return Angle\r\n */\r\nexport function wrapAngleTo180(angle: number): number {\r\n\tangle = angle % 360;\r\n\r\n\tif (angle > 180) {\r\n\t\tangle -= 360;\r\n\t}\r\n\tif (angle < -180) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\treturn angle;\r\n}\r\n\r\n/**\r\n * Converts a geo point to a regular point object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo point\r\n * @return Point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): IPoint {\r\n\treturn { x: geoPoint.longitude, y: geoPoint.latitude };\r\n}\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t */\r\n\tposition?: number;\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tadjustRotation?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineObjectAdapters extends IContainerAdapters, IMapLineObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line on the map.\r\n *\r\n * @see {@link IMapLineObjectEvents} for a list of available events\r\n * @see {@link IMapLineObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapLineObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineObjectEvents;\r\n\r\n\t/**\r\n\t * A reference to the [[MapLine]] object this object is attached to.\r\n\t *\r\n\t * @todo Review if necessary (same as parent)\r\n\t */\r\n\tpublic mapLine: MapLine;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.adjustRotation = true;\r\n\t\tthis.className = \"MapLineObject\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition() {\r\n\r\n\t\tlet mapLine = this.mapLine;\r\n\r\n\t\tif (mapLine) {\r\n\r\n\t\t\tlet point: IOrientationPoint = mapLine.positionToPoint(this.position);\r\n\r\n\t\t\tthis.x = point.x;\r\n\t\t\tthis.y = point.y;\r\n\r\n\t\t\tif (this.adjustRotation) {\r\n\t\t\t\tthis.rotation = point.angle;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.mapLine.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet series = this.mapLine.dataItem.component;\r\n\t\t\t\tthis.scale = 1 / series.scale;\r\n\t\t\t}\r\n\r\n\t\t\t// hide out of bounds\r\n\t\t\tif (mapLine.shortestDistance) {\r\n\r\n\t\t\t\tlet projection = this.mapLine.series.chart.projection;\r\n\r\n\t\t\t\tlet geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);\r\n\r\n\t\t\t\tlet visible: any = projection.d3Path({ type: 'Point', coordinates: [geoPoint.longitude, geoPoint.latitude] });\r\n\r\n\t\t\t\tif (!visible) {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t *\r\n\t * @param value  Position within the line (0-1)\r\n\t */\r\n\tpublic set position(value: number) {\r\n\t\tthis.setPropertyValue(\"position\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position within the line\r\n\t */\r\n\tpublic get position(): number {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Auto-rotate\r\n\t */\r\n\tpublic set adjustRotation(value: boolean) {\r\n\t\tthis.setPropertyValue(\"adjustRotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Auto-rotate\r\n\t */\r\n\tpublic get adjustRotation(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustRotation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineObject\"] = MapLineObject;\r\n","/**\r\n * Map image series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapImageDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapImageSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapImageSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t */\r\n\tprotected _mapImage: MapImage;\r\n\r\n\t/**\r\n\t * [_point description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _point: [number, number];\r\n\r\n\t/**\r\n\t * Geographical coordinates image is placed at.\r\n\t */\r\n\tprotected _geoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: this.point } };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t *\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapImage(): MapImage {\r\n\t\tif (!this._mapImage) {\r\n\t\t\tlet mapImage = this.component.mapImages.create();\r\n\t\t\tthis.addSprite(mapImage);\r\n\t\t\tthis._mapImage = mapImage;\r\n\t\t\tthis._disposers.push(mapImage);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapImages.removeValue(mapImage);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis.mapObject = mapImage;\r\n\t\t}\r\n\t\treturn this._mapImage;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set point(point: [number, number]) {\r\n\t\tthis._point = point;\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get point(): [number, number] {\r\n\t\treturn this._point;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set multiPoint(multiPoint: [[number, number]]) {\r\n\t\tthis._point = multiPoint[0];\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(this._point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get multiPoint(): [[number, number]] {\r\n\t\treturn [this._point];\r\n\t}\t\r\n\r\n\t/**\r\n\t * Geographical coordinates (lat/long) image is placed at.\r\n\t *\r\n\t * @param geoPoint Image coordinates\r\n\t */\r\n\tpublic set geoPoint(geoPoint: IGeoPoint) {\r\n\t\tthis._geoPoint = geoPoint;\r\n\t\tthis.point = [geoPoint.longitude, geoPoint.latitude];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image coordinates\r\n\t */\r\n\tpublic get geoPoint(): IGeoPoint {\r\n\t\treturn this._geoPoint;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds image point data in pixels.\r\n\t */\r\n\tpoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in pixels.\r\n\t */\r\n\tmultiPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds image point data in Geo coordinates.\r\n\t */\r\n\tgeoPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImageSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageSeriesAdapters extends IMapSeriesAdapters, IMapImageSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map image (marker) elements.\r\n *\r\n * @see {@link IMapImageSeriesEvents} for a list of available Events\r\n * @see {@link IMapImageSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapImageSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapImageSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this image is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t */\r\n\tprotected _mapImages: ListTemplate<MapImage>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPoint = \"multiPoint\";\r\n\t\tthis.dataFields.point = \"point\";\r\n\r\n\t\tthis.dataFields.geoPoint = \"geoPoint\";\r\n\t\tthis.dataFields.multiGeoPoint = \"multiGeoPoint\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapImageSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the data of the sries, effectively forcing it to redraw\r\n\t * all of its elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this.data.length > 0 && this._parseDataFrom == 0) {\r\n\t\t\tthis.mapImages.clear();\r\n\t\t}\r\n\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata) {\r\n\t\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"Point\" || type == \"MultiPoint\") {  // todo: we don't support multipoints at the moment actually\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\t// make the same as MultiPoint\r\n\t\t\t\t\t\t\t\tif (type == \"Point\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapImageDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPoint: coordinates, id: id, madeFromGeoData:true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPoint) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPoint = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\t// important! this should go after super.validateData\r\n\t\t// if data is parsed in chunks, images list is corrupted, fix it here\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet mapImage = dataItem.mapImage;\r\n\t\t\tif (!mapImage.isDisposed()) {\r\n\t\t\t\tthis.mapImages.moveValue(mapImage);\r\n\t\t\t\tif ($type.isNumber(mapImage.latitude) && $type.isNumber(mapImage.latitude)) {\r\n\t\t\t\t\tdataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t *\r\n\t * @return Map images\r\n\t */\r\n\tpublic get mapImages(): ListTemplate<MapImage> {\r\n\r\n\t\tif (!this._mapImages) {\r\n\t\t\tlet template: MapImage = new MapImage();\r\n\t\t\tlet mapImages = new ListTemplate<MapImage>(template);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapImages));\r\n\t\t\tthis._disposers.push(mapImages.template);\r\n\t\t\tmapImages.template.focusable = true;\r\n\t\t\tmapImages.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapImages = mapImages;\r\n\t\t\tthis._mapObjects = mapImages;\r\n\t\t}\r\n\r\n\t\treturn this._mapImages;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates data element, effectively triggering its redrawal.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]) {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\tdataItem.mapImage.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\t$iter.each(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tmapImage.validatePosition();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapImages.template.copyFrom(source.mapImages.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> {\r\n\t\tlet features: Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapImages.each((mapImage)=>{\r\n\t\t\tif (this.dataItems.indexOf(mapImage._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapImage.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapImage by id\r\n\t * @param image id\r\n\t * @return {MapImage}\r\n\t */\r\n\tpublic getImageById(id: string): MapImage {\r\n\t\treturn $iter.find(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tlet dataContext: any = mapImage.dataItem.dataContext;\r\n\t\t\tif(mapImage.id == id || (dataContext && dataContext.id == id)){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImageSeries\"] = MapImageSeries;\r\nregistry.registeredClasses[\"MapImageSeriesDataItem\"] = MapImageSeriesDataItem;\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapLineObject } from \"./MapLineObject\";\r\nimport { MapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { MapImageSeries } from \"./MapImageSeries\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $geo from \"./Geo\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLine]].\r\n */\r\nexport interface IMapLineProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * If `true` it line will be arched in the way to simulate shortest path\r\n\t * over curvature of Earth's surface, based on currently used on projection.\r\n\t */\r\n\tshortestDistance?: boolean;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images which will be connected by the line\r\n\t */\r\n\timagesToConnect?: MapImage[];\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t */\r\n\tprecision?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLine]].\r\n */\r\nexport interface IMapLineEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineAdapters extends IMapObjectAdapters, IMapLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a line on the map.\r\n *\r\n * @see {@link IMapLineEvents} for a list of available events\r\n * @see {@link IMapLineAdapters} for a list of available Adapters\r\n */\r\nexport class MapLine extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineEvents;\r\n\r\n\t/**\r\n\t * A line visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A list of actual line objects.\r\n\t */\r\n\tprotected _lineObjects: ListTemplate<MapLineObject>;\r\n\r\n\t/**\r\n\t * A reference to arrow object.\r\n\t */\r\n\tprotected _arrow: MapLineObject;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapLineSeries;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t */\r\n\tprotected _imagesToConnect: MapImage[];\r\n\r\n\t/**\r\n\t * A list of event disposers for images.\r\n\t */\r\n\tprotected _imageListeners: { [index: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLine\";\r\n\r\n\t\tthis.createLine();\r\n\t\tthis.line.stroke = color();\r\n\t\tthis.line.parent = this;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"precision\", 0.1);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.shortestDistance = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine() {\r\n\t\tthis.line = new Polyline();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position within the line (0-1) to a physical point\r\n\t * coordinates.\r\n\t *\r\n\t * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tif (this.shortestDistance) {\r\n\t\t\treturn this.series.chart.projection.positionToPoint(this.multiGeoLine, position);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.line) {\r\n\t\t\t\treturn this.line.positionToPoint(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tif (multiGeoLine && multiGeoLine.length > 0) {\r\n\t\t\tthis.setPropertyValue(\"multiGeoLine\", $geo.normalizeMultiline(multiGeoLine), true);\r\n\r\n\t\t\tlet multiLine: Array<Array<[number, number]>> = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\r\n\t\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\r\n\t\t\tthis.updateExtremes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\tlet multiGeoLine = this.getPropertyValue(\"multiGeoLine\");\r\n\t\tif (!multiGeoLine && this.dataItem && this.dataItem.multiGeoLine) {\r\n\t\t\tmultiGeoLine = this.dataItem.multiGeoLine;\r\n\t\t}\r\n\r\n\t\treturn multiGeoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\t\tthis.multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\r\n\t\tlet multiLine = this.getPropertyValue(\"multiLine\");\r\n\t\tif (!multiLine && this.dataItem && this.dataItem.multiLine) {\r\n\t\t\tmultiLine = this.dataItem.multiLine;\r\n\t\t}\r\n\r\n\t\treturn multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t *\r\n\t * Parameter is an array that can hold string `id`'s to of the images, or\r\n\t * references to actual [[MapImage]] objects.\r\n\t *\r\n\t * @param images  Images\r\n\t */\r\n\tpublic set imagesToConnect(images: MapImage[] | string[]) {\r\n\t\tthis.setPropertyValue(\"imagesToConnect\", images, true);\r\n\t\tthis.handleImagesToConnect();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet chart = this.series.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\tif (!series.isReady()) {\r\n\t\t\t\t\t\t\tthis._disposers.push(series.events.on(\"ready\", this.handleImagesToConnect, this, false));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {MapImages[]}\r\n\t */\r\n\tpublic get imagesToConnect(): MapImage[] | string[] {\r\n\t\treturn this.getPropertyValue(\"imagesToConnect\");\r\n\t}\r\n\r\n\tprotected handleImagesToConnect() {\r\n\t\tif (this.imagesToConnect) {\r\n\t\t\tlet segment: Array<IGeoPoint> = [];\r\n\t\t\tlet multiGeoLine = [segment];\r\n\r\n\t\t\tfor (let image of this.imagesToConnect) {\r\n\t\t\t\tif ($type.isString(image)) {\r\n\t\t\t\t\tlet chart = this.series.chart;\r\n\t\t\t\t\tif (chart) {\r\n\t\t\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\t\t\tlet img = series.getImageById(<string>image)\r\n\t\t\t\t\t\t\t\tif (img) {\r\n\t\t\t\t\t\t\t\t\timage = img;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (image instanceof MapImage) {\r\n\r\n\t\t\t\t\tsegment.push({ longitude: (<MapImage>image).longitude, latitude: (<MapImage>image).latitude });\r\n\r\n\t\t\t\t\tif (!this._imageListeners[image.uid]) {\r\n\t\t\t\t\t\tlet disposer = image.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == \"longitude\" || event.property == \"latitude\") {\r\n\t\t\t\t\t\t\t\tthis.handleImagesToConnect();\r\n\t\t\t\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this, false);\r\n\t\t\t\t\t\tthis._imageListeners[image.uid] = disposer;\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.multiGeoLine = multiGeoLine;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the line, effectively forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chart: MapChart = this.series.chart;\r\n\r\n\t\tif (this.multiLine) {\r\n\r\n\t\t\tif (!this.shortestDistance) {\r\n\r\n\t\t\t\tlet convertedPoints: Array<Array<IPoint>> = [];\r\n\r\n\t\t\t\tfor (let i = 0, len = this.multiLine.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet segment: Array<[number, number]> = this.multiLine[i];\r\n\r\n\t\t\t\t\tlet convertedSegmentPoints: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tfor (let s = 0, slen = segment.length; s < slen; s++) {\r\n\t\t\t\t\t\tlet geoPoint: [number, number] = segment[s];\r\n\t\t\t\t\t\tlet point: IPoint = this.series.chart.projection.convert({ longitude: geoPoint[0], latitude: geoPoint[1] });\r\n\t\t\t\t\t\tconvertedSegmentPoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconvertedPoints.push(convertedSegmentPoints);\r\n\t\t\t\t}\r\n\t\t\t\tthis.line.segments = convertedPoints;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchart.projection.d3Projection.precision(this.precision);\r\n\t\t\t\tthis.line.path = chart.projection.d3Path(<any>this.getFeature());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._arrow) {\r\n\t\t\t\tthis._arrow.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.lineObjects.iterator(), (x) => {\r\n\t\t\t\tx.validatePosition();\r\n\t\t\t});\r\n\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t\telse if (this.imagesToConnect) {\r\n\t\t\tthis.handleImagesToConnect();\r\n\t\t}\r\n\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0 && this.multiLine[0] && this.multiLine[0].length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * The line should take the shortest path over the globe.\r\n\t *\r\n\t * Enabling this will make the line look differently in different\r\n\t * projections. Only `MapLine` supports this setting, `MapArc` and\r\n\t * `MapSplice` don't.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Real path?\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\t\tthis.setPropertyValue(\"shortestDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Real path?\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn this.getPropertyValue(\"shortestDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * List of separate line objects the line consists of.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of line objects\r\n\t */\r\n\tpublic get lineObjects(): ListTemplate<MapLineObject> {\r\n\t\tif (!this._lineObjects) {\r\n\t\t\tthis._lineObjects = new ListTemplate<MapLineObject>(new MapLineObject());\r\n\t\t\tthis._lineObjects.events.on(\"inserted\", this.handleLineObjectAdded, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._lineObjects));\r\n\t\t\tthis._disposers.push(this._lineObjects.template);\r\n\t\t}\r\n\r\n\t\treturn this._lineObjects;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorate a [[LineObject]] when it is added to the line.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleLineObjectAdded(event: IListEvents<MapLineObject>[\"inserted\"]) {\r\n\t\tlet mapLineObject: MapLineObject = event.newValue;\r\n\t\tmapLineObject.mapLine = this;\r\n\t\tmapLineObject.shouldClone = false;\r\n\t\tmapLineObject.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLineObject]] to use as an option arrowhead on the line.\r\n\t *\r\n\t * Just accessing this property will create a default arrowhead on the line\r\n\t * automatically.\r\n\t *\r\n\t * @param arrow  Arrow element\r\n\t */\r\n\tpublic set arrow(arrow: MapLineObject) {\r\n\t\tthis._arrow = arrow;\r\n\t\tarrow.mapLine = this;\r\n\t\tarrow.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrow element\r\n\t */\r\n\tpublic get arrow(): MapLineObject {\r\n\t\tif (!this._arrow) {\r\n\t\t\tlet arrow: MapLineObject = this.createChild(MapLineObject);\r\n\t\t\tarrow.shouldClone = false;\r\n\t\t\tarrow.width = 8;\r\n\t\t\tarrow.height = 10;\r\n\t\t\tarrow.mapLine = this;\r\n\t\t\tarrow.position = 0.5;\r\n\r\n\t\t\tlet triangle = arrow.createChild(Triangle);\r\n\t\t\t//triangle.shouldClone = false;\r\n\t\t\ttriangle.fillOpacity = 1;\r\n\t\t\ttriangle.width = percent(100);\r\n\t\t\ttriangle.height = percent(100);\r\n\t\t\ttriangle.rotation = 90;\r\n\t\t\ttriangle.horizontalCenter = \"middle\";\r\n\t\t\ttriangle.verticalCenter = \"middle\";\r\n\t\t\tthis._arrow = arrow;\r\n\t\t}\r\n\t\treturn this._arrow;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies line properties and other attributes, like arrow, from another\r\n\t * instance of [[MapLine]].\r\n\t *\r\n\t * @param source  Source map line\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.lineObjects.copyFrom(source.lineObjects);\r\n\t\tif (source._arrow) {\r\n\t\t\tthis.arrow = <MapLineObject>source.arrow.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!(x instanceof Percent)) {\r\n\t\t\tx = percent(50);\r\n\t\t}\r\n\t\tif (x instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(x.value).x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!(y instanceof Percent)) {\r\n\t\t\ty = percent(50);\r\n\t\t}\r\n\t\tif (y instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(y.value).y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Precision\r\n\t */\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLine\"] = MapLine;\r\n","/**\r\n * Map line series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapLineDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapLineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapLineSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line.\r\n\t */\r\n\tprotected _line: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiLine: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line.\r\n\t */\r\n\tprotected _geoLine: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiGeoLine: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapLine(): this[\"_mapLine\"] {\r\n\t\tif (!this._mapLine) {\r\n\t\t\tlet mapLine = this.component.mapLines.create();\r\n\r\n\t\t\tthis._mapLine = mapLine;\r\n\t\t\tthis.addSprite(mapLine);\r\n\r\n\t\t\tthis._disposers.push(mapLine);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapLines.removeValue(mapLine);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapLine;\r\n\t\t}\r\n\t\treturn this._mapLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [ 100, 150 ],\r\n\t *   [ 120, 200 ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param line  Coordinates\r\n\t */\r\n\tpublic set line(line: Array<[number, number]>) {\r\n\t\tthis._line = line;\r\n\t\tthis.multiLine = [line];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get line(): Array<[number, number]> {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis._multiLine = multiLine;\r\n\t\tthis._multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\t\treturn this._multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { longitude: 3.121, latitude: 0.58 },\r\n\t *   { longitude: -5.199, latitude: 21.223 }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference\r\n\t * @param geoLine  Coordinates\r\n\t */\r\n\tpublic set geoLine(geoLine: Array<IGeoPoint>) {\r\n\t\tthis._geoLine = geoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine([geoLine]);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoLine(): Array<IGeoPoint> {\r\n\t\treturn this._geoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tthis._multiGeoLine = multiGeoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\treturn this._multiGeoLine;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds line data in pixels.\r\n\t */\r\n\tline?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in pixels.\r\n\t */\r\n\tmultiLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds line data in Geo coordinates.\r\n\t */\r\n\tgeoLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in Geo coordinates.\r\n\t */\r\n\tmultiGeoLine?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineSeriesAdapters extends IMapSeriesAdapters, IMapLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map line series.\r\n *\r\n * @see {@link IMapLineSeriesEvents} for a list of available Events\r\n * @see {@link IMapLineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapLineSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A list of map lins in the series.\r\n\t */\r\n\tprotected _mapLines: ListTemplate<this[\"_mapLine\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiLine = \"multiLine\";\r\n\t\tthis.dataFields.line = \"line\";\r\n\r\n\t\tthis.dataFields.geoLine = \"geoLine\";\r\n\t\tthis.dataFields.multiGeoLine = \"multiGeoLine\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"LineString\" || type == \"MultiLineString\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapLineDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (type == \"LineString\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiLine: coordinates, id: id, madeFromGeoData:true};\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiLine) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiLine = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of lines in the series.\r\n\t *\r\n\t * @return Lines\r\n\t */\r\n\tpublic get mapLines(): ListTemplate<this[\"_mapLine\"]> {\r\n\r\n\t\tif (!this._mapLines) {\r\n\t\t\tlet lineTemplate: MapLine = this.createLine();\r\n\t\t\tlet mapLines = new ListTemplate<MapLine>(lineTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapLines));\r\n\t\t\tthis._disposers.push(mapLines.template);\r\n\t\t\tmapLines.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapLines = mapLines;\r\n\t\t\tthis._mapObjects = mapLines;\r\n\t\t}\r\n\r\n\t\treturn this._mapLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapLine();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapLine);\r\n\t\t})\r\n\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tmapLine.validate();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapLines.template.copyFrom(source.mapLines.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] {\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] = [];\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tif (this.dataItems.indexOf(mapLine._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapLine.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * returns MapLine by id\r\n\t * @param line id\r\n\t * @return {MapLine}\r\n\t */\r\n\tpublic getLineById(id: string): MapLine {\r\n\t\treturn $iter.find(this.mapLines.iterator(), (mapLine) => {\r\n\t\t\tlet dataContext: any = mapLine.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineSeries\"] = MapLineSeries;\r\nregistry.registeredClasses[\"MapLineSeriesDataItem\"] = MapLineSeriesDataItem;\r\n","/**\r\n * Graticule (map grid line).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GraticuleSeries } from \"./GraticuleSeries\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Graticule]].\r\n */\r\nexport interface IGraticuleProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[Graticule]].\r\n */\r\nexport interface IGraticuleEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Graticule]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleAdapters extends IMapLineAdapters, IGraticuleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Graticule is a map line spanning from the poles or around the globe.\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleEvents} for a list of available events\r\n * @see {@link IGraticuleAdapters} for a list of available Adapters\r\n */\r\nexport class Graticule extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Graticule\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.shortestDistance = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Graticule\"] = Graticule;\r\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","/**\r\n * Graticule (map grid) series functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { Graticule } from \"./Graticule\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GraticuleSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GraticuleSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[Graticule]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesProperties extends IMapLineSeriesProperties {\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t */\r\n\t// majorLatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t */\r\n\t// majorLongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfitExtent?: boolean;\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsingleSprite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GraticuleSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleSeriesAdapters extends IMapLineSeriesAdapters, IGraticuleSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class is used to create a set of graticules (map grid).\r\n *\r\n * To enable, create like you would create any regular map series:\r\n *\r\n * ```TypeScript\r\n * let graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JavaScript\r\n * var graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     \"type\": \"GraticuleSeries\",\r\n *     \"mapLines\": {\r\n *       \"line\": {\r\n *         \"stroke\": \"#000000\",\r\n *         \"strokeOpacity\": 0.1\r\n *       }\r\n *     }\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleSeriesEvents} for a list of available Events\r\n * @see {@link IGraticuleSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class GraticuleSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGraticuleSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: GraticuleSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeries\";\r\n\r\n\t\tthis.longitudeStep = 10;\r\n\r\n\t\tthis.latitudeStep = 10;\r\n\r\n\t\tthis.north = 90;\r\n\t\tthis.south = -90;\r\n\t\tthis.east = -180;\r\n\t\tthis.west = 180;\r\n\r\n\t\t//this.majorLatitudeStep = 90;\r\n\t\t//this.majorLongitudeStep = 360;\r\n\r\n\t\tthis.fitExtent = true;\r\n\r\n\t\tthis.singleSprite = true;\r\n\r\n\t\tthis.events.disableType(\"geoBoundsChanged\");\r\n\r\n\t\tthis.mapLines.template.line.strokeOpacity = 0.08;\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tthis.hiddenInLegend = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new GraticuleSeriesDataItem();\r\n\t}\r\n\r\n\tpublic validateData() {\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.mapLines.clear();\r\n\r\n\t\tlet graticule = d3geo.geoGraticule();\r\n\r\n\t\tif (graticule) {\r\n\t\t\tgraticule.stepMinor([this.longitudeStep, this.latitudeStep]);\r\n\t\t\tgraticule.stepMajor([360, 360]);\r\n\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (this.fitExtent) {\r\n\t\t\t\tgraticule.extent([[chart.east, chart.north], [chart.west, chart.south]]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgraticule.extent([[this.east, this.north], [this.west, this.south]]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.singleSprite) {\r\n\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\tmapLine.multiLine = graticule().coordinates as Array<Array<[number, number]>>;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet lineStrings = graticule.lines();\r\n\r\n\t\t\t\t$array.each(lineStrings, (lineString) => {\r\n\t\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\t\tmapLine.multiLine = [lineString.coordinates as Array<[number, number]>];\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new Graticule();\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set latitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"latitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get latitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"latitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Step\r\n\t */\r\n\tpublic set longitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"longitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get longitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"longitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLatitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLatitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLatitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLatitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLongitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLongitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLongitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLongitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Fit?\r\n\t */\r\n\tpublic set fitExtent(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"fitExtent\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fit?\r\n\t */\r\n\tpublic get fitExtent(): boolean {\r\n\t\treturn this.getPropertyValue(\"fitExtent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Use single sprite?\r\n\t */\r\n\tpublic set singleSprite(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"singleSprite\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use single sprite?\r\n\t */\r\n\tpublic get singleSprite(): boolean {\r\n\t\treturn this.getPropertyValue(\"singleSprite\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GraticuleSeries\"] = GraticuleSeries;\r\nregistry.registeredClasses[\"GraticuleSeriesDataItem\"] = GraticuleSeriesDataItem;\r\n","/**\r\n * Map module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { MapSeries } from \"../map/MapSeries\";\r\nimport { MapObject } from \"../map/MapObject\";\r\nimport { MapImage } from \"../map/MapImage\";\r\nimport { MapPolygon } from \"../map/MapPolygon\";\r\nimport { MapPolygonSeries } from \"../map/MapPolygonSeries\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { Projection } from \"../map/projections/Projection\";\r\nimport { ZoomControl } from \"../map/ZoomControl\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { SmallMap } from \"../map/SmallMap\";\r\nimport * as $mapUtils from \"../map/MapUtils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { options } from \"../../core/Options\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $geo from \"../map/Geo\";\r\nimport { Paper } from \"../../core/rendering/Paper\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { GraticuleSeries } from \"../map/GraticuleSeries\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { Legend } from \"../Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines interface for a map polygon object.\r\n */\r\nexport interface IMapPolygonDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single polygon information in X/Y coordinates.\r\n\t */\r\n\tpolygon?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in X/Y coordinates.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Single polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPolygon?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: Array<Array<Array<IGeoPoint>>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines types of map line.\r\n */\r\nexport type MapLineType = \"line\" | \"arc\" | \"spline\" | \"realTrajectory\";\r\n\r\n/**\r\n * Defines interface for the map line object.\r\n */\r\nexport interface IMapLineDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single line information in X/Y coordinates.\r\n\t */\r\n\tline?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Multi-part line information in X/Y coordinates.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Single line information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoLine?: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * Multi-part line information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines interface for a map image (market) object.\r\n */\r\nexport interface IMapImageDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Image position information in X/Y coordinates.\r\n\t */\r\n\tpoint?: [number, number];\r\n\r\n\t/**\r\n\t * Multi-image position information in X/Y coordinates.\r\n\t */\r\n\tmultiPoint?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Image position information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * Multi-image position information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPoint?: Array<IGeoPoint>;\r\n\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines type suitable for all map objects.\r\n */\r\nexport type IMapDataObject = IMapPolygonDataObject | IMapLineDataObject;\r\n\r\n/**\r\n * Defines data fields for [[MapChart]].\r\n */\r\nexport interface IMapChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapChart]].\r\n */\r\nexport interface IMapChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * Projection to be used when drawing the map.\r\n\t */\r\n\tprojection?: Projection;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t */\r\n\tdeltaLongitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to -90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaLatitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal \"Z\" - an axis that goes from\r\n\t * the center of the globe directly to the viewer.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaGamma?: number;\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * A map will start centered on this geographical point.\r\n\t */\r\n\thomeGeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * A map will start zoomed to this level.\r\n\t */\r\n\thomeZoomLevel?: number;\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t */\r\n\tmouseWheelBehavior?: \"zoom\" | \"none\";\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t */\r\n\tpanBehavior?: \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\";\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tcenterMapOnZoomOut?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapChart]].\r\n */\r\nexport interface IMapChartEvents extends ISerialChartEvents {\r\n\r\n\t/**\r\n\t * Invoked when map is zoomed in or out.\r\n\t */\r\n\tzoomlevelchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when map is panned. (moved)\r\n\t */\r\n\tmappositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when scale ratio is changed, e.g when the whole map area is\r\n\t * resized and the map needs to be resized to fit it, without changing\r\n\t * zoom level.\r\n\t */\r\n\tscaleratiochanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapChartAdapters extends ISerialChartAdapters, IMapChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a map.\r\n *\r\n * @see {@link IMapChartEvents} for a list of available Events\r\n * @see {@link IMapChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation\r\n */\r\nexport class MapChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapChartEvents;\r\n\r\n\t/**\r\n\t * The East-most longitude point of the map.\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * The West-most longitude point of the map.\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * The South-most latitude point of the map.\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * The North-most latitude point of the map.\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * A ratio to be used when scaling the map shapes.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * A screen point of the map's center.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic centerPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's left.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic westPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's right.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic eastPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's top.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic northPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's bottom.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic southPoint: IPoint;\r\n\r\n\t/**\r\n\t * Width of the actual map objects (px).\r\n\t */\r\n\tpublic seriesWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxLeft: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxRight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxTop: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxBottom: number;\r\n\r\n\t/**\r\n\t * Height of the actual map objects (px).\r\n\t */\r\n\tpublic seriesHeight: number;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\t/**\r\n\t * Names of geodata items, such as countries, to replace by from loaded\r\n\t * geodata.\r\n\t *\r\n\t * Can be used to override built-in English names for countries.\r\n\t *\r\n\t * ```TypeScript\r\n\t * import am4geodata_lang_ES from '@amcharts4-geodata/lang/es';\r\n\t * // ...\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"geodataNames\": am4geodata_lang_ES\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.7.4\r\n\t */\r\n\tpublic geodataNames: { [index: string]: string };\r\n\r\n\t/**\r\n\t * A reference to a [[ZoomControl]] instance.\r\n\t */\r\n\tprotected _zoomControl: ZoomControl;\r\n\r\n\t/**\r\n\t * A reference to a [[SmallMap]] control instance.\r\n\t */\r\n\tprotected _smallMap: SmallMap;\r\n\r\n\t/**\r\n\t * [_zoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _zoomGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Default duration of zoom animations (ms).\r\n\t */\r\n\tpublic zoomDuration: number = 1000;\r\n\r\n\t/**\r\n\t * Default zooming animation easing function.\r\n\t */\r\n\tpublic zoomEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Smallest available zoom level. The map will not allow to zoom out past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tpublic minZoomLevel: number = 1;\r\n\r\n\t/**\r\n\t * Biggest available zoom level. The map will not allow to zoom in past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 32\r\n\t */\r\n\tpublic maxZoomLevel: number = 32;\r\n\r\n\t/**\r\n\t * [_prevZoomLevel description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomLevel: number;\r\n\r\n\t/**\r\n\t * [_prevZoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomGeoPoint: IGeoPoint = { latitude: 0, longitude: 0 };\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: MapSeries;\r\n\r\n\t/**\r\n\t * A reference to currently playing animation, e.g. zooming.\r\n\t */\r\n\tprotected _mapAnimation: Animation;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _zoomGeoPointReal: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _centerGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\r\n\tpublic panSprite: Circle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLongitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLatitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _backgroundSeries: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChart\";\r\n\r\n\t\t// Set default projection\r\n\t\tthis.projection = new Projection();\r\n\r\n\t\tthis.setPropertyValue(\"deltaLatitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaLongitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaGamma\", 0);\r\n\t\tthis.maxPanOut = 0.7;\r\n\t\tthis.homeZoomLevel = 1;\r\n\t\tthis.zoomStep = 2;\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.centerMapOnZoomOut = true;\r\n\r\n\t\t// Set padding\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\t$utils.used(this.backgroundSeries);\r\n\r\n\t\t// so that the map would render in a hidden div too\r\n\t\tthis.minWidth = 10;\r\n\t\tthis.minHeight = 10;\r\n\r\n\t\tthis.events.once(\"inited\", this.handleAllInited, this, false);\r\n\r\n\t\t// Create a container for map series\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.visible = false;\r\n\t\tseriesContainer.inert = true;\r\n\t\tseriesContainer.resizable = true;\r\n\t\tseriesContainer.events.on(\"transformed\", this.handleMapTransform, this, false);\r\n\t\tseriesContainer.events.on(\"doublehit\", this.handleDoubleHit, this, false);\r\n\t\tseriesContainer.events.on(\"dragged\", this.handleDrag, this, false);\r\n\t\tseriesContainer.zIndex = 0;\r\n\t\tseriesContainer.dragWhileResize = true;\r\n\t\t//seriesContainer.background.fillOpacity = 0;\r\n\r\n\t\tseriesContainer.adapter.add(\"scale\", (scale, target) => {\r\n\t\t\treturn $math.fitToRange(scale, this.minZoomLevel, this.maxZoomLevel);\r\n\t\t});\r\n\r\n\t\t// Set up events\r\n\t\t//this.events.on(\"validated\", this.updateExtremes, this);\r\n\t\t//this.events.on(\"datavalidated\", this.handleAllValidated, this, false);\r\n\t\t//this.events.on(\"datavalidated\", this.updateExtremes, this, false);\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t}\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Set up main chart container, e.g. set backgrounds and events to monitor\r\n\t\t// size changes, etc.\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.parent = this;\r\n\t\tchartContainer.zIndex = -1;\r\n\r\n\t\tthis._disposers.push(this.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tif (this._mapAnimation) {\r\n\t\t\t\t\tthis._mapAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet allInited = true;\r\n\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\t\t\tallInited = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allInited) {\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t}\r\n\t\t\t\tthis.zoomToGeoPoint(this._zoomGeoPointReal, this.zoomLevel, true, 0);\r\n\t\t\t}\r\n\r\n\t\t}, undefined, false));\r\n\r\n\t\tlet chartContainerBg = chartContainer.background;\r\n\t\tchartContainerBg.fillOpacity = 0;\r\n\t\tchartContainerBg.events.on(\"down\", (e) => { this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, this);\r\n\t\tchartContainerBg.events.on(\"up\", (e) => { this.seriesContainer.dragStop() }, this);\r\n\t\tchartContainerBg.events.on(\"doublehit\", this.handleDoubleHit, this);\r\n\t\tchartContainerBg.focusable = true;\r\n\r\n\t\tchartContainer.events.on(\"down\", this.handleMapDown, this, false);\r\n\r\n\t\tthis.addDisposer(seriesContainer.events.on(\"down\", () => {\r\n\t\t\t// Cancel any move inertia if there is one\r\n\t\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\t\tif (inertia) {\r\n\t\t\t\tinertia.done();\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\t// Add description to background\r\n\t\tthis.background.fillOpacity = 0;\r\n\r\n\t\t// Add keyboard events for panning\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\tconst key = keyboard.getEventKey(ev.event);\r\n\t\t\t\tif (!this._zoomControl || !this._zoomControl.thumb.isFocused) {\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: 0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: -0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\tthis.pan({ x: -0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tthis.mouseWheelBehavior = \"zoom\";\r\n\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handlePanDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handlePanUp, this));\r\n\t\t//this._disposers.push(interaction.body.events.on(\"track\", this.handlePanMove, this));\r\n\r\n\t\tlet panSprite = this.seriesContainer.createChild(Circle);\r\n\t\tpanSprite.radius = 10;\r\n\t\tpanSprite.inert = true;\r\n\t\tpanSprite.isMeasured = false;\r\n\t\tpanSprite.events.on(\"transformed\", this.handlePanMove, this, false);\r\n\t\tpanSprite.interactionsEnabled = false;\r\n\t\tpanSprite.opacity = 0;\r\n\t\tpanSprite.x = 0;\r\n\t\tpanSprite.y = 0;\r\n\t\tthis.panSprite = panSprite;\r\n\t\tthis.panBehavior = \"move\";\r\n\t\t/*\r\n\t\t\t\tthis.panSprite.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\t\t\"time\": 100,\r\n\t\t\t\t\t\"duration\": 1000,\r\n\t\t\t\t\t\"factor\": 3,\r\n\t\t\t\t\t\"easing\": $ease.sinOut\r\n\t\t\t\t});*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanDown(event: IInteractionEvents[\"down\"]): void {\r\n\t\tlet svgPoint = $utils.documentPointToSvg(event.pointer.point, this.htmlContainer);\r\n\t\tif (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < this.svgContainer.width && svgPoint.y < this.svgContainer.height) {\r\n\t\t\t// Get local point\r\n\t\t\tthis._downPointOrig = $utils.documentPointToSprite(event.pointer.point, this.seriesContainer);\r\n\r\n\t\t\tthis.panSprite.moveTo(this._downPointOrig);\r\n\t\t\tthis.panSprite.dragStart(event.pointer);\r\n\t\t\tthis._downDeltaLongitude = this.deltaLongitude;\r\n\t\t\tthis._downDeltaLatitude = this.deltaLatitude;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanUp(event: IInteractionEvents[\"down\"]): void {\r\n\t\tif (this._downPointOrig) {\r\n\t\t\tthis.panSprite.dragStop(event.pointer, true);\r\n\t\t}\r\n\t\tthis._downPointOrig = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanMove(): void {\r\n\r\n\t\tif (!this.seriesContainer.isResized) {\r\n\r\n\t\t\tif (getInteraction().areTransformed([this.panSprite.interactions, this.seriesContainer.interactions])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\t\tlet panBehavior = this.panBehavior;\r\n\r\n\t\t\tif (panBehavior != \"move\" && panBehavior != \"none\" && this._downPointOrig && d3Projection.rotate) {\r\n\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\r\n\t\t\t\tlet dln = rotation[0];\r\n\t\t\t\tlet dlt = rotation[1];\r\n\t\t\t\tlet dlg = rotation[2];\r\n\r\n\t\t\t\td3Projection.rotate([0, 0, 0]);\r\n\r\n\t\t\t\tlet downGeoLocal = this.projection.invert(this._downPointOrig);\r\n\r\n\t\t\t\tlet local: IPoint = { x: this.panSprite.pixelX, y: this.panSprite.pixelY };\r\n\t\t\t\tlet geoLocal: IGeoPoint;\r\n\t\t\t\tif (local) {\r\n\t\t\t\t\tgeoLocal = this.projection.invert(local);\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3Projection.rotate([dln, dlt, dlg]);\r\n\r\n\t\t\t\tif (geoLocal) {\r\n\t\t\t\t\tif (panBehavior == \"rotateLat\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLatitude = this._downDeltaLatitude + geoLocal.latitude - downGeoLocal.latitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panBehavior == \"rotateLong\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLongitude = this._downDeltaLongitude + geoLocal.longitude - downGeoLocal.longitude;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAllInited() {\r\n\t\tlet inited = true;\r\n\t\tthis.seriesContainer.visible = true;\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\tinited = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (inited) {\r\n\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\tthis.updateScaleRatio();\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// TODO verify that this is correct\r\n\t\t\tconst disposer = registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tthis.removeDispose(disposer);\r\n\t\t\t\tthis.handleAllInited();\r\n\t\t\t}, this, false);\r\n\r\n\t\t\tthis.addDisposer(disposer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateZoomGeoPoint() {\r\n\t\tlet seriesPoint = $utils.svgPointToSprite({ x: this.innerWidth / 2 + this.pixelPaddingLeft, y: this.innerHeight / 2 + this.pixelPaddingTop }, this.series.getIndex(0));\r\n\t\tlet geoPoint = this.projection.invert(seriesPoint);\r\n\t\tthis._zoomGeoPointReal = geoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateCenterGeoPoint() {\r\n\t\tlet maxLeft: number;\r\n\t\tlet maxRight: number;\r\n\t\tlet maxTop: number;\r\n\t\tlet maxBottom: number;\r\n\r\n\r\n\t\tif (this.backgroundSeries) {\r\n\t\t\tlet features = this.backgroundSeries.getFeatures();\r\n\t\t\tif (features.length > 0) {\r\n\t\t\t\tlet bounds = this.projection.d3Path.bounds(<any>features[0].geometry);\r\n\t\t\t\tmaxLeft = bounds[0][0];\r\n\t\t\t\tmaxTop = bounds[0][1];\r\n\t\t\t\tmaxRight = bounds[1][0];\r\n\t\t\t\tmaxBottom = bounds[1][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet bbox = series.group.node.getBBox();\r\n\r\n\t\t\t\tif (maxLeft > bbox.x || !$type.isNumber(maxLeft)) {\r\n\t\t\t\t\tmaxLeft = bbox.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxRight < bbox.x + bbox.width || !$type.isNumber(maxRight)) {\r\n\t\t\t\t\tmaxRight = bbox.x + bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxTop > bbox.y || !$type.isNumber(maxTop)) {\r\n\t\t\t\t\tmaxTop = bbox.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxBottom < bbox.y + bbox.height || !$type.isNumber(maxBottom)) {\r\n\t\t\t\t\tmaxBottom = bbox.y + bbox.height;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.seriesMaxLeft = maxLeft;\r\n\t\tthis.seriesMaxRight = maxRight;\r\n\t\tthis.seriesMaxTop = maxTop;\r\n\t\tthis.seriesMaxBottom = maxBottom;\r\n\r\n\t\tthis.seriesWidth = maxRight - maxLeft;\r\n\t\tthis.seriesHeight = maxBottom - maxTop;\r\n\r\n\t\tif (this.seriesWidth > 0 && this.seriesHeight > 0) {\r\n\t\t\tthis.chartContainer.visible = true;\r\n\t\t\tthis._centerGeoPoint = this.projection.invert({ x: maxLeft + (maxRight - maxLeft) / 2, y: maxTop + (maxBottom - maxTop) / 2 });\r\n\r\n\t\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\t\tthis._zoomGeoPointReal = this._centerGeoPoint;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chartContainer.visible = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents map to be dragged out of the container area\r\n\t * @ignore\r\n\t */\r\n\tprotected handleDrag() {\r\n\r\n\t\tlet d = this.zoomLevel * this.scaleRatio;\r\n\r\n\t\tlet ww = this.seriesWidth * d;\r\n\t\tlet hh = this.seriesHeight * d;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tlet maxLeft = this.seriesMaxLeft * d;\r\n\t\tlet maxRight = this.seriesMaxRight * d;\r\n\t\tlet maxTop = this.seriesMaxTop * d;\r\n\t\tlet maxBottom = this.seriesMaxBottom * d;\r\n\r\n\t\tlet x = seriesContainer.pixelX;\r\n\t\tlet y = seriesContainer.pixelY;\r\n\r\n\t\tlet maxPanOut = this.maxPanOut;\r\n\r\n\t\tlet minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww - maxLeft, -maxLeft);\r\n\t\tif (x < minX) {\r\n\t\t\tx = minX;\r\n\t\t}\r\n\r\n\t\tlet maxX = Math.max(this.maxWidth * maxPanOut - maxLeft, this.maxWidth - maxRight);\r\n\t\tif (x > maxX) {\r\n\t\t\tx = maxX;\r\n\t\t}\r\n\r\n\t\tlet minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh - maxTop, -maxTop)\r\n\t\tif (y < minY) {\r\n\t\t\ty = minY;\r\n\t\t}\r\n\r\n\t\tlet maxY = Math.max(this.maxHeight * maxPanOut - maxTop, this.maxHeight - maxBottom);\r\n\t\tif (y > maxY) {\r\n\t\t\ty = maxY;\r\n\t\t}\r\n\r\n\t\tseriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);\r\n\r\n\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Map\");\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(this.background.readerTitle)) {\r\n\t\t\tthis.background.readerTitle = this.language.translate(\"Use plus and minus keys on your keyboard to zoom in and out\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when a pointer presses down on the map, e.g. user presses\r\n\t * down mouse or touches the map on a screen.\r\n\t *\r\n\t * Stops all animations currently going on.\r\n\t */\r\n\tprotected handleMapDown(): void {\r\n\t\tif (this._mapAnimation) {\r\n\t\t\tthis._mapAnimation.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the event when user doubleclicks or dooubletaps the map: zooms\r\n\t * in on the reference point.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleDoubleHit(event: AMEvent<Sprite, ISpriteEvents>[\"doublehit\"]) {\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\t\tthis.zoomIn(geoPoint);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n\t * map: zooms in or out depending on the direction of the wheel turn.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\r\n\t\t// Cancel any move inertia if there is one\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\r\n\t\tif (event.shift.y < 0) {\r\n\t\t\tthis.zoomIn(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.zoomOut(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t * @default zoomX\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoom\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.chartContainer.wheelable = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoom\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t * @param  value  Behavior\r\n\t */\r\n\tpublic set panBehavior(value: \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\") {\r\n\t\tif (this.setPropertyValue(\"panBehavior\", value)) {\r\n\t\t\tlet seriesContainer = this.seriesContainer;\r\n\t\t\tthis.panSprite.draggable = false;\r\n\t\t\tseriesContainer.draggable = false;\r\n\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase \"move\":\r\n\t\t\t\t\tseriesContainer.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.panSprite.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns If the map should be centered when zooming out.\r\n\t */\r\n\tpublic get centerMapOnZoomOut(): boolean {\r\n\t\treturn this.getPropertyValue(\"centerMapOnZoomOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tpublic set centerMapOnZoomOut(value: boolean) {\r\n\t\tthis.setPropertyValue(\"centerMapOnZoomOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Behavior\r\n\t */\r\n\tpublic get panBehavior(): \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\" {\r\n\t\treturn this.getPropertyValue(\"panBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Projection to use for the map.\r\n\t *\r\n\t * Available projections:\r\n\t * * Albers\r\n\t * * AlbersUSA\r\n\t * * AzimuthalEqualArea\r\n\t * * Eckert6\r\n\t * * EqualEarth\r\n\t * * Mercator\r\n\t * * Miller\r\n\t * * NaturalEarth\r\n\t * * Orthographic\r\n\t * * Stereographic\r\n\t *\r\n\t * ```TypeScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"projection\": \"Mercator\"\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Setting_projection} More about projections\r\n\t * @param projection  Projection\r\n\t */\r\n\tpublic set projection(projection: Projection) {\r\n\t\tif (this.setPropertyValue(\"projection\", projection)) {\r\n\t\t\tthis.invalidateProjection();\r\n\r\n\t\t\tprojection.chart = this;\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tthis._backgroundSeries.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.events.once(\"validated\", () => {\r\n\t\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Projection\r\n\t */\r\n\tpublic get projection(): Projection {\r\n\t\treturn this.getPropertyValue(\"projection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates the longitudes and latitudes of the most distant points from\r\n\t * the center in all four directions: West, East, North, and South.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\r\n\t\tlet east: number;\r\n\t\tlet north: number;\r\n\t\tlet west: number;\r\n\t\tlet south: number;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = series.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = series.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = series.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = series.east;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet features: any[] = [];\r\n\t\tlet foundGraticule = false;\r\n\t\t// if we gave graticule, get features of these series only for faster fitSize\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series instanceof GraticuleSeries && !series.fitExtent) {\r\n\t\t\t\tfeatures = series.getFeatures();\r\n\t\t\t\tfoundGraticule = true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!foundGraticule) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeatures = features.concat(series.getFeatures());\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet w = $math.max(50, this.innerWidth);\r\n\t\tlet h = $math.max(50, this.innerHeight);\r\n\r\n\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\tif (features.length > 0 && d3Projection && (this.east != east || this.west != west || this.north != north || this.south != south)) {\r\n\t\t\tthis.east = east;\r\n\t\t\tthis.west = west;\r\n\t\t\tthis.north = north;\r\n\t\t\tthis.south = south;\r\n\t\t\tif (d3Projection.rotate) {\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\t\t\t\tlet deltaLong = rotation[0];\r\n\t\t\t\tlet deltaLat = rotation[1];\r\n\t\t\t\tlet deltaGamma = rotation[2];\r\n\r\n\t\t\t\tthis.deltaLongitude = deltaLong;\r\n\t\t\t\tthis.deltaLatitude = deltaLat;\r\n\t\t\t\tthis.deltaGamma = deltaGamma;\r\n\t\t\t}\r\n\r\n\t\t\tlet geoJSON = { \"type\": \"FeatureCollection\", features: features };\r\n\r\n\t\t\tlet initialScale = d3Projection.scale();\r\n\r\n\t\t\td3Projection.fitSize([w, h], <any>geoJSON);\r\n\r\n\t\t\tif (d3Projection.scale() != initialScale) {\r\n\t\t\t\tthis.invalidateDataUsers();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series instanceof GraticuleSeries) {\r\n\t\t\t\t\tseries.invalidateData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tlet polygon = this._backgroundSeries.mapPolygons.getIndex(0);\r\n\t\t\t\tif (polygon) {\r\n\t\t\t\t\tpolygon.multiPolygon = $mapUtils.getBackground(this.north, this.east, this.south, this.west);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._fitWidth = w;\r\n\t\t\tthis._fitHeight = h;\r\n\t\t}\r\n\r\n\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)calculates a ratio which should be used to scale the actual map so\r\n\t * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes\r\n\t * @ignore\r\n\t */\r\n\tprotected updateScaleRatio(): void {\r\n\t\tlet scaleRatio: number;\r\n\r\n\t\tthis.updateCenterGeoPoint();\r\n\r\n\t\tlet hScale: number = this.innerWidth / this.seriesWidth;\r\n\t\tlet vScale: number = this.innerHeight / this.seriesHeight;\r\n\r\n\t\tscaleRatio = $math.min(hScale, vScale);\r\n\r\n\t\tif ($type.isNaN(scaleRatio) || scaleRatio == Infinity) {\r\n\t\t\tscaleRatio = 1;\r\n\t\t}\r\n\r\n\t\tif (scaleRatio != this.scaleRatio) {\r\n\t\t\tthis.scaleRatio = scaleRatio;\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.scale = scaleRatio;\r\n\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t});\r\n\r\n\t\t\tthis.backgroundSeries.scale = scaleRatio;\r\n\r\n\t\t\tthis.dispatch(\"scaleratiochanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point within map container to geographical (lat/long)\r\n\t * coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic svgPointToGeo(point: IPoint): IGeoPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = $utils.svgPointToSprite(point, series);\r\n\t\t\treturn this.seriesPointToGeo(seriesPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within map's\r\n\t * container.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSVG(point: IGeoPoint): IPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = this.geoPointToSeries(point);\r\n\t\t\treturn $utils.spritePointToSvg(seriesPoint, series);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point (X/Y) within actual objects of the map to geographical\r\n\t * (lat/long) coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic seriesPointToGeo(point: IPoint): IGeoPoint {\r\n\t\treturn this.projection.invert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within\r\n\t * actual elements/objects of the maps.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSeries(point: IGeoPoint): IPoint {\r\n\t\treturn this.projection.convert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The Map supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tthis.invalidateData();\r\n\r\n\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\tfor (let i = dataUser.data.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (dataUser.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\t\tdataUser.data.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdataUser.disposeData();\r\n\t\t\t\tdataUser.invalidateData();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Reverses the order of polygons on a GeoJSON data.\r\n\t *\r\n\t * @since 4.10.11\r\n\t * @param  geodata  Source geodata\r\n\t */\r\n\tpublic processReverseGeodata(geodata: any): void {\r\n\t\tfor (let i = 0; i < geodata.features.length; i++) {\r\n\t\t\tlet feature = geodata.features[i];\r\n\t\t\tfor (let x = 0; x < feature.geometry.coordinates.length; x++) {\r\n\t\t\t\tif (feature.geometry.type == \"MultiPolygon\") {\r\n\t\t\t\t\tfor (let y = 0; y < feature.geometry.coordinates[x].length; y++) {\r\n\t\t\t\t\t\tfeature.geometry.coordinates[x][y].reverse()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeature.geometry.coordinates[x].reverse()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to particular zoom level and centers on a latitude/longitude\r\n\t * coordinate.\r\n\t *\r\n\t * @param point      Center coordinate\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToGeoPoint(point: IGeoPoint, zoomLevel: number, center?: boolean, duration?: number, mapObject?: boolean): Animation {\r\n\r\n\t\tif (!point) {\r\n\t\t\tlet hasData = false;\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.dataItems.length > 0) {\r\n\t\t\t\t\thasData = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (hasData) {\r\n\t\t\t\tpoint = this.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!point || !$type.isNumber(point.longitude) || !$type.isNumber(point.latitude)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._zoomGeoPointReal = point;\r\n\r\n\t\tzoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n\r\n\t\tlet seriesPoint: IPoint = this.projection.convert(point);\r\n\t\tif (seriesPoint) {\r\n\r\n\t\t\tlet svgPoint: IPoint = this.geoPointToSVG(point);\r\n\r\n\t\t\tlet mapPoint = $utils.svgPointToSprite(svgPoint, this);\r\n\r\n\t\t\tif (center) {\r\n\t\t\t\tmapPoint = {\r\n\t\t\t\t\tx: this.innerWidth / 2,\r\n\t\t\t\t\ty: this.innerHeight / 2\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.zoomDuration;\r\n\t\t\t}\r\n\r\n\t\t\tlet x = mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio;\r\n\t\t\tlet y = mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio;\r\n\r\n\r\n\t\t\tif (!mapObject && zoomLevel < this.zoomLevel && this.centerMapOnZoomOut && zoomLevel < 1.5) {\r\n\t\t\t\tx = this.innerWidth / 2 - (this.seriesMaxLeft + (this.seriesMaxRight - this.seriesMaxLeft) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t\ty = this.innerHeight / 2 - (this.seriesMaxTop + (this.seriesMaxBottom - this.seriesMaxTop) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t}\r\n\r\n\t\t\tthis._mapAnimation = this.seriesContainer.animate(\r\n\t\t\t\t[{\r\n\t\t\t\t\tproperty: \"scale\",\r\n\t\t\t\t\tto: zoomLevel\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"x\", from: this.seriesContainer.pixelX,\r\n\t\t\t\t\tto: x\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"y\", from: this.seriesContainer.pixelY,\r\n\t\t\t\t\tto: y\r\n\t\t\t\t}], duration, this.zoomEasing);\r\n\r\n\t\t\tthis._disposers.push(this._mapAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t\t\t}))\r\n\r\n\r\n\t\t\tthis.seriesContainer.validatePosition();\r\n\r\n\t\t\treturn this._mapAnimation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular map object.\r\n\t *\r\n\t * @param mapObject  Target map object\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToMapObject(mapObject: MapObject, zoomLevel?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif (center == undefined) {\r\n\t\t\tcenter = true;\r\n\t\t}\r\n\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tif (mapObject instanceof MapImage) {\r\n\t\t\tif ($type.isNaN(zoomLevel)) {\r\n\t\t\t\tzoomLevel = 5;\r\n\t\t\t}\r\n\t\t\treturn this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration, true);\r\n\t\t}\r\n\r\n\t\tlet dataItem = mapObject.dataItem;\r\n\r\n\t\tif (dataItem && $type.isNumber(dataItem.zoomLevel)) {\r\n\t\t\tzoomLevel = dataItem.zoomLevel;\r\n\t\t}\r\n\r\n\r\n\t\tif (mapObject instanceof MapPolygon) {\r\n\t\t\tlet dataItem = mapObject.dataItem;\r\n\t\t\tlet bbox = mapObject.polygon.bbox;\r\n\t\t\tif (bbox.width == 0 || bbox.height == 0) {\r\n\t\t\t\tbbox = mapObject.polygon.group.getBBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(zoomLevel)) {\r\n\t\t\t\tzoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet geoPoint: IGeoPoint;\r\n\r\n\t\t\tif (dataItem && $type.hasValue(dataItem.zoomGeoPoint)) {\r\n\t\t\t\tgeoPoint = dataItem.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is more accurate\r\n\t\t\t\tlet polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\r\n\t\t\t\tlet seriesPoint = $utils.spritePointToSprite(polygonPoint, mapObject.polygon, mapObject.series);\r\n\r\n\t\t\t\tgeoPoint = this.seriesPointToGeo(seriesPoint);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular viewport.\r\n\t *\r\n\t * The `north`, `east`, `south`, and `west` define boundaries of the\r\n\t * imaginary viewort we want to zoom the map to.\r\n\t *\r\n\t * `level` is not actual zoom level. The map will determine the zoom level\r\n\t * required to accommodated such zoom, and will adjust it by `level` if set.\r\n\t *\r\n\t * @param north     Latitude of the North-most boundary\r\n\t * @param east      Longitude of the East-most boundary\r\n\t * @param south     Latitude of the South-most boundary\r\n\t * @param west      Longitude of the West-most boundary\r\n\t * @param level     Adjust zoom level\r\n\t * @param center    Center on the given coordinate?\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToRectangle(north: number, east: number, south: number, west: number, level?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif ($type.isNaN(level)) {\r\n\t\t\tlevel = 1;\r\n\t\t}\r\n\r\n\t\tlet w = $math.min(west, east);\r\n\t\tlet e = $math.max(west, east);\r\n\r\n\t\twest = w;\r\n\t\teast = e;\r\n\r\n\t\tlet splitLongitude = $math.normalizeAngle(180 - this.deltaLongitude);\r\n\t\tif (splitLongitude > 180) {\r\n\t\t\tsplitLongitude -= 360;\r\n\t\t}\r\n\r\n\t\tlet newLong = west + (east - west) / 2;\r\n\t\tlet d = (west - east);\r\n\r\n\t\tif (west < splitLongitude && east > splitLongitude) {\r\n\t\t\tnewLong += 180;\r\n\t\t\td = $math.normalizeAngle(east - west - 360);\r\n\t\t}\r\n\r\n\t\tlet zoomLevel = level * Math.min((this.south - this.north) / (south - north), Math.abs((this.west - this.east) / d));\r\n\r\n\t\treturn this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: newLong }, zoomLevel, center, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms in the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomIn(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel * step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomOut(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel / step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Pans the maps using relative coordinates. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   x: 0.1,\r\n\t *   y: -0.1\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will move the map by 10% to the right, and by 10% upwards.\r\n\t *\r\n\t * @param shift     Vertical and horizontal shift\r\n\t * @param duration  Pan animation duration (ms)\r\n\t */\r\n\tpublic pan(shift: IPoint, duration?: number): void {\r\n\t\tlet point = this.geoPointToSVG(this.zoomGeoPoint);\r\n\t\tpoint.x += this.pixelWidth * shift.x;\r\n\t\tpoint.y += this.pixelHeight * shift.y;\r\n\t\tthis.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Current lat/long coordinates for the center of the viewport. (default\r\n\t * zoom reference point)\r\n\t *\r\n\t * @readonly\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\tconst point = $utils.spritePointToSvg({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);\r\n\t\treturn this.svgPointToGeo(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Current zoom level.\r\n\t *\r\n\t * @readonly\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.seriesContainer.scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.seriesContainer.scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches events after some map transformation, like pan or zoom.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMapTransform(): void {\r\n\t\tif (this.zoomLevel != this._prevZoomLevel) {\r\n\t\t\tthis.dispatch(\"zoomlevelchanged\");\r\n\t\t\tthis._prevZoomLevel = this.zoomLevel;\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"Zoom level changed to %1\", this.language.locale, $type.castString(this.zoomLevel)));\r\n\t\t}\r\n\r\n\t\tif (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {\r\n\t\t\tthis.dispatch(\"mappositionchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[SmallMap]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a small map\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"smallMap\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param smallMap  Small map\r\n\t */\r\n\tpublic set smallMap(smallMap: SmallMap) {\r\n\t\tif (this._smallMap) {\r\n\t\t\tthis.removeDispose(this._smallMap);\r\n\t\t}\r\n\t\tthis._smallMap = smallMap;\r\n\t\tthis._smallMap.chart = this;\r\n\t\tsmallMap.parent = this.chartContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Small map\r\n\t */\r\n\tpublic get smallMap(): SmallMap {\r\n\t\tif (!this._smallMap) {\r\n\t\t\tlet smallMap: SmallMap = new SmallMap();\r\n\t\t\tthis.smallMap = smallMap;\r\n\t\t}\r\n\t\treturn this._smallMap;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[ZoomControl]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a zoom control\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"zoomControl\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param zoomControl  Zoom control\r\n\t */\r\n\tpublic set zoomControl(zoomControl: ZoomControl) {\r\n\t\tif (this._zoomControl) {\r\n\t\t\tthis.removeDispose(this._zoomControl);\r\n\t\t}\r\n\t\tthis._zoomControl = zoomControl;\r\n\t\tzoomControl.chart = this;\r\n\t\tzoomControl.parent = this.chartContainer;\r\n\t\tzoomControl.plusButton.exportable = false;\r\n\t\tzoomControl.minusButton.exportable = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom control\r\n\t */\r\n\tpublic get zoomControl(): ZoomControl {\r\n\t\treturn this._zoomControl;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a map series of appropriate type.\r\n\t *\r\n\t * @return Map series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new MapSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLongitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLongitude\", $geo.wrapAngleTo180(value))) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLongitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLongitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to 90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLatitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLatitude\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLatitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLatitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around \"Z\" axis. This is the axis that pierces\r\n\t * the globe directly from the viewer's point of view.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaGamma(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaGamma\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaGamma(): number {\r\n\t\treturn this.getPropertyValue(\"deltaGamma\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected rotateMap() {\r\n\t\tif (this.projection.d3Projection) {\r\n\t\t\tif (this.projection.d3Projection.rotate) {\r\n\t\t\t\tthis.projection.d3Projection.rotate([this.deltaLongitude, this.deltaLatitude, this.deltaGamma]);\r\n\t\t\t\tthis.invalidateProjection();\r\n\t\t\t\t//this.updateExtremes(); // removal fixes #3292\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value  Max pan out\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max pan out\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * The geographical point to center map on when it is first loaded.\r\n\t *\r\n\t * The map will also be centered to this point when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home geo point\r\n\t */\r\n\tpublic set homeGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setPropertyValue(\"homeGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home geo point\r\n\t */\r\n\tpublic get homeGeoPoint(): IGeoPoint {\r\n\t\treturn this.getPropertyValue(\"homeGeoPoint\");\r\n\t}\r\n\r\n\t/**\r\n\t * The zoom level to put the map in when it is first loaded.\r\n\t *\r\n\t * The map will also be set to this zoom level when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home zoom level\r\n\t */\r\n\tpublic set homeZoomLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"homeZoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home zoom level\r\n\t */\r\n\tpublic get homeZoomLevel(): number {\r\n\t\treturn this.getPropertyValue(\"homeZoomLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Zoom factor\r\n\t */\r\n\tpublic set zoomStep(value: number) {\r\n\t\tthis.setPropertyValue(\"zoomStep\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom factor\r\n\t */\r\n\tpublic get zoomStep(): number {\r\n\t\treturn this.getPropertyValue(\"zoomStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates projection, causing all series to be redrawn.\r\n\t *\r\n\t * Call this after changing projection or its settings.\r\n\t */\r\n\tpublic invalidateProjection() {\r\n\t\tthis.east = undefined;\r\n\t\tthis.invalidateDataUsers();\r\n\t\tthis.updateCenterGeoPoint();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\");\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tlet dataSource = this.getDataSource(\"geodata\");\r\n\t\t\tdataSource.events.on(\"parseended\", () => {\r\n\t\t\t\tthis.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthis.raiseCriticalError(Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\"), true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Instantiate projection\r\n\t\tif ($type.hasValue(config[\"projection\"]) && $type.isString(config[\"projection\"])) {\r\n\t\t\tconfig[\"projection\"] = this.createClassInstance(config[\"projection\"]);\r\n\t\t}\r\n\r\n\t\t// Set up small map\r\n\t\tif ($type.hasValue(config.smallMap) && !$type.hasValue(config.smallMap.type)) {\r\n\t\t\tconfig.smallMap.type = \"SmallMap\";\r\n\t\t}\r\n\r\n\t\t// Set up zoom control\r\n\t\tif ($type.hasValue(config.zoomControl) && !$type.hasValue(config.zoomControl.type)) {\r\n\t\t\tconfig.zoomControl.type = \"ZoomControl\";\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tlet series = event.newValue;\r\n\t\tseries.scale = this.scaleRatio;\r\n\t\tseries.events.on(\"validated\", this.updateCenterGeoPoint, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t   * This function is used to sort element's JSON config properties, so that\r\n\t   * some properties that absolutely need to be processed last, can be put at\r\n\t   * the end.\r\n\t   *\r\n\t   * @ignore Exclude from docs\r\n\t   * @param a  Element 1\r\n\t   * @param b  Element 2\r\n\t   * @return Sorting number\r\n\t   */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"smallMap\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"smallMap\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"projection\" || field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Geo point of map center\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic get centerGeoPoint(): IGeoPoint {\r\n\t\treturn this._centerGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the map to its original position and zoom level.\r\n\t *\r\n\t * Use the only parameter to set number of milliseconds for the zoom\r\n\t * animation to play.\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t */\r\n\tpublic goHome(duration?: number) {\r\n\t\tlet homeGeoPoint = this.homeGeoPoint;\r\n\t\tif (!homeGeoPoint) {\r\n\t\t\thomeGeoPoint = this.centerGeoPoint;\r\n\t\t}\r\n\t\tif (homeGeoPoint) {\r\n\t\t\tthis.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t *\r\n\t * @ignore\r\n\t * @param   paper  Paper\r\n\t * @return         true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tif (this.svgContainer) {\r\n\t\t\tthis.svgContainer.hideOverflow = true;\r\n\t\t}\r\n\r\n\t\treturn super.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Background series will create polygons that will fill all the map area\r\n\t * with some color (or other fill).\r\n\t *\r\n\t * This might be useful with non-rectangular projections, like Orthographic,\r\n\t * Albers, etc.\r\n\t *\r\n\t * To change background color/opacity access polygon template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"backgroundSeries\": {\r\n\t *     \"mapPolygons\": {\r\n\t *       \"polygon\": {\r\n\t *         \"fill\": \"#fff\",\r\n\t *         \"fillOpacity\": 0.1\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic get backgroundSeries(): MapPolygonSeries {\r\n\t\tif (!this._backgroundSeries) {\r\n\t\t\tlet backgroundSeries = new MapPolygonSeries();\r\n\t\t\tbackgroundSeries.parent = this.seriesContainer;\r\n\t\t\tbackgroundSeries.chart = this;\r\n\r\n\t\t\tbackgroundSeries.hiddenInLegend = true;\r\n\t\t\tbackgroundSeries.mapPolygons.template.focusable = false;\r\n\t\t\tbackgroundSeries.addDisposer(new Disposer(() => {\r\n\t\t\t\tthis._backgroundSeries = undefined;\r\n\t\t\t}))\r\n\t\t\tthis._disposers.push(backgroundSeries);\r\n\r\n\t\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\t\tlet color = interfaceColors.getFor(\"background\");\r\n\r\n\t\t\tlet polygonTemplate = backgroundSeries.mapPolygons.template.polygon;\r\n\t\t\tpolygonTemplate.stroke = color;\r\n\t\t\tpolygonTemplate.fill = color;\r\n\t\t\tpolygonTemplate.fillOpacity = 0;\r\n\t\t\tpolygonTemplate.strokeOpacity = 0;\r\n\t\t\t//polygonTemplate.focusable = false;\r\n\r\n\t\t\tbackgroundSeries.mapPolygons.create();\r\n\r\n\t\t\tthis._backgroundSeries = backgroundSeries;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundSeries;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\t// setup other containers\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = false;\r\n\t\tthis.panSprite.interactions.isTouchProtected = false;\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"zoomEasing\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Has license?\r\n\t */\r\n\tpublic hasLicense(): boolean {\r\n\t\tif (options.commercialLicense) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!super.hasLicense()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0; i < options.licenses.length; i++) {\r\n\t\t\tif (options.licenses[i].match(/^MP.{5,}/i)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapChart\"] = MapChart;\r\n","/**\r\n * Map spline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { MapSplineSeriesDataItem, MapSplineSeries } from \"./MapSplineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapSpline]].\r\n */\r\nexport interface IMapSplineProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSpline]].\r\n */\r\nexport interface IMapSplineEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSpline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineAdapters extends IMapLineAdapters, IMapSplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a spline on the map.\r\n *\r\n * @see {@link IMapSplineEvents} for a list of available events\r\n * @see {@link IMapSplineAdapters} for a list of available Adapters\r\n */\r\nexport class MapSpline extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineEvents;\r\n\r\n\t/**\r\n\t * A visual element for the spline.\r\n\t */\r\n\tpublic line: Polyspline;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSpline\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyspline();\r\n\t\tthis.line.tensionX = 0.8;\r\n\t\tthis.line.tensionY = 0.8;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ShortestDistance = true is not supported by MapSpline, only MapLine does support it\r\n\t * @default false\r\n\t * @param value\r\n\t * @todo: review description\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSpline\"] = MapSpline;\r\n","/**\r\n * Map arched line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyarc } from \"../../core/elements/Polyarc\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { MapArcSeries } from \"./MapArcSeries\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapArc]].\r\n */\r\nexport interface IMapArcProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArc]].\r\n */\r\nexport interface IMapArcEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcAdapters extends IMapLineAdapters, IMapArcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw an arched line on the map.\r\n *\r\n * @see {@link IMapArcEvents} for a list of available events\r\n * @see {@link IMapArcAdapters} for a list of available Adapters\r\n */\r\nexport class MapArc extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyarc;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArc\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyarc();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * `shortestDistance = true` is not supported by `MapArc`.\r\n\t *\r\n\t * Only [[MapLine]] supports it.\r\n\t *\r\n\t * @default false\r\n\t * @param value\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArc\"] = MapArc;\r\n","/**\r\n * Map spline series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapSpline } from \"./MapSpline\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSplineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSplineSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapSpline]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSplineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineSeriesAdapters extends IMapLineSeriesAdapters, IMapSplineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map spline elements.\r\n *\r\n * @see {@link IMapSplineSeriesEvents} for a list of available Events\r\n * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSplineSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSplineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSplineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapSpline();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSplineSeries\"] = MapSplineSeries;\r\nregistry.registeredClasses[\"MapSplineSeriesDataItem\"] = MapSplineSeriesDataItem;\r\n","/**\r\n * Map arc series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapArc } from \"./MapArc\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapArcSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapArcSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapArc]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArcSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcSeriesAdapters extends IMapLineSeriesAdapters, IMapArcSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of arc elements. (curved lines)\r\n *\r\n * @see {@link IMapArcSeriesEvents} for a list of available Events\r\n * @see {@link IMapArcSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapArcSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapArcSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapArcSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapArcSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapArc();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArcSeries\"] = MapArcSeries;\r\nregistry.registeredClasses[\"MapArcSeriesDataItem\"] = MapArcSeriesDataItem;\r\n","/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomControl]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomControlAdapters extends IContainerAdapters, IZoomControlProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomControlProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomControlAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomControlEvents;\r\n\r\n\t/**\r\n\t * Zoom in button element.\r\n\t */\r\n\tpublic plusButton: Button;\r\n\r\n\t/**\r\n\t * Zoom out button element.\r\n\t */\r\n\tpublic minusButton: Button;\r\n\r\n\t/**\r\n\t * A zoom slider background element.\r\n\t */\r\n\tpublic slider: Container;\r\n\r\n\t/**\r\n\t * A zoom slider thumb element.\r\n\t */\r\n\tpublic thumb: Button;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A type to use for the background element for zoom control.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ZoomControl\";\r\n\r\n\t\tthis.align = \"right\";\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tthis.layout = \"vertical\";\r\n\t\tthis.padding(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet plusButton: Button = this.createChild(Button);\r\n\t\tplusButton.shouldClone = false;\r\n\t\tplusButton.label.text = \"+\";\r\n\t\t//plusButton.fontFamily = \"Verdana\";\r\n\t\tthis.plusButton = plusButton;\r\n\r\n\t\tlet slider: Container = this.createChild(Container);\r\n\t\tslider.shouldClone = false;\r\n\t\tslider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tslider.background.fillOpacity = 0.05;\r\n\t\tslider.background.events.on(\"hit\", this.handleBackgroundClick, this, false);\r\n\t\tslider.events.on(\"sizechanged\", this.updateThumbSize, this, false);\r\n\t\tthis.slider = slider;\r\n\r\n\t\tlet thumb: Button = slider.createChild(Button);\r\n\t\tthumb.shouldClone = false;\r\n\t\tthumb.padding(0, 0, 0, 0);\r\n\t\tthumb.draggable = true;\r\n\t\tthumb.events.on(\"drag\", this.handleThumbDrag, this, false);\r\n\t\tthis.thumb = thumb;\r\n\r\n\t\tlet minusButton: Button = this.createChild(Button);\r\n\t\tminusButton.shouldClone = false;\r\n\t\tminusButton.label.text = \"-\";\r\n\t\t//minusButton.fontFamily = \"Verdana\";\r\n\t\tthis.minusButton = minusButton;\r\n\r\n\t\t// Set roles\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\r\n\t\t// Set reader text\r\n\t\tthis.thumb.readerTitle = this.language.translate(\"Use arrow keys to zoom in and out\");\r\n\t\tthis.minusButton.readerTitle = this.language.translate(\"Press ENTER to zoom in\");\r\n\t\tthis.plusButton.readerTitle = this.language.translate(\"Press ENTER to zoom out\");\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property == \"layout\") {\r\n\t\t\t\tthis.fixLayout();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected fixLayout() {\r\n\r\n\t\tlet plusButton = this.plusButton;\r\n\t\tlet minusButton = this.minusButton;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tlet slider = this.slider;\r\n\r\n\t\tplusButton.x = undefined;\r\n\t\tplusButton.y = undefined;\r\n\r\n\t\tminusButton.x = undefined;\r\n\t\tminusButton.y = undefined;\r\n\r\n\t\tthumb.x = undefined;\r\n\t\tthumb.y = undefined;\r\n\r\n\t\tslider.x = undefined;\r\n\t\tslider.y = undefined;\r\n\r\n\t\tplusButton.padding(6, 10, 6, 10);\r\n\t\tminusButton.padding(6, 10, 6, 10);\r\n\r\n\t\tminusButton.label.align = \"center\";\r\n\t\tminusButton.label.valign = \"middle\";\r\n\r\n\t\tplusButton.label.align = \"center\";\r\n\t\tplusButton.label.valign = \"middle\";\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tthis.width = 40;\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tminusButton.width = percent(100);\r\n\t\t\tminusButton.height = undefined;\r\n\r\n\t\t\tthumb.width = percent(100);\r\n\t\t\tthumb.height = undefined;\r\n\r\n\t\t\tplusButton.width = percent(100);\r\n\t\t\tplusButton.height = undefined;\r\n\r\n\t\t\tslider.width = percent(100);\r\n\t\t\tminusButton.marginTop = 1;\r\n\t\t\tplusButton.marginBottom = 2;\r\n\r\n\t\t\tslider.height = 0;\r\n\r\n\t\t\tminusButton.toFront();\r\n\t\t\tplusButton.toBack();\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.maxX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\r\n\r\n\t\t}\r\n\t\telse if (this.layout == \"horizontal\") {\r\n\t\t\tthis.height = 40;\r\n\t\t\tthis.width = undefined;\r\n\r\n\t\t\tminusButton.height = percent(100);\r\n\t\t\tminusButton.width = undefined;\r\n\r\n\t\t\tplusButton.height = percent(100);\r\n\t\t\tplusButton.width = undefined;\r\n\r\n\t\t\tthumb.height = percent(100);\r\n\t\t\tthumb.width = undefined;\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\t\t\tthumb.maxY = 0;\r\n\r\n\t\t\tslider.height = percent(100);\r\n\t\t\tslider.width = 0;\r\n\r\n\t\t\tminusButton.toBack();\r\n\t\t\tplusButton.toFront();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles zoom operation after clicking on the slider background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBackgroundClick(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\tlet sprite: Sprite = event.target;\r\n\t\tlet y: number = event.spritePoint.y;\r\n\t\tlet chart: MapChart = this.chart;\r\n\r\n\t\tlet maxPower: number = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n\t\tlet minPower: number = Math.log(chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tlet power: number = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n\t\tlet zoomLevel: number = Math.pow(2, power);\r\n\t\tchart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n\t}\r\n\r\n\t/**\r\n\t * A main chart/map that this zoom control is for.\r\n\t *\r\n\t * @param chart  Map/chart\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\tchart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false),\r\n\t\t\tchart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false),\r\n\r\n\t\t\tthis.minusButton.events.on(\"hit\", () => { chart.zoomOut(chart.zoomGeoPoint) }, chart, false),\r\n\r\n\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\t\t// ENTER is now handled globally\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"plus\")) {\r\n\t\t\t\t\t\tchart.zoomIn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (keyboard.isKey(ev.event, \"minus\")) {\r\n\t\t\t\t\t\tchart.zoomOut();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, chart),\r\n\t\t\tthis.plusButton.events.on(\"hit\", () => { chart.zoomIn(chart.zoomGeoPoint) }, chart, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Map/chart\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slider's thumb size based on the available zoom space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumbSize(): void {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet slider: Container = this.slider;\r\n\t\t\tlet thumb: Button = this.thumb;\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n\r\n\t\t\t\tthumb.height = slider.pixelHeight / this.stepCount;\r\n\t\t\t\tthumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n\r\n\t\t\t\tif (thumb.pixelHeight <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n\t\t\t\tthumb.width = slider.pixelWidth / this.stepCount;\r\n\t\t\t\tthumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n\r\n\t\t\t\tif (thumb.pixelWidth <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates thumb according to current zoom position from map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumb(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\r\n\t\tif (!thumb.isDown) {\r\n\t\t\tlet step: number = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\r\n\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.x = slider.pixelWidth * step / this.stepCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the actual map when slider position changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbDrag(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\t\tlet step: number;\r\n\r\n\t\tlet minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tstep = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstep = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n\t\t}\r\n\t\tstep = minStep + step;\r\n\r\n\t\tlet zoomLevel: number = Math.pow(2, step);\r\n\t\tchart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the step countfor the slider grid according to map's min and max\r\n\t * zoom level settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Step count\r\n\t */\r\n\tpublic get stepCount(): number {\r\n\t\treturn Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for slider control.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Mercator projection.\r\n */\r\nexport class Mercator extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoMercator();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Mercator\"] = Mercator;\r\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math.js\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n","/**\n * Functionality for Miller projection\n *\n * The function(s) below are from D3.js library (https://d3js.org/)\n *\n * ```\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from this\n *    software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ```\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Projection } from \"./Projection\";\nimport { registry } from \"../../../core/Registry\";\n// @ts-ignore\nimport * as d3geoprojection from \"d3-geo-projection\";\n\n\n/**\n * Miller projection.\n */\nexport class Miller extends Projection {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.d3Projection = d3geoprojection.geoMiller();\n\t}\n}\n\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\nregistry.registeredClasses[\"Miller\"] = Miller;\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n","/**\r\n * Functionality for Eckert6 projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\n// @ts-ignore\r\nimport * as d3geoprojection from \"d3-geo-projection\";\r\n\r\n/**\r\n * Eckert6 projection.\r\n */\r\nexport class Eckert6 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geoprojection.geoEckert6();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Eckert6\"] = Eckert6;\r\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Orthographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoOrthographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Orthographic\"] = Orthographic;\r\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Stereographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoStereographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Stereographic\"] = Stereographic;\r\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Albers extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbers();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Albers\"] = Albers;\r\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AlbersUsa extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbersUsa();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AlbersUsa\"] = AlbersUsa;\r\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class NaturalEarth1 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoNaturalEarth1();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NaturalEarth1\"] = NaturalEarth1;\r\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AzimuthalEqualArea extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAzimuthalEqualArea();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AzimuthalEqualArea\"] = AzimuthalEqualArea;\r\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class EqualEarth extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoEqualEarth();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"EqualEarth\"] = EqualEarth;\r\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n"],"sourceRoot":""}