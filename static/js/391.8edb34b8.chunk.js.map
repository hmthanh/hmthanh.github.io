{"version":3,"file":"static/js/391.8edb34b8.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/Legend.ts","../node_modules/src/.internal/charts/axes/AxisBreak.ts","../node_modules/src/.internal/charts/axes/Axis.ts","../node_modules/src/.internal/charts/axes/AxisLine.ts","../node_modules/src/.internal/charts/axes/AxisFill.ts","../node_modules/src/.internal/charts/axes/Grid.ts","../node_modules/src/.internal/charts/axes/AxisLabel.ts","../node_modules/src/.internal/charts/elements/Tick.ts","../node_modules/src/.internal/charts/axes/AxisTick.ts","../node_modules/src/.internal/charts/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/axes/AxisBullet.ts","../node_modules/src/.internal/charts/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/axes/ValueAxisBreak.ts","../node_modules/src/.internal/charts/axes/ValueAxis.ts","../node_modules/src/.internal/charts/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/elements/HeatLegend.ts","../node_modules/src/.internal/core/elements/Grip.ts","../node_modules/src/.internal/charts/Chart.ts","../node_modules/src/.internal/charts/elements/Bullet.ts","../node_modules/src/.internal/charts/series/Series.ts","../node_modules/src/.internal/charts/types/SerialChart.ts","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/src/.internal/charts/map/MapObject.ts","../node_modules/src/.internal/charts/map/MapImage.ts","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/projections/Projection.ts","../node_modules/src/.internal/charts/map/SmallMap.ts","../node_modules/src/.internal/charts/map/Geo.ts","../node_modules/src/.internal/charts/map/MapLineObject.ts","../node_modules/src/.internal/charts/map/MapImageSeries.ts","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/src/.internal/charts/map/Graticule.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/src/.internal/charts/types/MapChart.ts","../node_modules/src/.internal/charts/map/MapSpline.ts","../node_modules/src/.internal/charts/map/MapArc.ts","../node_modules/src/.internal/charts/map/MapSplineSeries.ts","../node_modules/src/.internal/charts/map/MapArcSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/src/.internal/charts/map/projections/Mercator.ts","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/src/.internal/charts/map/projections/Miller.ts","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/src/.internal/charts/map/projections/Eckert6.ts","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/src/.internal/charts/map/projections/Orthographic.ts","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/src/.internal/charts/map/projections/Stereographic.ts","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/src/.internal/charts/map/projections/Albers.ts","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/src/.internal/charts/map/projections/AlbersUSA.ts","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/src/.internal/charts/map/projections/NaturalEarth1.ts","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/src/.internal/charts/map/projections/AzimuthalEqualArea.ts","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/src/.internal/charts/map/projections/EqualEarth.ts","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js"],"sourcesContent":["/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../core/utils/Color\";\r\nimport { RadialGradient } from \"../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../core/rendering/fills/Pattern\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../core/Sprite\";\r\nimport { Disposer, IDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic colorOrig: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element.\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Main color of legend data item.\r\n\t *\r\n\t * This is set by the target element this legend item represents, like\r\n\t * a Series or a Slice.\r\n\t *\r\n\t * It can be used to derive a color in legend's sub-items, like label:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"legend\": {\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"text\": \"[{color}]{name}[/]\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n\t * @param value  Main color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Main color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element for \"value label\".\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to the main [[Container]] that holds legend item's elements:\r\n\t * marker and labels.\r\n\t *\r\n\t * @return Item container\r\n\t */\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet itemContainer = component.itemContainers.create();\r\n\t\t\titemContainer.parent = component;\r\n\t\t\t\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\t// Add click/tap event to toggle item\r\n\t\t\tif (itemContainer.togglable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\tcomponent.toggleDataItem(<this>ev.target.dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t\t// for keyboard toggling\r\n\t\t\tif (itemContainer.focusable) {\r\n\t\t\t\titemContainer.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t// We need this here in order to reset focused item when it is clicked\r\n\t\t\t\t\t// normally so that it is not toggled by ENTER afterwards\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = <this>ev.target.dataItem;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n\t\t\t\tconst visibilitychanged = function(ev: AMEvent<Sprite | DataItem, ISpriteEvents & IDataItemEvents>[\"visibilitychanged\"]) {\r\n\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] that holds legend item's marker element.\r\n\t *\r\n\t * @return Marker\r\n\t */\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t */\r\n\tposition?: LegendPosition;\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\r\n\tpublic scrollbar: Scrollbar;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"scrollable\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(8, 0, 8, 0);\r\n\t\titemContainer.margin(0, 10, 0, 10);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"switch\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tconst focusedItem = this.focusedItem;\r\n\t\t\t\tconst target = focusedItem.itemContainer;\r\n\t\t\t\tif (target.togglable) {\r\n\t\t\t\t\tthis.toggleDataItem(focusedItem);\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\ttarget.dispatchImmediately(\"hit\", { event: ev });\r\n\r\n\t\t\t\t\t// We need this here because \"hit\" event resets `this.focusedItem`\r\n\t\t\t\t\t// And we need it here\r\n\t\t\t\t\tthis.focusedItem = focusedItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.fullWords = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.on(\"layoutvalidated\", this.handleScrollbar, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.scrollbar.start = 0;\r\n\t\t\tthis.scrollbar.end = 1;\r\n\t\t}\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\r\n\t\t$utils.used(dataItem.label);\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet tempMaxWidth = dataItem.label.maxWidth;\r\n\t\tif(!(dataItem.label.width instanceof Percent)){\r\n\t\t\tdataItem.label.width = undefined;\t\r\n\t\t}\r\n\t\t\r\n\t\tif (tempMaxWidth > 0) {\r\n\t\t\tdataItem.label.maxWidth = tempMaxWidth;\r\n\t\t}\r\n\t\tif (valueLabel.align == \"right\") {\r\n\t\t\tvalueLabel.width = undefined;\r\n\t\t}\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\tif (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.markers.template.propertyFields.fill = undefined;\r\n\t\t}\r\n\r\n\t\tif (dataContext.updateLegendValue) {\r\n\t\t\tdataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n\t\t}\r\n\r\n\t\tif (dataContext.component && dataContext.component.updateLegendValue) {\r\n\t\t\tdataContext.component.updateLegendValue(dataContext);\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\r\n\t\tcontainer.isActive = !visible;\r\n\t\tif (container.isActive) {\r\n\t\t\tcontainer.setState(\"active\", 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontainer.setState(\"default\", 0);\r\n\t\t}\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\r\n\tpublic afterDraw() {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\t\tlet maxLabelWidth = 0;\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.maxWidth = undefined;\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n\t\t\t\tmaxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet maxValueLabelWidth = 0;\r\n\t\tthis.valueLabels.each((label) => {\r\n\t\t\tif (label.invalid) {\t\t\t\t\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n\t\t\t\tmaxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet maxMarkerWidth = 0;\r\n\t\tthis.markers.each((marker) => {\r\n\t\t\tif (marker.invalid) {\r\n\t\t\t\tmarker.validate();\r\n\t\t\t}\r\n\t\t\tif (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n\t\t\t\tmaxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet itemContainer = this.itemContainers.template;\r\n\t\tlet margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n\t\tlet maxAdjustedLabelWidth: number;\r\n\t\tlet trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tmaxAdjustedLabelWidth = maxLabelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxWidth = maxWidth - margin;\r\n\t\t\tif (maxWidth > trueMaxWidth) {\r\n\t\t\t\tmaxWidth = trueMaxWidth;\r\n\t\t\t}\r\n\t\t\tmaxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n\t\t}\r\n\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n\t\t\t\tif(!(label.width instanceof Percent)){\r\n\t\t\t\t\tlabel.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n\t\t\t\t\tlabel.maxWidth = label.width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (this.valueLabels.template.align == \"right\") {\r\n\t\t\tthis.valueLabels.each((valueLabel) => {\r\n\t\t\t\tvalueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsuper.afterDraw();\r\n\t}\r\n\r\n\r\n\tprotected handleScrollbar() {\r\n\t\tlet scrollbar = this.scrollbar;\r\n\t\tif (this.scrollable && scrollbar) {\r\n\t\t\tscrollbar.height = this.measuredHeight;\r\n\t\t\tscrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n\r\n\t\t\tif (this.contentHeight > this.measuredHeight) {\r\n\t\t\t\tscrollbar.visible = true;\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + + scrollbar.pixelMarginRight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tscrollbar.handleThumbPosition();\r\n\r\n\t\t\tthis.updateMasks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 5, 10, 10);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.contentAlign = \"none\";\r\n\t\t\t\tthis.valueLabels.template.align = \"right\";\r\n\r\n\t\t\t\tif (!$type.isNumber(this.maxColumns)) {\r\n\t\t\t\t\tthis.maxColumns = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.width = undefined;\r\n\t\t\t\tthis.maxWidth = 220;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.maxColumns = undefined;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.align = \"left\";\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `false` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * If set to `true`, all markers will be shown as squares, regardless of te\r\n\t * series type.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * Please note that `maxHeight` is automatically set for Legend when its\r\n\t * `position` is set to `\"left\"` or `\"right\"`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t * @param  value  Legend Scrollable?\r\n\t */\r\n\tpublic set scrollable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"scrollable\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tlet scrollbar = this.createChild(Scrollbar);\r\n\t\t\t\tthis.scrollbar = scrollbar;\r\n\t\t\t\tscrollbar.isMeasured = false;\r\n\t\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\t\tscrollbar.endGrip.__disabled = true;\r\n\t\t\t\tscrollbar.startGrip.__disabled = true;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.marginLeft = 5;\r\n\r\n\t\t\t\tthis._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\r\n\t\t\t\tthis._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t\tif (this.scrollbar) {\r\n\t\t\t\t\t\tthis.scrollbar.dispose();\r\n\t\t\t\t\t\tthis.scrollbar = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling of legend.\r\n\t *\r\n\t * @param  event  Event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]): void {\r\n\t\tlet shift = event.shift.y;\r\n\t\tlet scrollbar = this.scrollbar\r\n\t\tif (scrollbar) {\r\n\t\t\tlet ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n\t\t\tlet delta = scrollbar.end - scrollbar.start;\r\n\t\t\tif (shift > 0) {\r\n\t\t\t\tscrollbar.start = $math.max(0, scrollbar.start - ds);\r\n\t\t\t\tscrollbar.end = scrollbar.start + delta;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.end = $math.min(1, scrollbar.end - ds);\r\n\t\t\t\tscrollbar.start = scrollbar.end - delta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMasks(): void {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.itemContainers.each((itemContainer) => {\r\n\t\t\t\titemContainer.dy = -this.scrollbar.thumb.pixelY * this.contentHeight / this.measuredHeight;\r\n\t\t\t\titemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: this.measuredWidth, height: this.measuredHeight }\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend Scrollable?\r\n\t */\r\n\tpublic get scrollable(): boolean {\r\n\t\treturn this.getPropertyValue(\"scrollable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.color = item.colorOrig;\r\n\r\n\t\t\tdataContext.appeared = true;\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\t\t\tdataContext.appeared = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n\t\t\titem.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tdataItem.valueLabel.invalidate();\r\n\t\tdataItem.label.invalidate();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"bottom\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"right\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Axis break module\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { IWavedShape } from \"../../core/defs/IWavedShape\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t */\r\n\tbreakSize?: number;\r\n\r\n\t/**\r\n\t * Starting value.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * End value.\r\n\t */\r\n\tendValue?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines [[AxisBreak]] adapters.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBreakAdapters extends IContainerAdapters, IAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBreak extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: Axis;\r\n\r\n\t/**\r\n\t * Reference to parent Axis.\r\n\t */\r\n\tprotected _axis = new MutableValueDisposer<this[\"_axisType\"]>();\r\n\r\n\t/**\r\n\t * A reference to starting line element.\r\n\t */\r\n\tprotected _startLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to ending line element.\r\n\t */\r\n\tprotected _endLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to fill shape.\r\n\t */\r\n\tprotected _fillShape: IWavedShape;\r\n\r\n\t/**\r\n\t * A list of axis data items which fall within this break.\r\n\t */\r\n\tpublic dataItems: List<AxisDataItem> = new List<AxisDataItem>();\r\n\r\n\t/**\r\n\t * Adjusted start value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedStartValue: number;\r\n\r\n\t/**\r\n\t * Adjusted end value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedEndValue: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisBreak\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.breakSize = 0.01;\r\n\t\tthis.marginLeft = -5;\r\n\t\tthis.marginRight = -5;\r\n\t\tthis.marginTop = -5;\r\n\t\tthis.marginBottom = -5;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create elements\r\n\t\t// (these won't be used actually, just for setting properties)\r\n\t\tlet fillShape = new WavedLine();\r\n\t\tfillShape.fill = interfaceColors.getFor(\"background\");\r\n\t\tfillShape.stroke = color();\r\n\t\tfillShape.fillOpacity = 0.9;\r\n\t\tfillShape.zIndex = 0;\r\n\t\tthis._fillShape = fillShape;\r\n\r\n\t\tlet startLine = new WavedLine();\r\n\t\tstartLine.fill = color();\r\n\t\tstartLine.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tstartLine.strokeOpacity = 0.3;\r\n\t\tstartLine.zIndex = 1;\r\n\t\tthis._startLine = startLine;\r\n\r\n\t\tlet endLine = new WavedLine();\r\n\t\tendLine.fill = color();\r\n\t\tendLine.stroke = color(\"#000000\");// interfaceColors.getFor(\"grid\");\r\n\t\tendLine.strokeOpacity = 0.3;\r\n\t\tendLine.zIndex = 2;\r\n\t\tthis._endLine = endLine;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the starting line of the break.\r\n\t *\r\n\t * @param sprite  Element\r\n\t */\r\n\tpublic set startLine(sprite: IWavedShape) {\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\t\tthis._startLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get startLine(): IWavedShape {\r\n\t\treturn this._startLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the end line of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set endLine(sprite: IWavedShape) {\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t\tthis._endLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get endLine(): IWavedShape {\r\n\t\treturn this._endLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for fill of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set fillShape(sprite: IWavedShape) {\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tthis._fillShape = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get fillShape(): IWavedShape {\r\n\t\treturn this._fillShape;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a break element (e.g. lines, fill) to the break, which is\r\n\t * [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite Element to add\r\n\t */\r\n\tpublic addBreakSprite(sprite: IWavedShape) {\r\n\t\tsprite.parent = this;\r\n\t\tsprite.isMeasured = false;\r\n\t\tthis._disposers.push(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis this Break is associated with.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: this[\"_axisType\"]) {\r\n\t\tif (this._axis.get() !== axis) {\r\n\t\t\tthis._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n\t\t\taxis.renderer.createBreakSprites(this);\r\n\r\n\t\t\t// this can't go to copyFrom, as axis is set later\r\n\t\t\tlet breakTemplate: AxisBreak = axis.axisBreaks.template;\r\n\r\n\t\t\tthis.startLine.copyFrom(breakTemplate.startLine);\r\n\t\t\tthis.endLine.copyFrom(breakTemplate.endLine);\r\n\t\t\tthis.fillShape.copyFrom(breakTemplate.fillShape);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): this[\"_axisType\"] {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @param value  Relative axis break\r\n\t */\r\n\tpublic set breakSize(value: number) {\r\n\t\tif (this.setPropertyValue(\"breakSize\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative axis break\r\n\t */\r\n\tpublic get breakSize(): number {\r\n\t\treturn this.getPropertyValue(\"breakSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's start.\r\n\t *\r\n\t * @return Start point\r\n\t */\r\n\tpublic get startPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.startPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's end.\r\n\t *\r\n\t * @return End point\r\n\t */\r\n\tpublic get endPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.endPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break starts.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break ends.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\t\trenderer.updateBreakElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A starting value for the break.\r\n\t *\r\n\t * @param value  Starting value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Starting value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\treturn this.getPropertyValue(\"startValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An end value for the break.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.getPropertyValue(\"endValue\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n","/**\r\n * Base class for all Axis\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem, IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\n\r\n// Charts\r\nimport { Chart } from \"../Chart\";\r\n\r\n// Series\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\n\r\n// Elements\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { PointedRectangle } from \"../../core/elements/PointedRectangle\";\r\n\r\n// Types\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n// Utils\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class AxisDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Reference to a related [[Grid]] element.\r\n\t */\r\n\tprotected _grid: Grid;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisTick]] element.\r\n\t */\r\n\tprotected _tick: AxisTick;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisLabel]] element.\r\n\t */\r\n\tprotected _label: AxisLabel;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisFill]] element.\r\n\t */\r\n\tprotected _axisFill: AxisFill;\r\n\r\n\t/**\r\n\t * A mask for axis. We're using [[AxisFill]] since the mask, basically, has\r\n\t * the same shape and features.\r\n\t */\r\n\tprotected _mask: AxisFill;\r\n\r\n\t/**\r\n\t * Container which might be used to hold some extra items, like series\r\n\t * segments when data item is used for axis range.\r\n\t */\r\n\tprotected _contents: Container;\r\n\r\n\t/**\r\n\t * A text to be used as label for this data item.\r\n\t */\r\n\tprotected _text: string;\r\n\r\n\t/**\r\n\t * Holds a physical position of the grid line associated with this data item,\r\n\t * so that it can be used when measuring distance between points, and hiding\r\n\t * some of them so they don't overlap.\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * If the data item is within an existing [[AxisBreak]] this property will\r\n\t * hold a reference to that [[AxisBreak]].\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Axis;\r\n\r\n\t/**\r\n\t * Used to distinguish from real data points and those data items that are\r\n\t * used for ranges, like `series.axisRanges` or `axis.axisRanges`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isRange: boolean;\r\n\r\n\t/**\r\n\t * relative position of data item on axis\r\n\t */\r\n\tpublic position: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullet: Sprite;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * beginning than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `minLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t *     \"dataItems\": {\r\n\t *       \"minPosition\": 0.2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic minPosition?: number;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * end than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `maxLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis end.\r\n\t *     \"dataItems\": {\r\n\t *       \"maxPosition\": 0.8\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic maxPosition?: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Actual index of the axis data item.\r\n\t * \r\n\t * @since 4.7.8\r\n\t */\r\n\tpublic itemIndex: number;\r\n\r\n\t/**\r\n\t * A [[Grid]] element associated with this data item.\r\n\t *\r\n\t * If there is no grid element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param grid  Grid element\r\n\t */\r\n\tpublic set grid(grid: Grid) {\r\n\t\tif (this._grid && this._grid != grid) {\r\n\t\t\t$array.remove(this.sprites, this._grid);\r\n\t\t\tthis._grid.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (grid) {\r\n\t\t\tif (grid.dataItem && grid.dataItem != this) {\r\n\t\t\t\t$array.remove(grid.dataItem.sprites, grid);\r\n\t\t\t\tgrid.dataItem.grid = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(grid);\r\n\t\t}\r\n\t\tthis._grid = grid;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grid element\r\n\t */\r\n\tpublic get grid(): Grid {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: Grid;\r\n\t\t\t\tlet grid: Grid;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.grid;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.grid.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = component.renderer.grid.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.grid.removeValue(grid);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.grid = grid;\r\n\t\t\t\tgrid.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(grid);\r\n\t\t\t\tgrid.axis = this.component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisTick]] element associated with this data item.\r\n\t *\r\n\t * If there is no tick element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param tick  Tick element\r\n\t */\r\n\tpublic set tick(tick: AxisTick) {\r\n\t\tif (this._tick && this._tick != tick) {\r\n\t\t\t$array.remove(this.sprites, this._tick);\r\n\t\t\tthis._tick.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (tick) {\r\n\t\t\tif (tick.dataItem && tick.dataItem != this) {\r\n\t\t\t\t$array.remove(tick.dataItem.sprites, tick);\r\n\t\t\t\ttick.dataItem.tick = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(tick);\r\n\t\t}\r\n\t\tthis._tick = tick;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): AxisTick {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisTick;\r\n\t\t\t\tlet tick: AxisTick;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.tick;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.ticks.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = component.renderer.ticks.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.ticks.removeValue(tick);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick = tick;\r\n\t\t\t\ttick.axis = this.component;\r\n\t\t\t\ttick.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(tick);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisLabel]] element associated with this data item.\r\n\t *\r\n\t * If there is no label element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set label(label: AxisLabel) {\r\n\t\tif (this._label && this._label != label) {\r\n\t\t\t$array.remove(this.sprites, this._label);\r\n\t\t\tthis._label.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (label) {\r\n\t\t\tif (label.dataItem && label.dataItem != this) {\r\n\t\t\t\t$array.remove(label.dataItem.sprites, label);\r\n\t\t\t\tlabel.dataItem.label = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): AxisLabel {\r\n\t\tif (!this._label) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisLabel;\r\n\t\t\t\tlet label: AxisLabel;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.label;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.labels.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = component.renderer.labels.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.labels.removeValue(label);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(label);\r\n\t\t\t\tthis.label = label;\r\n\t\t\t\tlabel.shouldClone = false;\r\n\t\t\t\tlabel.axis = this.component;\r\n\t\t\t\tlabel.virtualParent = component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisFill]] associated element with this data item.\r\n\t *\r\n\t * If there is no fill element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set axisFill(axisFill: AxisFill) {\r\n\t\tif (this._axisFill && this._axisFill != axisFill) {\r\n\t\t\t$array.remove(this.sprites, this._axisFill);\r\n\t\t\tthis._axisFill.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.dataItem && axisFill.dataItem != this) {\r\n\t\t\t\t$array.remove(axisFill.dataItem.sprites, axisFill);\r\n\t\t\t\taxisFill.dataItem.axisFill = undefined;\r\n\t\t\t}\r\n\t\t\taxisFill.axis = this.component;\r\n\t\t\tthis.addSprite(axisFill);\r\n\t\t}\r\n\t\tthis._axisFill = axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get axisFill(): AxisFill {\r\n\t\tif (!this._axisFill) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisFill;\r\n\t\t\t\tlet axisFill: AxisFill;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.axisFill;\r\n\t\t\t\t\tif (!this.isTemplate && template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.axisFills.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = component.renderer.axisFills.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.axisFills.removeValue(axisFill);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.axisFill = axisFill;\r\n\t\t\t\taxisFill.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(axisFill);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * Text to be used as data item's label.\r\n\t *\r\n\t * @param text Text label\r\n\t */\r\n\tpublic set text(text: string) {\r\n\t\tthis._text = text;\r\n\t\tif (this._label) { // do not use getter, it will create unwanted instances!\r\n\t\t\tthis._label.text = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text label\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * Data item's mask.\r\n\t *\r\n\t * @return Mask\r\n\t */\r\n\tpublic get mask(): AxisFill {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Container]] to place all visual elements, related to data item\r\n\t * in.\r\n\t *\r\n\t * If there is no Container, a new one is created.\r\n\t *\r\n\t * @return Contents container\r\n\t */\r\n\tpublic get contents(): Container {\r\n\t\tif (!this._contents) {\r\n\t\t\tlet contents = new Container();\r\n\t\t\tthis.addSprite(contents);\r\n\t\t\tcontents.isMeasured = false;\r\n\t\t\tthis._contents = contents;\r\n\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet mask: AxisFill = component.renderer.createFill(this.component);\r\n\t\t\t\tmask.disabled = false;\r\n\t\t\t\tmask.axis = component;\r\n\t\t\t\tthis.addSprite(mask);\r\n\t\t\t\tthis._mask = mask;\r\n\t\t\t\tcontents.mask = mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._contents;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisBreak]] this data item falls within.\r\n\t *\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic set axisBreak(axisBreak: this[\"_axisBreak\"]) {\r\n\t\tif (this._axisBreak) {\r\n\t\t\tthis._axisBreak.dataItems.removeValue(this);\r\n\t\t}\r\n\t\tif (axisBreak) {\r\n\t\t\taxisBreak.dataItems.push(this);\r\n\t\t}\r\n\t\tthis._axisBreak = axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis break\r\n\t */\r\n\tpublic get axisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn this._axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.validateDataElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends data item's elements to the parent [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendChildren() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.appendDataItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data item has particular property set.\r\n\t *\r\n\t * @param prop  Property name\r\n\t * @return Property set?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop == \"component\" ? true : super.hasProperty(prop);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[AxisDataItem]].\r\n\t *\r\n\t * @param source Source AxisDataItem\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.text = source.text;\r\n\t\tif (source.bullet) {\r\n\t\t\tthis.bullet = source.bullet.clone();\r\n\t\t}\r\n\r\n\t\tthis.minPosition = source.minPosition;\r\n\t\tthis.maxPosition = source.maxPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t\tif (this._contents) {\r\n\t\t\tthis._contents.visible = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n\t * bullet in the middle of the cell, or specific value.\r\n\t *\r\n\t * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n\t * instead. It has a `location` property which can be used to indicate\r\n\t * precise relative location within cell/range.\r\n\t *\r\n\t * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n\t * into it.\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * let flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * var flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"FlagBullet\",\r\n\t *         \"label\": {\r\n\t *           \"text\": \"Hello\"\r\n\t *         }\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.5.9\r\n\t * @param  value  Bullet\r\n\t */\r\n\tpublic set bullet(value: Sprite) {\r\n\t\tif (this._bullet && this._bullet != value) {\r\n\t\t\t$array.remove(this.sprites, this._bullet);\r\n\t\t\tthis._bullet.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tthis._bullet = value;\r\n\t\tif (value) {\r\n\t\t\tthis.addSprite(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bullet\r\n\t */\r\n\tpublic get bullet(): Sprite {\r\n\t\treturn this._bullet;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[AxisDataItem]]\r\n * Includes both the [[DataItemAdapter]] definitions and properties\r\n * @see {@link DataItemAdapter}\r\n */\r\nexport interface IAxisDataItemAdapters extends IDataItemAdapters {\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport enum AxisItemLocation {\r\n\tStart = 0,\r\n\tMiddle = 0.5,\r\n\tEnd = 1\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Axis]].\r\n */\r\nexport interface IAxisDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Axis]].\r\n */\r\nexport interface IAxisProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Axis start location.\r\n\t *\r\n\t * * 0 - None of the first cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the first cell is shown.\r\n\t * * 1 - Full first cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\r\n\t/**\r\n\t * Axis end location.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tendLocation?: number;\r\n\r\n\t/**\r\n\t * Indicates if cusor's tooltip should be shown on this Axis.\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\ttoggleZoomOutButton?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\r\n\tzoomable?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Axis]].\r\n */\r\nexport interface IAxisEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * Invoked when available axis lenght changes, e.g. after resizing the whole\r\n\t * chart.\r\n\t */\r\n\tlengthchanged: {}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Axis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisAdapters extends IComponentAdapters, IAxisProperties {\r\n\t/**\r\n\t * Applied to the tooltip text before it is shown.\r\n\t */\r\n\tgetTooltipText: string;\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nexport class Axis<T extends AxisRenderer = AxisRenderer> extends Component {\r\n\r\n\t/**\r\n\t * Defines list of data fields.\r\n\t */\r\n\tpublic _dataFields: IAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the [[DataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A list of Axis Ranges.\r\n\t */\r\n\tprotected _axisRanges: ListTemplate<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisEvents;\r\n\r\n\t/**\r\n\t * A [[Label]] instance that is used for Axis title label.\r\n\t */\r\n\tprotected _title: Label;\r\n\r\n\t/**\r\n\t * \"X\", \"Y\", etc.\r\n\t *\r\n\t * This is needed so that Axis knows which of the values from series' data\r\n\t * items it should use.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisLetter: string;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tprotected _chart: Chart;\r\n\r\n\t/**\r\n\t * A type for renderer used for this Axis.\r\n\t */\r\n\tpublic _renderer: T;\r\n\r\n\t/**\r\n\t * Number of Grid elements on the axis.\r\n\t */\r\n\tprotected _gridCount: number = 10;\r\n\r\n\t/**\r\n\t * A list of [[XYSeries]] that are using this Axis.\r\n\t */\r\n\tprotected _series: List<XYSeries> = new List<XYSeries>();\r\n\r\n\t/**\r\n\t * Holds the length of the Axis, so that we can check if it changed after\r\n\t * other changes and we need to update layouts.\r\n\t */\r\n\tprotected _prevLength: number;\r\n\r\n\t/**\r\n\t * A list of Axis Breaks associated with this Axis.\r\n\t */\r\n\tprotected _axisBreaks: SortedListTemplate<this[\"_axisBreak\"]>;\r\n\r\n\t/**\r\n\t * A reference to the Iterator for Axis' data items.\r\n\t */\r\n\tprotected _dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A name of the data field this Axis looks for its data in, e.g. \"category\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisFieldName: string;\r\n\r\n\t// we save these values so that cursur could use them if axis line is a fill\r\n\r\n\t/**\r\n\t * [currentItemStartPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemStartPoint: IPoint;\r\n\r\n\t/**\r\n\t * [currentItemEndPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemEndPoint: IPoint;\r\n\r\n\tprotected _tooltipPosition: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic relativePositionSprite?: Sprite;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem and its index as\r\n\t * parameters.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * For example, you can set it up to highlight only weekends on a\r\n\t * [[DateAxis]].\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"], index?: number): void {\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = dataItem.index;\r\n\t\t}\r\n\t\tif (index / 2 == Math.round(index / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\tdataItem.axisFill.opacity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.opacity = 1;\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Full length of the axis, in pixels.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisFullLength: number;\r\n\r\n\t/**\r\n\t * Ghost label is used to prevent chart shrinking/expanding when zooming or\r\n\t * when data is invalidated. You can set custom text on it so that it would\r\n\t * be bigger/smaller,\r\n\t */\r\n\tpublic ghostLabel: AxisLabel;\r\n\r\n\t/**\r\n\t * Specifies if axis should be automatically disposed when removing from\r\n\t * chart's axis list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _axisItemCount: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tif (this.constructor === Axis) {\r\n\t\t\tthrow new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n\t\t}\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.minWidth = 0.0001;\r\n\t\tthis.minHeight = 0.0001;\r\n\t\tthis.className = \"Axis\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n\t\tthis.toggleZoomOutButton = true;\r\n\t\tthis.zoomable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create title\r\n\t\tthis.title = new Label();\r\n\t\tthis.title.shouldClone = false;\r\n\t\tthis._disposers.push(this.title);\r\n\t\tthis.setPropertyValue(\"startLocation\", 0);\r\n\t\tthis.setPropertyValue(\"endLocation\", 1);\r\n\r\n\t\t// Data item iterator\r\n\t\tthis._dataItemsIterator = new $iter.ListIterator<this[\"_dataItem\"]>(this.dataItems, () => this.dataItems.create());\r\n\t\tthis._dataItemsIterator.createNewItems = true;\r\n\r\n\t\t// Create tooltip\r\n\t\tlet tooltip: Tooltip = new Tooltip();\r\n\t\tthis._disposers.push(tooltip);\r\n\t\ttooltip.label.padding(5, 10, 5, 10);\r\n\t\ttooltip.background.pointerLength = 5;\r\n\t\ttooltip.fitPointerToBounds = true;\r\n\t\ttooltip.background.filters.clear();\r\n\r\n\t\t// Set virtual parentfor the tooltip so that it can properly inheirt\r\n\t\t// formatters from the axis.\r\n\t\ttooltip.virtualParent = this;\r\n\r\n\t\t// Create background element for the tooltip\r\n\t\tlet background: PointedRectangle = <PointedRectangle>tooltip.background;\r\n\t\tbackground.cornerRadius = 0;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.stroke = background.fill;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\ttooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n\r\n\t\tthis.tooltip = tooltip;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.readerHidden = true;\r\n\r\n\t\tthis.events.on(\"rangechangestarted\", () => {\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = true;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.events.on(\"rangechangeended\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = false;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new AxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tsuper.invalidateLayout();\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateLayout();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates series of this axis.\r\n\t */\r\n\tpublic invalidateSeries(): void {\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Override to cancel super call for data element validation.\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tthis._axisItemCount = 0;\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tthis.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n\t\t\tthis.ghostLabel.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of grid items on the axis.\r\n\t */\r\n\tprotected updateGridCount() {\r\n\t\tif (this.renderer) {\r\n\t\t\tlet gridCount = this.axisLength / this.renderer.minGridDistance;\r\n\t\t\tif (gridCount != this._gridCount) {\r\n\t\t\t\tthis._gridCount = gridCount;\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateGridCount();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.updateAxisLine();\r\n\t\t\trenderer.updateTooltip();\r\n\t\t\trenderer.updateBaseGridElement();\r\n\t\t}\r\n\r\n\t\tif (this._prevLength != this.axisLength) {\r\n\t\t\tthis.dispatchImmediately(\"lengthchanged\");\r\n\t\t\tthis._prevLength = this.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a data item to the Axis.\r\n\t *\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic appendDataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tif (tick) {\r\n\t\t\tif (tick.above) {\r\n\t\t\t\ttick.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.label) {\r\n\t\t\tdataItem.label.parent = renderer;\r\n\t\t}\r\n\r\n\t\tlet axisFill = dataItem.axisFill;\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.above) {\r\n\t\t\t\taxisFill.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxisFill.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet grid = dataItem.grid;\r\n\t\tif (grid) {\r\n\t\t\tif (grid.above) {\r\n\t\t\t\tgrid.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgrid.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\tdataItem.bullet.parent = renderer.bulletsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws Axis' related items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis.validateLayout();\r\n\r\n\t\tthis.renderer.updateGridContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Redars Axis ranges.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateAxisRanges(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\tthis.appendDataItem(axisRange);\r\n\t\t\tthis.validateDataElement(axisRange);\r\n\t\t\tif (axisRange.grid) {\r\n\t\t\t\taxisRange.grid.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.tick) {\r\n\t\t\t\taxisRange.tick.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.axisFill) {\r\n\t\t\t\taxisRange.axisFill.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.label) {\r\n\t\t\t\taxisRange.label.validate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis breaks, so they are redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\taxisBreak.invalidate();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Associates an Axis break with this Axis, after it is inserted into\r\n\t * `axisBreaks`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic processBreak(event: IListEvents<this[\"_axisBreak\"]>[\"inserted\"]) {\r\n\t\tlet axisBreak: this[\"_axisBreak\"] = event.newValue;\r\n\t\taxisBreak.parent = this.renderer.breakContainer;\r\n\t\taxisBreak.axis = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a [[XYSeries]] element with this Axis.\r\n\t *\r\n\t * Returns a [[Disposer]] for all events, added to Series for watching\r\n\t * changes in Axis, and vice versa.\r\n\t * @ignore\r\n\t * @param series  Series\r\n\t * @return Event disposer\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\tthis.series.moveValue(series);\r\n\r\n\t\treturn new MultiDisposer([\r\n\t\t\tnew Disposer(() => {\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}),\r\n\r\n\t\t\tthis.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"lengthchanged\", series.createMask, series, false),\r\n\t\t\tthis.events.on(\"startchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"endchanged\", series.invalidate, series, false),\r\n\t\t\t//axis.events.on(\"validated\", chart.handleCursorPositionChange, chart, false)\t\t\t\r\n\r\n\t\t\t// TODO should these be disposed of ?\r\n\t\t\t//series.events.on(\"datavalidated\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"visibilitychanged\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"hidden\", this.processSeriesDataItems, this)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisRenderer]] to be used to render this Axis.\r\n\t *\r\n\t * Please note that most of the settings, related to Axis' appearance are set\r\n\t * via its renderer. Not directly on the Axis.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n\t * @param renderer  Renderer\r\n\t */\r\n\tpublic set renderer(renderer: this[\"_renderer\"]) {\r\n\t\tif (renderer != this._renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\trenderer.chart = this.chart;\r\n\t\t\trenderer.axis = this;\r\n\t\t\trenderer.parent = this;\r\n\t\t\tthis.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n\t\t\tthis.initRenderer();\r\n\r\n\t\t\tthis._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n\r\n\t\t\tlet ghostLabel = this.renderer.labels.create();\r\n\t\t\tthis._disposers.push(ghostLabel);\r\n\t\t\tghostLabel.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n\t\t\tghostLabel.text = \"L\";\r\n\t\t\tghostLabel.parent = this.renderer;\r\n\t\t\tghostLabel.shouldClone = false;\r\n\t\t\tghostLabel.fillOpacity = 0;\r\n\t\t\tghostLabel.opacity = 0;\r\n\t\t\tghostLabel.strokeOpacity = 0;\r\n\t\t\tghostLabel.interactionsEnabled = false;\r\n\t\t\tghostLabel.validate();\r\n\r\n\t\t\tthis.ghostLabel = ghostLabel;\r\n\r\n\t\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\t\tghostLabel.text = \"L\";\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Renderer\r\n\t */\r\n\tpublic get renderer(): this[\"_renderer\"] {\r\n\t\treturn this._renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to angle. (for circular axes)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\treturn this.renderer.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\treturn this.renderer.pointToPosition(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position to coordinate.\r\n\t *\r\n\t * @since 4.7.15\r\n\t * @param position (0-1)\r\n\t * @return coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\treturn this.renderer.positionToCoordinate(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start  [description]\r\n\t * @param end    [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: any, end: any): string {\r\n\t\treturn this.renderer.getPositionRangePath(start, end);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic anyToPosition(value: any): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: any): IOrientationPoint {\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition [description]\r\n\t * @param endPosition   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.getPositionRangePath(startPosition, endPosition);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Actual axis length in pixels.\r\n\t *\r\n\t * @return Axis length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.axisLength;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if axis should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n\t\t\tif (value && this.renderer) {\r\n\t\t\t\tthis.renderer.updateTooltip();\r\n\t\t\t}\r\n\t\t\telse if (this.tooltip) {\r\n\t\t\t\tthis.tooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.6.2\r\n\t * @param  value  Toggle zoom out button?\r\n\t */\r\n\tpublic set toggleZoomOutButton(value: boolean) {\r\n\t\tthis.setPropertyValue(\"toggleZoomOutButton\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Toggle zoom out button?\r\n\t */\r\n\tpublic get toggleZoomOutButton(): boolean {\r\n\t\treturn this.getPropertyValue(\"toggleZoomOutButton\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis._tooltipPosition = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\r\n\t\tif (!tooltip || this.dataItems.length <= 0) {\r\n\t\t\tthis._tooltipPosition = undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!local) {\r\n\t\t\t\tposition = this.toAxisPosition(position);\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t\tthis._tooltipPosition = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.renderer;\r\n\r\n\t\t\t//@todo: think of how to solve this better\r\n\t\t\tif (!tooltip.parent) {\r\n\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltipLocation = renderer.tooltipLocation;\r\n\r\n\t\t\tlet startPosition: number = this.getCellStartPosition(position);\r\n\t\t\tlet endPosition: number = this.getCellEndPosition(position);\r\n\r\n\t\t\tif (this.tooltipPosition == \"fixed\") {\r\n\t\t\t\tposition = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n\t\t\t}\r\n\r\n\t\t\tposition = $math.fitToRange(position, this.start, this.end);\r\n\r\n\t\t\tif (this._tooltipPosition != position) {\r\n\t\t\t\tthis._tooltipPosition = position;\r\n\r\n\t\t\t\tlet tooltipLocation2 = renderer.tooltipLocation2;\r\n\r\n\t\t\t\tlet startPoint: IPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n\t\t\t\tlet endPoint: IPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n\r\n\t\t\t\t// save values so cursor could use them\r\n\t\t\t\tthis.currentItemStartPoint = startPoint;\r\n\t\t\t\tthis.currentItemEndPoint = endPoint;\r\n\r\n\t\t\t\tif (renderer.fullWidthTooltip) {\r\n\t\t\t\t\ttooltip.width = endPoint.x - startPoint.x;\r\n\t\t\t\t\ttooltip.height = endPoint.y - startPoint.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet point: IPoint = renderer.positionToPoint(position, tooltipLocation2);\r\n\t\t\t\tlet globalPoint: IPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n\t\t\t\ttooltip.text = this.getTooltipText(position);\r\n\r\n\t\t\t\tif (tooltip.text) {\r\n\t\t\t\t\ttooltip.delayedPointTo(globalPoint);\r\n\t\t\t\t\ttooltip.show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) to Axis position with zoom level and\r\n\t * inversed taken into account.\r\n\t *\r\n\t * @param position Global position (0-1)\r\n\t * @return Position within Axis (0-1)\r\n\t */\r\n\tpublic toAxisPosition(position: number): number {\r\n\r\n\t\tposition = this.renderer.toAxisPosition(position);\r\n\r\n\t\tif (position == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tposition = position * (this.end - this.start);\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = this.start + position;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts position on the axis with zoom level and\r\n\t * inversed taken into account to global position.\r\n\t *\r\n\t * @param position Axis position (0-1)\r\n\t * @return Global position (0-1)\r\n\t */\r\n\tpublic toGlobalPosition(position: number): number {\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = position - this.start;\r\n\t\t}\r\n\r\n\t\treturn position / (this.end - this.start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to be used for cursor's Axis tooltip.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position coordinate (px)\r\n\t * @return Label text\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n\t * place.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointerOrientation  Pointer (stem) orientation\r\n\t * @param boundingRectangle   A rectangle for tooltip to fit within\r\n\t */\r\n\tpublic updateTooltip(pointerOrientation: PointerOrientation, boundingRectangle: IRectangle): void {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.fixDoc = false;\r\n\t\t\ttooltip.pointerOrientation = pointerOrientation;\r\n\t\t\ttooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [roundPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position  Relative position\r\n\t * @param location  Location on axis\r\n\t * @return Rounded position\r\n\t */\r\n\tpublic roundPosition(position: number, location: AxisItemLocation, axisLocation?: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellStartPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellEndPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis ranges for this Axis.\r\n\t *\r\n\t * @return Axis ranges\r\n\t */\r\n\tpublic get axisRanges(): ListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (!this._axisRanges) {\r\n\t\t\tlet dataItem: AxisDataItem = this.createDataItem();\r\n\t\t\tdataItem.isRange = true;\r\n\t\t\tdataItem.axisFill = this.renderer.axisFills.template.clone();\r\n\t\t\tdataItem.grid = this.renderer.grid.template.clone();\r\n\t\t\tdataItem.tick = this.renderer.ticks.template.clone();\r\n\t\t\tdataItem.label = this.renderer.labels.template.clone();\r\n\r\n\t\t\tdataItem.isTemplate = true;\r\n\t\t\tdataItem.component = this;\r\n\t\t\tdataItem.axisFill.disabled = false;\r\n\t\t\tdataItem.tick.disabled = false;\r\n\t\t\tdataItem.grid.disabled = false;\r\n\t\t\tdataItem.label.disabled = false;\r\n\r\n\t\t\tthis._axisRanges = new ListTemplate<this[\"_dataItem\"]>(dataItem);\r\n\t\t\tthis._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisRanges));\r\n\t\t\tthis._disposers.push(this._axisRanges.template);\r\n\t\t}\r\n\t\treturn this._axisRanges;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an axis range after it has been added to the axis range list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<this[\"_dataItem\"]>[\"inserted\"]) {\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\taxisRange.component = this;\r\n\t\taxisRange.isRange = true;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis breaks on this Axis.\r\n\t *\r\n\t * @return Axis breaks.\r\n\t */\r\n\tpublic get axisBreaks(): SortedListTemplate<this[\"_axisBreak\"]> {\r\n\t\tif (!this._axisBreaks) {\r\n\t\t\tthis._axisBreaks = new SortedListTemplate<this[\"_axisBreak\"]>(this.createAxisBreak(), (a, b) => {\r\n\t\t\t\treturn $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n\t\t\t});\r\n\r\n\t\t\tthis._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisBreaks));\r\n\t\t\tthis._disposers.push(this._axisBreaks.template);\r\n\t\t}\r\n\t\treturn this._axisBreaks;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new axis break.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new AxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Series currently associated with this Axis.\r\n\t *\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem): void {\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t/**\r\n\t * Updates Axis based on all Series that might influence it.\r\n\t *\r\n\t * Called by Series after Series data is validated.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisBySeries(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideUnusedDataItems(): void {\r\n\t\t// hide all unused\r\n\t\tlet dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]> = this._dataItemsIterator;\r\n\r\n\t\tdataItemsIterator.createNewItems = false;\r\n\r\n\t\t$iter.each(dataItemsIterator.iterator(), (dataItem) => {\r\n\t\t\tthis.validateDataElement(dataItem); // solves shrinking\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t});\r\n\r\n\t\tdataItemsIterator.clear();\r\n\t\tdataItemsIterator.createNewItems = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series' data item that corresponds to specific position on Axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series    Series\r\n\t * @param position  Position (0-1)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle that corresponds to specific position on axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       ???\r\n\t * @param location  Location\r\n\t * @param stackKey  ???\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point coordinates\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes axis breaks that fall between `min` and `max` (???)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param min  Start value\r\n\t * @param max  End value\r\n\t * @return Spread o\r\n\t */\r\n\tprotected adjustDifference(min: number, max: number): number {\r\n\t\tlet difference: number = max - min;\r\n\t\tif ($type.isNumber(difference)) {\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.eachContinue(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t// breaks are sorted, we don't need go further anymore\r\n\t\t\t\t\t\tif (startValue > max) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (endValue >= min) {\r\n\t\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tlet intersection: IRange = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tdifference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn difference;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if specific value falls within a break.\r\n\t *\r\n\t * Returns [[AxisBreak]] the value falls into.\r\n\t *\r\n\t * @param value  Value to check\r\n\t * @return Axis break\r\n\t */\r\n\tprotected isInBreak(value: number): this[\"_axisBreak\"] {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\treturn $iter.find(this._axisBreaks.iterator(), (axisBreak) =>\r\n\t\t\t\tvalue >= axisBreak.adjustedStartValue &&\r\n\t\t\t\tvalue <= axisBreak.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixAxisBreaks description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected fixAxisBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks: SortedListTemplate<this[\"_axisBreak\"]> = this._axisBreaks;\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t\t// This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n\t\t\t\t// TODO very inefficient\r\n\t\t\t\t$array.each($iter.toArray(axisBreaks.iterator()), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n\t\t\t\t\tlet endValue: number = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\t\tthis._axisBreaks.update(axisBreak);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tlet firstAxisBreak: this[\"_axisBreak\"] = axisBreaks.first;\r\n\t\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t\t// process breaks\r\n\t\t\t\t// TODO does this need to call axisBreaks.update ?\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t// breaks can't overlap\r\n\t\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n\t *\r\n\t * Yes, also for category axis, this helps to avoid jumping of categories\r\n\t * while scrolling and does not do a lot of extra work as we use\r\n\t * protected `_startIndex` and `_endIndex` when working with items.\r\n\t *\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * [startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a formatted label based on position.\r\n\t *\r\n\t * Individual axis types should override this method to generate a label\r\n\t * that is relevant to axis type.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\treturn Math.round(position * 100) + \"%x\";\r\n\t}\r\n\r\n\t/**\r\n\t * A Chart this Axis belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a data item for a Series range.\r\n\t *\r\n\t * @param series  Target Series\r\n\t * @return Range data item\r\n\t */\r\n\tpublic createSeriesRange(series: XYSeries): this[\"_dataItem\"] {\r\n\t\tlet range = this.axisRanges.create();\r\n\t\trange.component = this;\r\n\t\trange.axisFill = this.renderer.axisFills.template.clone();\r\n\t\trange.axisFill.disabled = false;\r\n\t\trange.axisFill.fillOpacity = 0;\r\n\r\n\t\trange.grid = this.renderer.grid.template.clone();\r\n\t\trange.grid.disabled = true;\r\n\r\n\t\trange.tick = this.renderer.ticks.template.clone();\r\n\t\trange.tick.disabled = true;\r\n\r\n\t\trange.label = this.renderer.labels.template.clone();\r\n\t\trange.label.disabled = true;\r\n\r\n\t\trange.addDisposer(new Disposer(() => {\r\n\t\t\tseries.axisRanges.removeValue(range);\r\n\t\t}))\r\n\r\n\t\tseries.axisRanges.push(range);\r\n\t\treturn range;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.copyFrom(source.renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (source.renderer) {\r\n\t\t\t\tthis.renderer = source.renderer.clone();\r\n\t\t\t\tthis._disposers.push(this.renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (source.title) {\r\n\t\t\tif (!this.title) {\r\n\t\t\t\tthis.title = source.title.clone();\r\n\t\t\t\tthis.title.parent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.title.copyFrom(source.title);\r\n\t\t\t}\r\n\t\t\tthis._disposers.push(this.title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t */\r\n\tprotected resetIterators(): void {\r\n\t\tthis._dataItemsIterator.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\r\n\t\t\t\t\t// If `series` is set, we know it's a series range\r\n\t\t\t\t\tif ($type.hasValue(range[\"series\"])) {\r\n\t\t\t\t\t\tif ($type.isString(range[\"series\"])) {\r\n\t\t\t\t\t\t\tif (this.map.hasKey(range[\"series\"])) {\r\n\t\t\t\t\t\t\t\t//range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n\t\t\t\t\t\t\t\tdelete (range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i].config = range;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Ordering function used in JSON setup.\r\n\t *\r\n\t * @param a  Item A\r\n\t * @param b  Item B\r\n\t * @return Order\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// last\r\n\t\telse if (a == \"title\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"title\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// first\r\n\t\telse if (a == \"component\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"component\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - Full first cell is shown.\r\n\t * * 0.5 - Half of first cell is shown.\r\n\t * * 1 - None of the first cell is visible. (you probably don't want that)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.gridContainer.disabled = value;\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Label]] element which serves as a title to the axis.\r\n\t *\r\n\t * When axis is created it aleready has an element, so you can just modify\r\n\t * it.\r\n\t *\r\n\t * Or you can replace it with your own instance of `Label`.\r\n\t * \r\n\t * @param  value  Title label\r\n\t */\r\n\tpublic set title(value: Label) {\r\n\t\tif (this._title && this._title != value) {\r\n\t\t\tthis._title.dispose();\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tvalue.parent = this;\r\n\t\t\tvalue.shouldClone = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title label\r\n\t */\r\n\tpublic get title(): Label {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the axis be zoomed with scrollbar/cursor?\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.28\r\n\t * @param  value  Zoomable?\r\n\t */\r\n\tpublic set zoomable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"zoomable\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoomable?\r\n\t */\r\n\tpublic get zoomable(): boolean {\r\n\t\treturn this.getPropertyValue(\"zoomable\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Axis && target.tooltip) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.cursorTooltipEnabled = false;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Axis, AxisItemLocation, AxisDataItem } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFill]].\r\n */\r\nexport interface IAxisFillProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Start position. (0-1)\r\n\t */\r\n\tstartPosition?: number;\r\n\r\n\t/**\r\n\t * End position. (0-1)\r\n\t */\r\n\tendPosition?: number;\r\n\r\n\t/**\r\n\t * Location within the axis.\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFill]].\r\n */\r\nexport interface IAxisFillEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFill]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillAdapters extends ISpriteAdapters, IAxisFillProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisFill extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillEvents;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * [_dataItem description]\r\n\t *\r\n\t * Not sure what this is doing here?\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper();\r\n\t\tthis.axis = axis;\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.className = \"AxisFill\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.location = 0;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.__disabled || this.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n\t\t\tthis.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t\tif (this.isMeasured) {\r\n\t\t\t\tthis.measure();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An actual starting position of the fill.\r\n\t *\r\n\t * @param value  Starting position\r\n\t */\r\n\tpublic set startPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"startPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn this.getPropertyValue(\"startPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * An actual end position of the fill.\r\n\t *\r\n\t * @param value End position\r\n\t */\r\n\tpublic set endPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"endPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn this.getPropertyValue(\"endPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the fill. (0-1)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteEvents, ISpriteAdapters } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grid]].\r\n */\r\nexport interface IGridProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Location of the grid item within cell. (0-1)\r\n\t */\r\n\tlocation?: AxisItemLocation;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grid]].\r\n */\r\nexport interface IGridEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters  for [[Grid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridAdapters extends ISpriteAdapters, IGridProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nexport class Grid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridEvents;\r\n\r\n\t/**\r\n\t * An axis data item that corresponds to the this grid element.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Grid\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.fill = color(); // \"none\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to place grid line on.\r\n\t *\r\n\t * * 0 - start\r\n\t * * 0.5 - middle\r\n\t * * 1 - end\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable grid on smaller charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Grid) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\t//this.nonScaling = true; // not good for perf\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n","/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n","/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the tick on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referece to Axis element this tick is placed on.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if tick should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally tick goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Chart } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t */\r\n\tminGridDistance?: number;\r\n\r\n\t/**\r\n\t * Draw axis labels inside axis.\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Draw axis on opposite side of the plot area?\r\n\t */\r\n\topposite?: boolean;\r\n\r\n\t/**\r\n\t * Inverse the order of the scale for the Axis.\r\n\t */\r\n\tinversed?: boolean;\r\n\r\n\t/**\r\n\t * Location of the cell start. (0-1)\r\n\t */\r\n\tcellStartLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the cell end. (0-1)\r\n\t */\r\n\tcellEndLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the axis tooltip. (0-1)\r\n\t */\r\n\ttooltipLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the tooltip relative secondary axis cell. (0-1)\r\n\t */\r\n\ttooltipLocation2?: number;\t\r\n\r\n\t/**\r\n\t * Resize axis tooltip to the full width of the cell.\r\n\t */\r\n\tfullWidthTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Labels with position less than this will be hidden.\r\n\t */\r\n\tminLabelPosition?: number;\r\n\r\n\t/**\r\n\t * Labels with position bigger than this will be hidden.\r\n\t */\r\n\tmaxLabelPosition?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererAdapters extends IContainerAdapters, IAxisRendererProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRenderer extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererEvents;\r\n\r\n\t/**\r\n\t * A related Axis.\r\n\t */\r\n\tprotected _axis: Axis;\r\n\r\n\t/**\r\n\t * A line object of the related axis.\r\n\t */\r\n\tpublic line: AxisLine;\r\n\r\n\t/**\r\n\t * Base grid element. ([[Sprite]])\r\n\t *\r\n\t * For value axes base grid is at value 0.\r\n\t *\r\n\t * For category/date axis it is added at the end of the last item/date.\r\n\t *\r\n\t */\r\n\tpublic baseGrid: Sprite;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[Grid]] elements.\r\n\t */\r\n\tpublic gridContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the axis bullets.\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[AxisBreak]] elements.\r\n\t */\r\n\tpublic breakContainer: Container;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<Chart>();\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: Grid;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFill;\r\n\r\n\t/**\r\n\t * Defines type for tick elements.\r\n\t */\r\n\tpublic _tickType: AxisTick;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabel;\r\n\r\n\t/**\r\n\t * A list of grid elements.\r\n\t */\r\n\tprotected _grid: ListTemplate<this[\"_gridType\"]>;\r\n\r\n\t/**\r\n\t * A list of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tickType\"]>;\r\n\r\n\t/**\r\n\t * A list of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_labelType\"]>;\r\n\r\n\t/**\r\n\t * A list of fill elements.\r\n\t */\r\n\tprotected _axisFills: ListTemplate<this[\"_fillType\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRenderer\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.minGridDistance = 50;\r\n\t\tthis.inside = false;\r\n\t\tthis.inversed = false;\r\n\t\tthis.tooltipLocation = 0.5;\r\n\t\tthis.fullWidthTooltip = false;\r\n\t\tthis.cellStartLocation = 0;\r\n\t\tthis.cellEndLocation = 1;\r\n\r\n\t\tthis.minLabelPosition = 0;\r\n\t\tthis.maxLabelPosition = 1;\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tlet gridContainer = this.createChild(Container);\r\n\t\tgridContainer.shouldClone = false;\r\n\t\tgridContainer.layout = \"none\";\r\n\t\t//\tgridContainer.isMeasured = false;\r\n\t\tgridContainer.virtualParent = this;\r\n\t\tgridContainer.width = percent(100);\r\n\t\tgridContainer.height = percent(100);\r\n\r\n\t\tthis.gridContainer = gridContainer;\r\n\t\t// not good without this\r\n\t\tgridContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.invalidateAxisItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tlet breakContainer = this.createChild(Container);\r\n\t\tbreakContainer.shouldClone = false;\r\n\t\tbreakContainer.isMeasured = false;\r\n\t\tbreakContainer.layout = \"none\";\r\n\t\tbreakContainer.width = percent(100);\r\n\t\tbreakContainer.height = percent(100);\r\n\t\tthis.breakContainer = breakContainer;\r\n\r\n\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.line = this.createChild(AxisLine);\r\n\t\tthis.line.shouldClone = false;\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tlet baseGrid: Grid = this.createChild(Grid);\r\n\t\tbaseGrid.shouldClone = false;\r\n\t\tthis.baseGrid = baseGrid;\r\n\r\n\t\t// Make elements disposable\r\n\t\tlet disposers = this._disposers;\r\n\t\tdisposers.push(baseGrid);\r\n\t\tdisposers.push(this.line);\r\n\t\tdisposers.push(gridContainer);\r\n\t\tdisposers.push(breakContainer);\r\n\t\tdisposers.push(bulletsContainer);\r\n\t\tdisposers.push(this._chart);\r\n\r\n\t\tthis.ticks.template.disabled = true;\r\n\t\tthis.axisFills.template.disabled = true;\r\n\t\tthis.axisFills.template.interactionsEnabled = false;\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @param axis Axis\r\n\t */\r\n\tset axis(axis: Axis) {\r\n\t\tthis.setAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @return axis Axis\r\n\t */\r\n\tget axis(): Axis {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tthis._axis = axis;\r\n\t\tthis.baseGrid.parent = axis;\r\n\t\tthis.line.parent = axis;\r\n\t\tthis.gridContainer.bind(\"opacity\", axis);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tthis.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n\t\tthis.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n\t\tthis.labels.template.inside = this.inside;\r\n\t\tthis.ticks.template.inside = this.inside;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-positions an element to new coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item   A target element\r\n\t * @param point  New coordinates\r\n\t */\r\n\tpublic positionItem(item: Sprite, point: IPoint): void {\r\n\t\tif (item) {\r\n\t\t\titem.moveTo(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?:number): IPoint {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review / units)\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate;\r\n\t}\r\n\r\n\tpublic updateGridContainer() {\r\n\r\n\t}\r\n\r\n\r\n\tprotected getHeight(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelHeight;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelHeight || 0;\r\n\t}\r\n\r\n\tprotected getWidth(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelWidth;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelWidth || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis data items, effectively causing them re-evaluated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic invalidateAxisItems(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\taxis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fill         Fill element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateFillElement(fill: AxisFill, position: number, endPosition: number): void {\r\n\t\tfill.startPosition = position;\r\n\t\tfill.endPosition = endPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tthis.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n\t\tthis.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n\t\tthis.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n\t\tthis.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * Use it to control density of the grid/labels on the axis.element.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n\t * @param value  Min distance (px)\r\n\t */\r\n\tpublic set minGridDistance(value: number) {\r\n\t\tif (this.setPropertyValue(\"minGridDistance\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min distance (px)\r\n\t */\r\n\tpublic get minGridDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minGridDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of an element, based on its current position and\r\n\t * min/max position settings.\r\n\t *\r\n\t * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite       An element to toggle\r\n\t * @param position     Elements current position\r\n\t * @param minPosition  Min position setting\r\n\t * @param maxPosition  Max position setting\r\n\t */\r\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tlet dataItem = sprite.dataItem;\r\n\t\tif(dataItem && dataItem instanceof AxisDataItem){\r\n\t\t\tif($type.isNumber(dataItem.minPosition)){\r\n\t\t\t\tminPosition = dataItem.minPosition;\r\n\t\t\t}\r\n\t\t\tif($type.isNumber(dataItem.maxPosition)){\r\n\t\t\t\tmaxPosition = dataItem.maxPosition;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tlet updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n\t\tlet updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n\r\n\t\tif (!sprite.disabled) {\r\n\t\t\tif (position < updatedStart || position > updatedEnd) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Fill elements.\r\n\t *\r\n\t * Those are fill elements that cover the space between every second set\r\n\t * of grid lines, and can be configured to create striped charts.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable them, set\r\n\t * template to true.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"axisFills\": {\r\n\t *         \"disabled\": false\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n\t * @return Fill elements\r\n\t */\r\n\tpublic get axisFills(): ListTemplate<this[\"_fillType\"]> {\r\n\t\tif (!this._axisFills) {\r\n\t\t\tlet fill = this.createFill(this.axis);\r\n\t\t\tthis._axisFills = new ListTemplate<AxisFill>(fill);\r\n\t\t\tfill.applyOnClones = true;\r\n\t\t\tfill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisFills));\r\n\t\t\tthis._disposers.push(this._axisFills.template);\r\n\t\t}\r\n\t\treturn this._axisFills;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFill(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Grid elements.\r\n\t *\r\n\t * @return Grid elements\r\n\t */\r\n\tpublic get grid(): ListTemplate<this[\"_gridType\"]> {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet grid = this.createGrid();\r\n\t\t\tthis._grid = new ListTemplate<Grid>(grid);\r\n\t\t\tgrid.applyOnClones = true;\r\n\t\t\tgrid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._grid));\r\n\t\t\tthis._disposers.push(this._grid.template);\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new Grid();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Tick elements.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable ticks, you'll\r\n\t * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"ticks\": {\r\n\t *         \"disabled\": false,\r\n\t *         \"strokeOpacity\": 0.5\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Tick elements\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tickType\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick: AxisTick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\ttick.isMeasured = false;\r\n\t\t\ttick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._ticks = new ListTemplate<AxisTick>(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t\tthis._disposers.push(this._ticks.template);\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new tick element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Tick element\r\n\t */\r\n\tpublic createTick(): this[\"_tickType\"] {\r\n\t\treturn new AxisTick();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Label elements.\r\n\t *\r\n\t * @return Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_labelType\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tthis._labels = new ListTemplate<AxisLabel>(label);\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tlabel.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t\tthis._disposers.push(this._labels.template);\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabel();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n\t *\r\n\t * Does not work with all renderers, like AxisRendererRadial.\r\n\t *\r\n\t * @param value  Labels inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\r\n\t\tif (this.setPropertyValue(\"inside\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.height = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis should be drawn on the opposite side of the plot\r\n\t * area than it would normally be drawn based on chart's settings.\r\n\t *\r\n\t * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n\t * [[AxisRenderer Circular].\r\n\t *\r\n\t * @param value  Draw axis on opposite side?\r\n\t */\r\n\tpublic set opposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"opposite\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw axis on opposite side?\r\n\t */\r\n\tpublic get opposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"opposite\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n\t * (between two grid lines)\r\n\t *\r\n\t * NOTE: this setting is ignored on circular axis types.\r\n\t *\r\n\t * @param value Full width tooltip?\r\n\t */\r\n\tpublic set fullWidthTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width tooltip?\r\n\t */\r\n\tpublic get fullWidthTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within secondary axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation2(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation2\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation2(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation2\");\r\n\t}\t\r\n\r\n\t/**\r\n\t * Location for the cell start.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellStartLocation` identifies where, within available space, the actual\r\n\t * cell starts.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell start (0-1)\r\n\t */\r\n\tpublic set cellStartLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell start (0-1)\r\n\t */\r\n\tpublic get cellStartLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellStartLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell end.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellEndLocation` identifies where, within available space, the actual\r\n\t * cell ends.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell end (0-1)\r\n\t */\r\n\tpublic set cellEndLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell end (0-1)\r\n\t */\r\n\tpublic get cellEndLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellEndLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the scale of the axis should be flipped.\r\n\t *\r\n\t * @param value Flip axis?\r\n\t */\r\n\tpublic set inversed(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inversed\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Flip axis?\r\n\t */\r\n\tpublic get inversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"inversed\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the start of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near start of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Min label position (0-1)\r\n\t */\r\n\tpublic set minLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"minLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min label position (0-1)\r\n\t */\r\n\tpublic get minLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"minLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the and of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near end of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Max label position (0-1)\r\n\t */\r\n\tpublic set maxLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max label position (0-1)\r\n\t */\r\n\tpublic get maxLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"maxLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all settings and related items from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param source  Source object\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.grid.template.copyFrom(source.grid.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.axisFills.template.copyFrom(source.axisFills.template);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.baseGrid.copyFrom(source.baseGrid);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n","/**\r\n * Axis Bullet module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerAdapters, IContainerEvents, IContainerProperties } from \"../../core/Container\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw inside plot area (`true`) or outside it (`false`).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapter for [[AxisBullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBulletAdapters extends IContainerAdapters, IAxisBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a positioned bullet (element) on an Axis.\r\n *\r\n * ```TypeScript\r\n * let range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * let flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JavaScript\r\n * var range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * var flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"xAxes\": [{\r\n *     \"type\": \"DateAxis\",\r\n *     // ...\r\n *     \"axisRanges\": [{\r\n *       \"date\": new Date(2018, 0, 5),\r\n *       \"bullet: {\r\n *         \"type\": \"FlagBullet\",\r\n *         \"label\": {\r\n *           \"text\": \"Hello\"\r\n *         }\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.9\r\n * @see {@link IAxisBulletEvents} for a list of available events\r\n * @see {@link IAxisBulletAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBulletEvents;\r\n\r\n\t/**\r\n\t * Data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisBullet\";\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * let bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * var bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"endDate\": new Date(2018, 0, 6),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"AxisBullet\",\r\n\t *         \"location\": 1,\r\n\t *         \"children\": [{\r\n\t *           \"type\": \"FlagBullet\",\r\n\t *           \"label\": {\r\n\t *             \"text\": \"Hello\"\r\n\t *           }\r\n\t *         }]\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0.5\r\n\t * @param  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBullet\"] = AxisBullet;","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { HorizontalCenter } from \"../../core/defs/HorizontalCenter\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererYAdapters extends IAxisRendererAdapters, IAxisRendererYProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererYProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererYAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererYEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY\";\r\n\t\tthis.minGridDistance = 40;\r\n\t\tthis.opposite = false;\r\n\t\tthis.height = percent(100);\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"horizontal\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.y = axis.pixelY;\r\n\t\t\tgridContainer.height = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet inversedPosition = 1 - value;\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet y = axis.pixelY;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\ty = $utils.spritePointToSprite({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tlet relativeY = y / relativePositionSprite.innerHeight;\r\n\t\t\t\tlet relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;\r\n\r\n\t\t\t\treturn 1 - (inversedPosition - relativeY) / relativeHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.valign = \"middle\";\r\n\r\n\t\t\tif (!(axis.height instanceof Percent)) {\r\n\t\t\t\taxis.height = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\ttitle.rotation = 90;\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.rotation = -90;\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 2000;\r\n\t\t\tlet bbx: number = 0;\r\n\t\t\tlet bby: number = 0;\r\n\t\t\tlet bbw: number = bigNum;\r\n\t\t\tlet bbh: number = this.axisLength;\r\n\r\n\t\t\t// right\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\telse {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n\t}\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.y, point.x);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = (1 - axis.start) - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + (1 - axis.end);\r\n\t\t}\r\n\t\treturn $math.round(position, 5);\r\n\t}\t\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet y1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet y2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet h: number = Math.abs(y2 - y1);\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet y: number = Math.min(y1, y2);\r\n\t\tlet x: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//\tpoint.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\ttry {\r\n\t\t\t$utils.used(this.axis.title.measuredWidth);\r\n\t\t} catch {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tif (!this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet h: number = this.axisLength;\r\n\t\tlet y: number = axis.basePoint.y;\r\n\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tif (y < - 0.2 || y > h + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet horizontalCenter: HorizontalCenter;\r\n\t\tlet deltaX = 0;\r\n\t\tlet maxWidth = this.gridContainer.maxWidth;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\tif (label.align == \"left\") {\r\n\t\t\t\t\tdeltaX = -maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = -maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = 0 + deltaX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\tif (label.align == \"right\") {\r\n\t\t\t\t\tdeltaX = maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = this.measuredWidth + deltaX;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.horizontalCenter = horizontalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet x1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet x2: number = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n\r\n\t\tstartPoint.y = $math.fitToRange(startPoint.y, -1, this.axisLength + 1);\r\n\t\tendPoint.y = $math.fitToRange(endPoint.y, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet w = Math.abs(x2 - x1);\r\n\r\n\t\tstartLine.x = x1;\r\n\t\tstartLine.height = 0;\r\n\t\tstartLine.width = w;\r\n\r\n\t\tendLine.x = x1;\r\n\t\tendLine.height = 0;\r\n\t\tendLine.width = w;\r\n\r\n\t\tfillShape.width = w;\r\n\t\tfillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n\t\tfillShape.x = x1;\r\n\t\tfillShape.y = endPoint.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(true, false, true, false);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (!axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n","/**\r\n * Value Axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { IDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ValueAxisDataItem extends AxisDataItem {\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ValueAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.endValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A data point's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values[\"value\"].value;\r\n\t}\r\n\r\n\t/**\r\n\t * Data point's numeric end value.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tthis.setValue(\"endValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.values[\"endValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n */\r\nexport interface IMinMaxStep {\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisDataFields extends IAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisProperties extends IAxisProperties {\r\n\tstrictMinMax?: boolean;\r\n\tlogarithmic?: boolean;\r\n\tmaxPrecision?: number;\r\n\tadjustLabelPrecision?: boolean;\r\n\textraTooltipPrecision?: number;\r\n\textraMin?: number;\r\n\textraMax?: number;\r\n\tkeepSelection?: boolean;\r\n\tincludeRangesInMinMax?: boolean;\r\n\tsyncWithAxis?: ValueAxis;\r\n\ttreatZeroAs?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisEvents extends IAxisEvents {\r\n\r\n\t/**\r\n\t * Invoked when selection/zoom on axis occurs and start/end coordinates\r\n\t * change.\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start/end coordinates of the axis change.\r\n\t */\r\n\textremeschanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[ValueAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisAdapters extends IAxisAdapters, IValueAxisProperties {\r\n\t/**\r\n\t * Applied to the base value of the axis\r\n\t */\r\n\tbaseValue: number,\r\n\r\n\t/**\r\n\t * Applied to the min value of the axis\r\n\t */\r\n\tmin: number\r\n\r\n\t/**\r\n\t * Applied to the max value of the axis\r\n\t */\r\n\tmax: number\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IValueAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: ValueAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: ValueAxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisEvents;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: XYChart;\r\n\r\n\t/**\r\n\t * A list of Series that are using this Axis.\r\n\t */\r\n\tpublic series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * Minimum value for the axis scale.\r\n\t */\r\n\tprotected _min: number;\r\n\r\n\t/**\r\n\t * Maximum value for the axis scale.\r\n\t */\r\n\tprotected _max: number;\r\n\r\n\t/**\r\n\t * User-defined min value for axis.\r\n\t */\r\n\tprotected _minDefined: number;\r\n\r\n\t/**\r\n\t * User-defined max value for axis.\r\n\t */\r\n\tprotected _maxDefined: number;\r\n\r\n\t/**\r\n\t * [_minAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minAdjusted: number;\r\n\r\n\t/**\r\n\t * [_maxAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxAdjusted: number;\r\n\r\n\t/**\r\n\t * Min real value. (lowest value of all data points)\r\n\t */\r\n\tprotected _minReal: number;\r\n\r\n\t/**\r\n\t * Max real value. (highest value of all data points)\r\n\t */\r\n\tprotected _maxReal: number;\r\n\r\n\t/**\r\n\t * Min value within current zoom.\r\n\t */\r\n\tprotected _minZoomed: number;\r\n\r\n\t/**\r\n\t * Max value within current zoom.\r\n\t */\r\n\tprotected _maxZoomed: number\r\n\r\n\t/**\r\n\t * [_step description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _step: number;\r\n\r\n\t/**\r\n\t * [_stepDecimalPlaces description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _stepDecimalPlaces: number = 0;\r\n\tprotected _prevStepDecimalPlaces: number = 0;\r\n\tprotected _adjustLabelPrecision: boolean = true;\r\n\r\n\t/**\r\n\t * [_difference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _difference: number;\r\n\r\n\t/**\r\n\t * Base value for the axis.\r\n\t */\r\n\tprotected _baseValue: number = 0;\r\n\r\n\t/**\r\n\t * [_previousValue description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousValue: number;\r\n\r\n\t/**\r\n\t * [_previousPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousPoint: IPoint;\r\n\r\n\t/**\r\n\t * Adjusted start in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedStart: number = 0;\r\n\r\n\t/**\r\n\t * Adjusted end in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedEnd: number = 1;\r\n\r\n\tprotected _finalMin: number;\r\n\tprotected _finalMax: number;\r\n\r\n\tprotected _extremesChanged: boolean = false;\r\n\r\n\tprotected _deltaMinMax: number = 1;\r\n\r\n\tprotected _dsc: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem as parameter.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tif (!dataItem.axisFill.disabled) {\r\n\t\t\t// rounding in left to solve floating point number\r\n\t\t\tif ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n\t\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, we\r\n\t * don't do it by default.\r\n\t *\r\n\t * In case you use `totalPercent` or `total` in your charts, this must be set\r\n\t * to `true`.\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n\t */\r\n\tpublic calculateTotals: boolean = false;\r\n\r\n\r\n\tprotected _minMaxAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"value\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000);\r\n\t\tthis.setPropertyValue(\"extraMin\", 0);\r\n\t\tthis.setPropertyValue(\"extraMax\", 0);\r\n\t\tthis.setPropertyValue(\"strictMinMax\", false);\r\n\t\tthis.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n\t\tthis.setPropertyValue(\"adjustLabelPrecision\", true);\r\n\t\tthis.setPropertyValue(\"extraTooltipPrecision\", 0);\r\n\t\tthis.keepSelection = false;\r\n\t\tthis.includeRangesInMinMax = false;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ValueAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new ValueAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\t\tthis.clearCache();\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t\tthis._end = 1;\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._start != 0) {\r\n\t\t\t\tthis.dispatchImmediately(\"startchanged\");\r\n\t\t\t}\r\n\t\t\tif (this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"endchanged\");\r\n\r\n\t\t\t}\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._maxZoomed = this._maxDefined;\r\n\t\tthis._minZoomed = this._minDefined;\r\n\r\n\t\tthis._maxAdjusted = this._maxDefined;\r\n\t\tthis._minAdjusted = this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data items of the related Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\t\t// @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n\t\tif (this.calculateTotals) {\r\n\t\t\tlet series: XYSeries = this.series.getIndex(0);\r\n\t\t\tlet startIndex: number = series.startIndex;\r\n\r\n\t\t\tif (series.dataItems.length > 0) {\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tstartIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tlet endIndex: number = series.endIndex;\r\n\t\t\t\tif (endIndex < series.dataItems.length) {\r\n\t\t\t\t\tendIndex++;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\tfor (let i: number = startIndex; i < endIndex; ++i) {\r\n\t\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\t\tconst total: { [index: string]: number } = {};\r\n\t\t\t\t\tconst sum: { [index: string]: number } = {};\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(total[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] = Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] += Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] = value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] += value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, total[key], \"total\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (!$type.isNumber(this._minAdjusted)) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = null;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tthis.calculateZoom();\r\n\r\n\t\tthis.validateAxisElements();\r\n\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.validateBreaks();\r\n\r\n\t\tthis.hideUnusedDataItems();\r\n\r\n\t\tthis.renderer.invalidateLayout();\r\n\t\t// hide too close\r\n\t\t//this.hideTooCloseDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tif ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet min: number = this.positionToValue(this.start);\r\n\t\t\tlet max: number = this.positionToValue(this.end);\r\n\r\n\t\t\tlet differece: number = this.adjustDifference(min, max);\r\n\t\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\r\n\t\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n\t\t\tthis._stepDecimalPlaces = stepDecimalPlaces;\r\n\r\n\t\t\tmin = $math.round(min, stepDecimalPlaces);\r\n\t\t\tmax = $math.round(max, stepDecimalPlaces);\r\n\r\n\t\t\tminMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\t\t\tlet step = minMaxStep.step;\r\n\r\n\t\t\tif (this.syncWithAxis) {\r\n\t\t\t\tlet calculated = this.getCache(min + \"-\" + max);\r\n\t\t\t\tif ($type.isNumber(calculated)) {\r\n\t\t\t\t\tstep = calculated;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = minMaxStep.min;\r\n\t\t\t\tmax = minMaxStep.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._minZoomed != min || this._maxZoomed != max || this._step != step || this._dsc) {\r\n\t\t\t\tthis._dsc = false;\r\n\t\t\t\tthis._minZoomed = min;\r\n\t\t\t\tthis._maxZoomed = max;\r\n\r\n\t\t\t\tthis._step = step;\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fixSmallStep(step: number): number {\r\n\t\tif (1 + step == 1) {\r\n\t\t\tstep *= 2;\r\n\t\t\treturn this.fixSmallStep(step);\r\n\t\t}\r\n\t\treturn step;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\t// first regular items\r\n\t\t\tlet value: number = this.minZoomed - this._step * 2;\r\n\r\n\t\t\tif (!this.logarithmic) {\r\n\t\t\t\tvalue = Math.floor(value / this._step) * this._step;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = Math.floor(this.minZoomed / this._step) * this._step;\r\n\t\t\t\t\tif (value == 0) {\r\n\t\t\t\t\t\tvalue = this.minZoomed;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet maxZoomed = this._maxZoomed + this._step;\r\n\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\r\n\t\t\tif (this._step == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._step = this.fixSmallStep(this._step);\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\tconst precisionChanged = this._prevStepDecimalPlaces != this._stepDecimalPlaces;\r\n\t\t\tthis._prevStepDecimalPlaces = this._stepDecimalPlaces;\r\n\r\n\t\t\twhile (value <= maxZoomed) {\r\n\t\t\t\tlet axisBreak: ValueAxisBreak = <ValueAxisBreak>this.isInBreak(value);\r\n\r\n\t\t\t\tif (!axisBreak) {\r\n\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === value);\r\n\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\tdataItem.axisBreak = undefined;\r\n\r\n\t\t\t\t\tif (dataItem.value != value || precisionChanged) {\r\n\t\t\t\t\t\tdataItem.value = value;\r\n\t\t\t\t\t\tdataItem.text = this.formatLabel(value);\r\n\r\n\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (dataItem.value >= this.min && dataItem.value <= this.max) {\r\n\t\t\t\t\t\t\tif (dataItem.label) {\r\n\t\t\t\t\t\t\t\tif ((this.axisLetter == \"Y\" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == \"X\" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tlet oldValue = value;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));\r\n\r\n\t\t\t\tif (stepPower < 1) {\r\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n\t\t\t\t\tdecCount = Math.min(13, decCount);\r\n\t\t\t\t\t// round value to avoid floating point issues\r\n\t\t\t\t\tvalue = $math.round(value, decCount);\r\n\t\t\t\t\t// ceil causes problems: https://codepen.io/team/amcharts/pen/XWMjZwy?editors=1010\r\n\t\t\t\t\tif (oldValue == value) {\r\n\t\t\t\t\t\tvalue = maxZoomed;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// breaks later\r\n\t\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance) {\r\n\t\t\t\t\t\t\tlet breakValue: number = axisBreak.adjustedMin;\r\n\r\n\t\t\t\t\t\t\twhile (breakValue <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tif (breakValue >= axisBreak.adjustedStartValue && breakValue <= axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === breakValue);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value != breakValue) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.value = breakValue;\r\n\t\t\t\t\t\t\t\t\t\tdataItem.text = this.formatLabel(breakValue);\r\n\t\t\t\t\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreakValue += axisBreak.adjustedStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tlet value: number = dataItem.value;\r\n\t\tlet endValue: number = dataItem.endValue;\r\n\r\n\t\tlet position: number = this.valueToPosition(value);\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet endPosition: number = position;\r\n\t\tlet fillEndPosition: number = this.valueToPosition(value + this._step);\r\n\r\n\t\tif ($type.isNumber(endValue)) {\r\n\t\t\tendPosition = this.valueToPosition(endValue);\r\n\t\t\tfillEndPosition = endPosition;\r\n\t\t}\r\n\r\n\t\t// this point is needed to calculate distance to satisfy minGridDistance\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, position, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[NumberFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\tif (this.adjustLabelPrecision && value != 0) {\r\n\t\t\treturn this.numberFormatter.format(value, undefined, this._stepDecimalPlaces);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.numberFormatter.format(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\tlet baseValue: number = this.baseValue;\r\n\t\tlet position: number = this.valueToPosition(baseValue);\r\n\t\tlet basePoint: IPoint = this.renderer.positionToPoint(position);\r\n\r\n\t\treturn basePoint;\r\n\t}\r\n\r\n\t/**\r\n\t * A base value.\r\n\t *\r\n\t * This is a threshold value that will divide \"positive\" and \"negative\"\r\n\t * value ranges.\r\n\t *\r\n\t * Other scale-related functionality also depend on base value. E.g. stacks,\r\n\t * value-dependent coloring, etc.\r\n\t *\r\n\t * @param value Base value\r\n\t */\r\n\tpublic set baseValue(value: number) {\r\n\t\tthis._baseValue = value;\r\n\t\tthis.invalidateLayout();\r\n\t\tthis.invalidateSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\r\n\t\tlet baseValue = this._baseValue;\r\n\t\tif (this.logarithmic) {\r\n\t\t\tbaseValue = this.min;\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn baseValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"baseValue\", baseValue);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis\r\n\t *\r\n\t * An alias to `valueToPosition()`.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Position\r\n\t */\r\n\tpublic anyToPosition(value: number): number {\r\n\t\treturn this.valueToPosition(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic valueToPoint(value: number): IOrientationPoint {\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: number): IOrientationPoint {\r\n\t\treturn this.valueToPoint(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t// todo: think if possible to take previous value and do not go through all previous breaks\r\n\t\t\tlet min: number = this.min;\r\n\t\t\tlet max: number = this.max;\r\n\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\t\t\t\tlet difference: number = this._difference;\r\n\r\n\t\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\r\n\t\t\t\t\t\t\tif (value < startValue) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: startValue, end: endValue }, { start: min, end: max })) { // todo: check this once and set some flag in axisBreak\r\n\t\t\t\t\t\t\t\tstartValue = Math.max(startValue, min);\r\n\t\t\t\t\t\t\t\tendValue = Math.min(endValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\t\t\t\tif (value > endValue) {\r\n\t\t\t\t\t\t\t\t\tmin += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\t\t\t\telse if (value < startValue) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvalue = startValue + (value - startValue) * breakSize;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tposition = (value - min) / difference;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\t\t\tif (value <= treatZeroAs) {\r\n\t\t\t\t\t\t\tvalue = treatZeroAs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tposition = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//position = $math.round(position, 10);\r\n\r\n\t\t\t\treturn position;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tsuper.invalidateLabels();\r\n\t\tif (this.dataItems) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = undefined;\r\n\t\t\t})\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an relative position to a corresponding value within\r\n\t * axis' scale.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet min: number = this.min;\r\n\t\tlet max: number = this.max;\r\n\r\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet difference: number = max - min; //no need to adjust!\r\n\r\n\t\t\tlet value: number = null;\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// in case we have some axis breaks\r\n\t\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\t\t\tlet breakStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet breakEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n\r\n\t\t\t\t\t\t\tif (breakStartValue > max) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n\r\n\t\t\t\t\t\t\t\tbreakStartValue = $math.max(breakStartValue, min);\r\n\t\t\t\t\t\t\t\tbreakEndValue = $math.min(breakEndValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tdifference -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\r\n\t\t\t\t\t\t\t\t// position to the right of break end\r\n\t\t\t\t\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\t\t\t\t\tmin += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// position to the left of break start\r\n\t\t\t\t\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlet breakPosition: number = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\t\t\t\t\tvalue = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tif (this.logarithmic) {\r\n\t\t\t\t\tvalue = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = position * difference + min;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an X coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param x  X (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic xToValue(x: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Y coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param y  Y (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic yToValue(y: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\tif (this.renderer instanceof AxisRendererY) {\r\n\t\t\treturn 1 - this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\treturn this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates smallest and biggest value for the axis scale.\r\n\t * @ignore\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic getMinMax() {\r\n\r\n\t\tthis.updateGridCount();\r\n\r\n\t\tlet min: number = Number.POSITIVE_INFINITY;\r\n\t\tlet max: number = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t// only if min and max are not set from outside, we go through min and max influencers\r\n\t\tif (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.ignoreMinMax) {\r\n\t\t\t\t\t// check min\r\n\t\t\t\t\tlet seriesMin: number = series.min(this);\r\n\t\t\t\t\tif ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// check max\r\n\t\t\t\t\tlet seriesMax: number = series.max(this);\r\n\r\n\t\t\t\t\tif ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.includeRangesInMinMax) {\r\n\t\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\r\n\t\t\t\t\t\tif (minValue < min || !$type.isNumber(min)) {\r\n\t\t\t\t\t\t\tmin = minValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (maxValue > max || !$type.isNumber(max)) {\r\n\t\t\t\t\t\t\tmax = maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.logarithmic) {\r\n\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\tif (min <= 0) {\r\n\t\t\t\t\tmin = treatZeroAs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthis.raiseCriticalError(new Error(\"Logarithmic value axis can not have values <= 0.\"), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (min == 0 && max == 0) {\r\n\t\t\tmax = 0.9;\r\n\t\t\tmin = -0.9;\r\n\t\t}\r\n\r\n\t\t// if defined from outside\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._minReal = min;\r\n\t\tthis._maxReal = max;\r\n\r\n\t\tif (min == Number.POSITIVE_INFINITY) {\r\n\t\t\tmin = undefined;\r\n\t\t}\r\n\t\tif (max == Number.NEGATIVE_INFINITY) {\r\n\t\t\tmax = undefined;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n\r\n\r\n\t\tmin = this.fixMin(min);\r\n\t\tmax = this.fixMax(max);\r\n\r\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\r\n\t\t\tif (max - min != 0) {\r\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// the number by which we need to raise 10 to get difference\r\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\r\n\r\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t\t\t// reduce this number by 10 times\r\n\t\t\t\tpower = power / 10;\r\n\r\n\t\t\t\tthis._deltaMinMax = power;\r\n\t\t\t}\r\n\t\t\tmin -= this._deltaMinMax;\r\n\t\t\tmax += this._deltaMinMax;\r\n\t\t}\r\n\r\n\t\tmin -= (max - min) * this.extraMin;\r\n\t\tmax += (max - min) * this.extraMax;\r\n\r\n\t\tlet strict = this.strictMinMax;\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tstrict = true;\r\n\t\t}\r\n\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\tdif = max - min;  //new\r\n\r\n\t\t// do it for the second time (importat!)\r\n\t\tminMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\t// return min max if strict\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\t\tmin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = this._minReal;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\t\tmax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmax = this._maxReal;\r\n\t\t\t}\r\n\r\n\t\t\tif (max - min <= 0.00000001) {\r\n\t\t\t\tmin -= this._deltaMinMax;\r\n\t\t\t\tmax += this._deltaMinMax;\r\n\t\t\t}\r\n\r\n\t\t\tmin -= (max - min) * this.extraMin;\r\n\t\t\tmax += (max - min) * this.extraMax;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tthis._step = minMaxStep.step;\r\n\r\n\t\tif (!$type.isNumber(min) && !$type.isNumber(max)) {\r\n\t\t\tthis.start = 0;\r\n\t\t\tthis.end = 1;\r\n\r\n\t\t\tthis.renderer.labels.each((label) => {\r\n\t\t\t\tlabel.dataItem.text = \"\";\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// checking isNumber is good when all series are hidden\r\n\t\tif ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet animation = this._minMaxAnimation;\r\n\r\n\t\t\tif (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tanimation = this.animateMinMax(min, max);\r\n\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n\r\n\t\t\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\t\t//this.validateDataItems();\r\n\t\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\t\tseries.validate();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._minMaxAnimation = animation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\tseries.invalidate();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._minAdjusted = min;\r\n\t\t\t\t\tthis._maxAdjusted = max;\r\n\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._extremesChanged = false;\r\n\t\tthis._difference = this.adjustDifference(min, max);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\t// will fail if 0\r\n\t\tif (gridCount <= 1) {\r\n\t\t\tgridCount = 1;\r\n\t\t}\r\n\r\n\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\tlet initialMin: number = min;\r\n\t\tlet initialMax: number = max;\r\n\r\n\t\t// in case min and max is the same, use max\r\n\t\tif (difference === 0) {\r\n\t\t\tdifference = Math.abs(max);\r\n\t\t}\r\n\r\n\t\t// the number by which we need to raise 10 to get difference\r\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\r\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t// reduce this number by 10 times\r\n\t\tpower = power / 10;\r\n\r\n\t\tlet extra: number = power;\r\n\t\tif (strictMode) {\r\n\t\t\textra = 0;\r\n\t\t}\r\n\r\n\t\tif (!this.logarithmic) {\r\n\r\n\t\t\t// round down min\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin = Math.floor(min / power) * power;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.ceil(max / power) * power;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\r\n\t\t\t}\r\n\r\n\t\t\t// don't let min go below 0 if real min is >= 0\r\n\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\t// don't let max go above 0 if real max is <= 0\r\n\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\r\n\t\t\t\tmin = this.baseValue;\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: think of a better way or to restrict zooming when no series are selected\r\n\t\t\tif (min == Infinity) {\r\n\t\t\t\tmin = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (max == -Infinity) {\r\n\t\t\t\tmax = 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tif (this._minDefined > 0) {\r\n\t\t\t\t\tmin = this._minDefined;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmin = min;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._maxDefined > 0) {\r\n\t\t\t\t\tmax = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n\t\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// repeat diff, exponent and power again with rounded values\r\n\t\t//difference = this.adjustDifference(min, max);\r\n\t\t/*\r\n\r\n\t\t\t\tif(min > initialMin){\r\n\t\t\t\t\tmin = initialMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(max < initialMax){\r\n\t\t\t\t\tmax = initialMax;\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\t\tpower = Math.pow(10, Math.floor(exponent));\r\n\t\tpower = power / 10;\r\n\r\n\t\t// approximate difference between two grid lines\r\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\r\n\r\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n\r\n\t\t// TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n\t\t// the step should divide by  2, 5, and 10.\r\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\r\n\r\n\r\n\t\tif (stepDivisor > 5) {\r\n\t\t\tstepDivisor = 10;\r\n\t\t}\r\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\r\n\t\t\tstepDivisor = 5;\r\n\t\t}\r\n\r\n\t\t// now get real step\r\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n\r\n\t\tif (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n\t\t\tstep = $math.ceil(step, this.maxPrecision);\r\n\t\t}\r\n\r\n\t\tlet decCount: number = 0;\r\n\t\t// in case numbers are smaller than 1\r\n\t\tif (stepPower < 1) {\r\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n\t\t\t// round step\r\n\t\t\tstep = $math.round(step, decCount);\r\n\t\t}\r\n\t\tif (!this.logarithmic) {\r\n\t\t\t// final min and max\r\n\t\t\tlet minCount = Math.floor(min / step);\r\n\r\n\t\t\tmin = $math.round(step * minCount, decCount);\r\n\r\n\t\t\tlet maxCount: number;\r\n\r\n\t\t\tif (!strictMode) {\r\n\t\t\t\tmaxCount = Math.ceil(max / step);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxCount = Math.floor(max / step);\r\n\t\t\t}\r\n\r\n\t\t\tif (maxCount == minCount) {\r\n\t\t\t\tmaxCount++;\r\n\t\t\t}\r\n\r\n\t\t\tmax = $math.round(step * maxCount, decCount);\r\n\r\n\t\t\tif (max < initialMax) {\r\n\t\t\t\tmax = max + step;\r\n\t\t\t}\r\n\r\n\t\t\tif (min > initialMin) {\r\n\t\t\t\tmin = min - step;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * A minimum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Min value\r\n\t */\r\n\tpublic set min(value: number | undefined) {\r\n\t\tif (this._minDefined != value) {\r\n\t\t\tthis._minDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min value\r\n\t */\r\n\tpublic get min(): number | undefined {\r\n\t\tlet min = this._minAdjusted;\r\n\t\tif (!$type.isNumber(min)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Min value\r\n\t */\r\n\tpublic get minDefined(): number {\r\n\t\treturn this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Max value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Man value\r\n\t */\r\n\tpublic get maxDefined(): number {\r\n\t\treturn this._maxDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting minimum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n\t * we asked to expand minimum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMin(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMin\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get extraMin(): number {\r\n\t\treturn this.getPropertyValue(\"extraMin\");\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting maximum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n\t * we asked to expand maximum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMax(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMax\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min multiplier\r\n\t */\r\n\tpublic get extraMax(): number {\r\n\t\treturn this.getPropertyValue(\"extraMax\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Current calculated delta in values between two adjacent grid lines (step).\r\n\t *\r\n\t * This is a read-only value and cannot be used to set actual step.\r\n\t *\r\n\t * @readonly\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n\t * @return [description]\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this._step;\r\n\t}\r\n\r\n\t/**\r\n\t * A maximum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Max value\r\n\t */\r\n\tpublic set max(value: number | undefined) {\r\n\t\tif (this._maxDefined != value) {\r\n\t\t\tthis._maxDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max value\r\n\t */\r\n\tpublic get max(): number | undefined {\r\n\t\tlet max = this._maxAdjusted;\r\n\t\tif (!$type.isNumber(max)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * By default the axis will adjust precision of all numbers to match number\r\n\t * of decimals in all its labels, e.g.: `1.0`, `1.5`, `2.0`.\r\n\t *\r\n\t * To disable set `adjustLabelPrecision` to `false`, to use whatever other\r\n\t * precision or number format settings are set.\r\n\t *\r\n\t * IMPORTANT: This setting will be ignored if your number format uses\r\n\t * modifiers, e.g. `\"#a\"`.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.14\r\n\t * @param  value  Adjust precision\r\n\t */\r\n\tpublic set adjustLabelPrecision(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"adjustLabelPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Adjust precision\r\n\t */\r\n\tpublic get adjustLabelPrecision(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustLabelPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the Series to register itself as the user of this Axis.\r\n\t *\r\n\t * This will also decorate both the Series and Axis with event handlers, used\r\n\t * to redraw on Axis position/zoom change.\r\n\t *\r\n\t * A disposer for those events is returned, so that they can be disposed\r\n\t * together with Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series  Series\r\n\t * @return Disposer for events\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\treturn new MultiDisposer([\r\n\t\t\tsuper.registerSeries(series),\r\n\r\n\t\t\tseries.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n\t\t\tseries.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n\t\t\tthis.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform tasks after Axis zoom.\r\n\t */\r\n\tprotected handleSelectionExtremesChange(): void {\r\n\r\n\t\tlet selectionMin: number;\r\n\t\tlet selectionMax: number;\r\n\r\n\t\tlet allHidden: boolean = true;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.ignoreMinMax && !series.isHidden && !series.outOfRange) {\r\n\r\n\t\t\t\tif (series.visible && !series.isHiding) {\r\n\t\t\t\t\tallHidden = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesSelectionMin: number = series.selectionMin(this);\r\n\t\t\t\tlet seriesSelectionMax: number = series.selectionMax(this);\r\n\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMin)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n\t\t\t\t\t\tselectionMin = seriesSelectionMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check max\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMax)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n\t\t\t\t\t\tselectionMax = seriesSelectionMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.includeRangesInMinMax) {\r\n\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\t\t\t\t\tif (minValue < selectionMin) {\r\n\t\t\t\t\t\tselectionMin = minValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (maxValue > selectionMax) {\r\n\t\t\t\t\t\tselectionMax = maxValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method\r\n\t\t//$iter.each(this.series.iterator(), (series) => {\r\n\t\t//\tif (!series.appeared) {\r\n\t\t//\t\tallHidden = true;\r\n\t\t//\t}\r\n\t\t//})\r\n\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMin = this.min;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMin = this._minReal;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMax = this.max;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMax = this._maxReal;\r\n\t\t}\r\n\r\n\t\tif (selectionMin == selectionMax) {\r\n\r\n\t\t\tselectionMin -= this._deltaMinMax;\r\n\t\t\tselectionMax += this._deltaMinMax;\r\n\r\n\t\t\tlet minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);\r\n\t\t\tselectionMin = minMaxStep2.min;\r\n\t\t\tselectionMax = minMaxStep2.max;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tselectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n\t\tselectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n\r\n\t\tselectionMin = $math.fitToRange(selectionMin, this.min, this.max);\r\n\t\tselectionMax = $math.fitToRange(selectionMax, this.min, this.max);\r\n\r\n\t\t// do it for the second time !important\r\n\t\tdif = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tminMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tselectionMin = $math.max(selectionMin, this._minDefined);\r\n\t\t\tselectionMax = $math.min(selectionMax, this._maxDefined);\r\n\t\t}\r\n\t\tlet step = minMaxStep.step;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tminMaxStep = this.syncAxes(selectionMin, selectionMax, step)\r\n\t\t\tselectionMin = minMaxStep.min;\r\n\t\t\tselectionMax = minMaxStep.max;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\tstep = minMaxStep.step;\r\n\r\n\t\t// needed because of grouping\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\r\n\t\tlet start: number = this.valueToPosition(selectionMin);\r\n\t\tlet end: number = this.valueToPosition(selectionMax);\r\n\r\n\t\t// in case all series are hidden or hiding, full zoomout\r\n\t\tif (allHidden && !this.syncWithAxis) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t}\r\n\r\n\t\tlet declination = 0;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tdeclination = 5;\r\n\t\t\tthis.setCache(selectionMin + \"-\" + selectionMax, step);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._step != step || this._minZoomed != selectionMin || this._maxZoomed != selectionMax) {\r\n\t\t\t\tthis._dsc = true;\r\n\t\t\t}\r\n\t\t\tthis._step = step;\r\n\t\t\tthis._minZoomed = selectionMin;\r\n\t\t\tthis._maxZoomed = selectionMax;\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tthis.zoom({ start: start, end: end }, false, false, declination);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether to blindly use exact `min` and `max` values set by user\r\n\t * when generating Axis scale.\r\n\t *\r\n\t * If not set, the Axis might slightly adjust those values to accomodate a\r\n\t * better looking grid.\r\n\t *\r\n\t * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`\r\n\t * will result in fixing the scale of the axis to actual lowest and highest\r\n\t * values in the series within currently selected scope.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use exact values?\r\n\t */\r\n\tpublic set strictMinMax(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"strictMinMax\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use exact values?\r\n\t */\r\n\tpublic get strictMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"strictMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this axis should use a logarithmic scale.\r\n\t *\r\n\t * Please note that logarithmic axis can **only** accommodate values bigger\r\n\t * than zero.\r\n\t *\r\n\t * Having zero or negative values will result in error and failure of the\r\n\t * whole chart.\r\n\t *\r\n\t * @param value Logarithmic scale?\r\n\t */\r\n\tpublic set logarithmic(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"logarithmic\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Logarithmic scale?\r\n\t */\r\n\tpublic get logarithmic(): boolean {\r\n\t\treturn this.getPropertyValue(\"logarithmic\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if a current selection (zoom) should be kept across data updates.\r\n\t *\r\n\t * If your axis is zoomed while chart's data is updated, the axis will try\r\n\t * to retain the same start and end values.\r\n\t *\r\n\t * You can also use this to initially pre-zoom axis:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"keepSelection\": true,\r\n\t *     \"start\": 0.5,\r\n\t *     \"end\": 0.7\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will start the chart zoomed from the middle of the actual scope\r\n\t * to 70%.\r\n\t *\r\n\t * @since 4.1.1\r\n\t * @default false\r\n\t * @param  value  Preseve zoom after data update?\r\n\t */\r\n\tpublic set keepSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"keepSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Preseve zoom after data update?\r\n\t */\r\n\tpublic get keepSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"keepSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, values of axis ranges will be included when calculating\r\n\t * range of values / scale of the [[ValueAxis]].\r\n\t *\r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Include ranges?\r\n\t */\r\n\tpublic set includeRangesInMinMax(value: boolean) {\r\n\t\tthis.setPropertyValue(\"includeRangesInMinMax\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Include ranges?\r\n\t */\r\n\tpublic get includeRangesInMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"includeRangesInMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of decimals to allow when placing grid lines and labels\r\n\t * on axis.\r\n\t *\r\n\t * Set it to `0` (zero) to force integer-only axis labels.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return max precision\r\n\t */\r\n\tpublic get maxPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"maxPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * This setting allows using bigger precision for numbers displayed in axis\r\n\t * tooltip.\r\n\t *\r\n\t * Please note that this setting indicates additional decimal places to\r\n\t * automatically-calculated axis number precision.\r\n\t *\r\n\t * So if your axis displays numbers like 0.1, 0.2, etc. (one decimal place),\r\n\t * and you set `extraTooltipPrecision = 1`, tooltips will display numbers\r\n\t * like 0.12, 0.25, etc. (two decimal places).\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.8.3\r\n\t * @param  value  Extra decimals\r\n\t */\r\n\tpublic set extraTooltipPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraTooltipPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Extra decimals\r\n\t */\r\n\tpublic get extraTooltipPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"extraTooltipPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tthis._extremesChanged = true;\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tlet mw = 0;\r\n\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tif (dataItem.label && dataItem.label.pixelWidth > mw) {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  ?\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  ?\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueX\";\r\n\t\t}\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  Stack ID\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start     [description]\r\n\t * @param end       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: number, end: number, location?: number): string {\r\n\t\tlet startPosition: number = this.valueToPosition(start);\r\n\t\tlet endPosition: number = this.valueToPosition(end);\r\n\r\n\t\treturn this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces + this.extraTooltipPrecision);\r\n\t\tlet valueStr = this.tooltip.numberFormatter.format(value);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean): void {\r\n\t\tlet start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\tlet end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A smallest value in axis scale within current zoom.\r\n\t *\r\n\t * @return Min zoom value\r\n\t */\r\n\tpublic get minZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.max(this.min, this._minZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._minZoomed\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A biggest value in axis scale within current zoom.\r\n\t * @return [description]\r\n\t */\r\n\tpublic get maxZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.min(this.max, this._maxZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._maxZoomed;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t// process breaks\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t// break difference\r\n\t\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif * axisBreak.breakSize) * this._gridCount / (this.max - this.min);\r\n\r\n\t\t\t\t// calculate min, max and step for axis break\r\n\t\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);\r\n\r\n\t\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet value: number = this.positionToValue(position);\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific value\r\n\t *\r\n\t * @param value Value\r\n\t */\r\n\tpublic showTooltipAt(value: number) {\r\n\t\tthis.showTooltipAtPosition(this.valueToPosition(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.min = source.min;\r\n\t\tthis.max = source.max;\r\n\t\tthis.calculateTotals = source.calculateTotals;\r\n\t\tthis._baseValue = source.baseValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Enables syncing of grid with another axis.\r\n\t *\r\n\t * To enable, set to a reference of the other `ValueAxis`. This axis will try\r\n\t * to maintain its scale in such way that its grid matches target axis grid.\r\n\t *\r\n\t * IMPORTANT #1: At this stage it's an experimental feature. Use it at your\r\n\t * own risk, as it may not work in 100% of the scenarios.\r\n\t *\r\n\t * IMPORTANT #2: `syncWithAxis` is not compatible with `strictMinMax` and\r\n\t * `sequencedInterpolation` settings.\r\n\t * \r\n\t * IMPORTANT #3: `syncWithAxis` is not compatible with scrollbars. Make sure\r\n\t * you do not add a scrollbar in the same direction as synced axes. For\r\n\t * example, if you have vertical synced axes, do not add `scrollbarY` on\r\n\t * your chart. It will create anomalies when used.\r\n\t *\r\n\t * IMPORTANT #4: `syncWithAxis` is not compatible with `XYCursor` if it has\r\n\t * its `behavior` set to either `zoomY` or `zoomXY`.\r\n\t *\r\n\t * @since 4.8.1\r\n\t * @param  axis  Target axis\r\n\t */\r\n\tpublic set syncWithAxis(axis: ValueAxis) {\r\n\t\tif (this.setPropertyValue(\"syncWithAxis\", axis, true)) {\r\n\t\t\tif (axis) {\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"extremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"startendchanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis.events.on(\"shown\", this.handleSelectionExtremesChange, this, false);\r\n\t\t\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\t\t\tthis.clearCache();\r\n\t\t\t\t\tthis._disposers.push(registry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t}))\r\n\t\t\t\t}, this, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target axis\r\n\t */\r\n\tpublic get syncWithAxis(): ValueAxis {\r\n\t\treturn this.getPropertyValue(\"syncWithAxis\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set, zero values will be treated as this value.\r\n\t *\r\n\t * It is useful if you need to use data with zero-values on a logarithmic\r\n\t * axis scale.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Zero replacement value\r\n\t */\r\n\tpublic set treatZeroAs(value: number) {\r\n\t\tthis.setPropertyValue(\"treatZeroAs\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zero replacement value\r\n\t */\r\n\tpublic get treatZeroAs(): number {\r\n\t\treturn this.getPropertyValue(\"treatZeroAs\");\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs with a target axis.\r\n\t *\r\n\t * @param  min  Min\r\n\t * @param  max  Max\r\n\t * @param  step Step\r\n\t */\r\n\tprotected syncAxes(min: number, max: number, step: number) {\r\n\t\tlet axis = this.syncWithAxis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tif (!$type.isNumber(min)) {\r\n\t\t\t\tmin = this.min;\r\n\t\t\t}\r\n\t\t\tif (!$type.isNumber(max)) {\r\n\t\t\t\tmax = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(step)) {\r\n\t\t\t\tstep = this._step;\r\n\t\t\t}\r\n\r\n\t\t\tlet count: number = Math.round((axis.maxZoomed - axis.minZoomed) / axis.step);\r\n\t\t\tlet currentCount = Math.round((max - min) / step);\r\n\r\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n\t\t\t\tlet synced = false;\r\n\t\t\t\tlet c = 0\r\n\t\t\t\tlet diff = (max - min) * 0.01;\r\n\t\t\t\tlet omin = min;\r\n\t\t\t\tlet omax = max;\r\n\t\t\t\tlet ostep = step;\r\n\r\n\t\t\t\twhile (synced != true) {\r\n\t\t\t\t\tsynced = this.checkSync(omin, omax, ostep, count);\r\n\t\t\t\t\tc++;\r\n\t\t\t\t\tif (c > 1000) {\r\n\t\t\t\t\t\tsynced = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!synced) {\r\n\t\t\t\t\t\t//omin = min - diff * c;\r\n\r\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\r\n\t\t\t\t\t\t\tomin = min - diff * c;\r\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\r\n\t\t\t\t\t\t\t\tomin = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tomax = max + diff * c;\r\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\r\n\t\t\t\t\t\t\t\tomax = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet minMaxStep = this.adjustMinMax(omin, omax, omax - omin, this._gridCount, true);\r\n\t\t\t\t\t\tomin = minMaxStep.min;\r\n\t\t\t\t\t\tomax = minMaxStep.max;\r\n\t\t\t\t\t\tostep = minMaxStep.step;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmin = omin;\r\n\t\t\t\t\t\tmax = omax;\r\n\t\t\t\t\t\tstep = ostep;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if axis needs to be resunced with some other axis.\r\n\t */\r\n\tprotected checkSync(min: number, max: number, step: number, count: number): boolean {\r\n\t\tlet currentCount = (max - min) / step;\r\n\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.syncWithAxis) && $type.isString(config.syncWithAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.syncWithAxis)) {\r\n\t\t\t\t\tconfig.syncWithAxis = this.map.getKey(config.syncWithAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[ValueAxis] No axis with id \\\"\" + config.syncWithAxis + \"\\\" found for `syncWithAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { VerticalCenter } from \"../../core/defs/VerticalCenter\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererXAdapters extends IAxisRendererAdapters, IAxisRendererXProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererXProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererXAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererXEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisRendererX\";\r\n\r\n\t\tthis.minGridDistance = 120;\r\n\r\n\t\tthis.opposite = false;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.width = percent(100);\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"vertical\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.x = axis.pixelX;\r\n\t\t\tgridContainer.width = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\t// can not do this in init, as axis is set later\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tif (!(axis.width instanceof Percent)) {\r\n\t\t\t\taxis.width = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\t// @todo Is thi sneeded?\r\n\t\t\t$utils.used(this.line);\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.rotation = 0;\r\n\t\t\ttitle.align = \"center\";\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t\tthis.toBack();\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet bigNum: number = 1000;\r\n\t\t\tlet bbx: number = this.line.pixelX;\r\n\t\t\tlet bby: number = this.line.pixelY;\r\n\t\t\tlet bbw: number = this.axisLength;\r\n\r\n\t\t\tlet bbh: number = bigNum;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\telse {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet deltaY = 0;\r\n\t\tlet verticalCenter: VerticalCenter;\r\n\t\tlet maxHeight = this.gridContainer.maxHeight;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\tif (label.valign == \"bottom\") {\r\n\t\t\t\t\tdeltaY = maxHeight;\r\n\t\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y = deltaY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\tif (label.valign == \"top\") {\r\n\t\t\t\t\tdeltaY = -maxHeight;\r\n\t\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = -maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y += deltaY;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.verticalCenter = verticalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.x, point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet x1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet x2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet w: number = Math.abs(x2 - x1);\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet x: number = Math.min(x1, x2);\r\n\t\tlet y: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet y1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet y2: number = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n\r\n\t\tstartPoint.x = $math.fitToRange(startPoint.x, -1, this.axisLength + 1);\r\n\t\tendPoint.x = $math.fitToRange(endPoint.x, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tstartLine.y = y1;\r\n\t\tstartLine.width = 0;\r\n\t\tstartLine.height = y2;\r\n\r\n\t\tendLine.y = y1;\r\n\t\tendLine.width = 0;\r\n\t\tendLine.height = y2;\r\n\r\n\t\tfillShape.height = y2;\r\n\t\tfillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n\t\tfillShape.y = y1;\r\n\t\tfillShape.x = startPoint.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet w: number = this.axisLength;\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tlet x: number = axis.basePoint.x;\r\n\t\tif (x < -0.2 || x > w + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(false, true, false, true);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet inversedPosition = value;\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet x = axis.pixelX;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tx = $utils.spritePointToSprite({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif(relativePositionSprite){\r\n\t\t\t\tlet relativeX = x / relativePositionSprite.innerWidth;\r\n\t\t\t\tlet relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;\r\n\r\n\t\t\t\treturn (inversedPosition - relativeX) / relativeWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * HeatLegend module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * Minimum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxValue?: number;\r\n\r\n\r\n\t/**\r\n\t * Maximum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxColor?: Color;\r\n\r\n\t/**\r\n\t * Number of markers (steps)\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmarkerCount?: number;\r\n\r\n\r\n\t/**\r\n\t * Orientation\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatLegend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatLegendAdapters extends IContainerAdapters, IHeatLegendProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class HeatLegend extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IHeatLegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IHeatLegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IHeatLegendEvents;\r\n\r\n\t/**\r\n\t * List of heat legend markers (color step rectangles).\r\n\t */\r\n\tpublic markers: ListTemplate<RoundedRectangle>;\r\n\r\n\t/**\r\n\t * Container which holds markers\r\n\t */\r\n\tpublic markerContainer: Container;\r\n\r\n\t/**\r\n\t * Value axis of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _valueAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * Series of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _series: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatLegend\";\r\n\r\n\t\tthis.markerContainer = this.createChild(Container);\r\n\t\tthis.markerContainer.shouldClone = false;\r\n\r\n\t\tthis.markerCount = 1;\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: RoundedRectangle = new RoundedRectangle();\r\n\t\tmarker.minHeight = 20;\r\n\t\tmarker.minWidth = 20;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.fillOpacity = 1;\r\n\t\tmarker.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tthis.markerContainer.minHeight = 20;\r\n\t\tthis.markerContainer.minWidth = 20;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\tthis.markers = new ListTemplate<RoundedRectangle>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tprotected getMinFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet minValue;\r\n\t\t\t$iter.eachContinue(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tminValue = heatRule.min;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getMaxFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet maxValue;\r\n\t\t\t$iter.each(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tmaxValue = heatRule.max;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.valueAxis.renderer.inversed = this.reverseOrder;\r\n\r\n\t\tlet series = this.series;\r\n\r\n\t\tlet minColor = this.minColor;\r\n\t\tlet maxColor = this.maxColor;\r\n\r\n\t\tif (!$type.hasValue(minColor)) {\r\n\t\t\tminColor = toColor(this.getMinFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (series) {\r\n\t\t\tlet seriesFill = series.fill;\r\n\t\t\tif (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n\t\t\t\tminColor = seriesFill;\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n\t\t\t\tmaxColor = seriesFill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tlet minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(minOpacity)) {\r\n\t\t\tminOpacity = 1;\r\n\t\t}\r\n\t\tlet maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(maxOpacity)) {\r\n\t\t\tmaxOpacity = 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(minStrokeOpacity)) {\r\n\t\t\tminStrokeOpacity = 1;\r\n\t\t}\r\n\t\tlet maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(maxStrokeOpacity)) {\r\n\t\t\tmaxStrokeOpacity = 1;\r\n\t\t}\r\n\r\n\t\tlet minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n\t\tlet maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n\r\n\r\n\t\t//if (series) {\r\n\t\tfor (let i = 0; i < this.markerCount; i++) {\r\n\t\t\tlet marker = this.markers.getIndex(i);\r\n\r\n\t\t\tif (!marker) {\r\n\t\t\t\tmarker = this.markers.create();\r\n\t\t\t\tmarker.parent = this.markerContainer;\r\n\t\t\t\tmarker.height = percent(100);\r\n\t\t\t\tmarker.width = percent(100);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.markerCount == 1) {\r\n\t\t\t\tlet gradient = new LinearGradient();\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tgradient.rotation = -90;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmarker.fill = gradient;\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet strokeGradient = new LinearGradient();\r\n\t\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\tstrokeGradient.rotation = -90;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmarker.stroke = strokeGradient;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet c = i;\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tc = this.markerCount - i - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, c / this.markerCount));\r\n\t\t\t\tmarker.fill = color;\r\n\r\n\t\t\t\tlet opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;\r\n\t\t\t\tmarker.fillOpacity = opacity;\r\n\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet color = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, c / this.markerCount));\r\n\t\t\t\t\tmarker.stroke = color;\r\n\r\n\t\t\t\t\tlet opacity = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;\r\n\t\t\t\t\tmarker.strokeOpacity = opacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet renderer = this.valueAxis.renderer;\r\n\t\tif (this.markerCount > 1) {\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\trenderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.valueAxis.invalidate();\r\n\r\n\t\tfor (let i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n\t\t\tthis.markers.getIndex(i).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maxColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\treturn this.getPropertyValue(\"maxColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set markerCount(value: number) {\r\n\t\tthis.setPropertyValue(\"markerCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of color squares (markers).\r\n\t * @return {number}\r\n\t */\r\n\tpublic get markerCount(): number {\r\n\t\treturn this.getPropertyValue(\"markerCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis.setPropertyValue(\"minValue\", value);\r\n\t\tthis.valueAxis.min = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minimum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis.setPropertyValue(\"maxValue\", value);\r\n\t\tthis.valueAxis.max = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\treturn this.getPropertyValue(\"maxValue\");\r\n\t}\r\n\r\n\t/**\r\n\t* Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n\t*\r\n\t* @param {\"horizontal\" | \"vertical\"}\r\n\t*/\r\n\tpublic set orientation(value: \"horizontal\" | \"vertical\") {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet markerContainer = this.markerContainer;\r\n\t\tlet valueAxis = this.valueAxis;\r\n\r\n\t\t// HORIZONTAL\r\n\t\tif (value == \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.width)) {\r\n\t\t\t\tthis.width = 200;\r\n\t\t\t}\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tvalueAxis.width = percent(100);\r\n\t\t\tvalueAxis.height = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"vertical\";\r\n\r\n\t\t\tthis.layout = \"vertical\";\r\n\t\t\tmarkerContainer.width = percent(100);\r\n\t\t\tmarkerContainer.height = undefined;\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererX();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// VERTICAL\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.height)) {\r\n\t\t\t\tthis.height = 200;\r\n\t\t\t}\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.layout = \"horizontal\";\r\n\t\t\tmarkerContainer.width = undefined;\r\n\t\t\tmarkerContainer.height = percent(100);\r\n\t\t\tvalueAxis.height = percent(100);\r\n\t\t\tvalueAxis.width = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererY();\r\n\t\t\t}\r\n\t\t\tvalueAxis.renderer.inside = true;\r\n\t\t\tvalueAxis.renderer.labels.template.inside = true;\r\n\r\n\t\t\tthis.markerContainer.reverseOrder = true;\r\n\t\t}\r\n\r\n\t\tlet renderer = valueAxis.renderer;\r\n\t\trenderer.grid.template.disabled = true;\r\n\t\trenderer.axisFills.template.disabled = true;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t\trenderer.labels.template.padding(2, 3, 2, 3);\r\n\r\n\t\trenderer.minHeight = undefined;\r\n\t\trenderer.minWidth = undefined;\r\n\r\n\t\tthis.markerContainer.layout = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns orientation value.\r\n\t *\r\n\t * @return {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\tpublic get orientation(): \"horizontal\" | \"vertical\" {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n\t * @param {ValueAxis}\r\n\t */\r\n\tpublic set valueAxis(valueAxis: ValueAxis) {\r\n\r\n\t\tthis._valueAxis = valueAxis;\r\n\r\n\t\tvalueAxis.parent = this;\r\n\t\tvalueAxis.strictMinMax = true;\r\n\t\tthis.orientation = this.orientation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns valueAxis value.\r\n\t * @return {ValueAxis}\r\n\t */\r\n\tpublic get valueAxis(): ValueAxis {\r\n\t\tif (!this._valueAxis) {\r\n\t\t\tthis.valueAxis = this.createChild(ValueAxis);\r\n\t\t\tthis.valueAxis.shouldClone = false;\r\n\t\t}\r\n\t\treturn this._valueAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n\t * @param series\r\n\t */\r\n\tset series(series: Series) {\r\n\t\tthis._series = series;\r\n\r\n\t\tlet dataField = \"value\";\r\n\r\n\t\ttry {\r\n\t\t\tlet dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n\t\t\tif (dataFieldDefined) {\r\n\t\t\t\tdataField = dataFieldDefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\r\n\t\tseries.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\t\t}, undefined, false);\r\n\r\n\t\tseries.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n\t\tseries.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns series value.\r\n\t * @return {Series}\r\n\t */\r\n\tget series(): Series {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates min/max of value axis.\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMinMax(min: number, max: number) {\r\n\t\tlet valueAxis = this.valueAxis;\r\n\t\tif (!$type.isNumber(this.minValue)) {\r\n\t\t\tvalueAxis.min = min;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.maxValue)) {\r\n\t\t\tvalueAxis.max = max;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n\t\t\t\tif ($type.isString(config.series)) {\r\n\t\t\t\t\tif (this.map.hasKey(config.series)) {\r\n\t\t\t\t\t\tconfig.series = this.map.getKey(config.series);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet seriesId = config.series;\r\n\t\t\t\t\t\tconst disposer = this.map.events.on(\"insertKey\", function(ev) {\r\n\t\t\t\t\t\t\tif (ev.key == seriesId) {\r\n\t\t\t\t\t\t\t\tthis.series = ev.newValue;\r\n\t\t\t\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t\tdelete config.series;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n","/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n\tlogarithmic?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bullets: Dictionary<string, Sprite>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t */\r\n\tpublic get bullets(): Dictionary<string, Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new Dictionary<string, Sprite>();\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._bullets));\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.bullets.clear();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t */\r\n\tname?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t */\r\n\titemReaderText: string\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t */\r\n\tprotected _bullets: ListTemplate<Sprite>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/**\r\n\t * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n\t */\r\n\tprotected _itemReaderTextChanged: boolean = false;\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * Most of the series use absolute values. However sometimes various\r\n\t * calculated percent values are need, e.g. item's percent representation\r\n\t * across all values in series, etc.\r\n\t *\r\n\t * It's a resource-intensive operation, so it is disabled by default.\r\n\t *\r\n\t * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n\t * or creating 100% stacks, this setting needs to be set to `true`.\r\n\t *\r\n\t * NOTE: `PieChart`, which relies on slice percentages, has this\r\n\t * automatically set to `true`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * When `calculatePercent` is enabled and data item's percent value is\r\n\t * calculated, last item's real value is used instead of its working value.\r\n\t *\r\n\t * This is done for the animations when last item in series (e.g. slice in\r\n\t * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n\t * calculated percent would always be 100%).\r\n\t *\r\n\t * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n\t * hack by setting `usePercentHack` to `false`.\r\n\t *\r\n\t * @since 4.9.13\r\n\t * @default true\r\n\t */\r\n\tpublic usePercentHack: boolean = true;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from\r\n\t * chart's `series` list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * When chart/series' data is processed, all kinds of derivative values are\r\n\t * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n\t * time-consuming operation, especially prominent in data-heavy charts.\r\n\t *\r\n\t * If your chart does not need those values, and you have a lot of data,\r\n\t * setting this to `true` might give a dramatic increase in initial chart\r\n\t * load speed.\r\n\t *\r\n\t * Please note, regular column and line series usage scenarios do not\r\n\t * require derivative values. Those come into play only when you do advanced\r\n\t * functionality like coloring segments of charts in different colors\r\n\t * depending on change between open and close values, have stacked series, or\r\n\t * display any of the derived values, like percent, in tooltips or bullets.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic simplifiedProcessing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Series) {\r\n\t\t\tthrow new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n\t\t}\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * We need this here so that class names can be applied to bullets container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName && this.bulletsContainer) {\r\n\t\t\tthis.bulletsContainer.className = this.className + \"-bullets\";\r\n\t\t\tthis.bulletsContainer.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param bullet  Sprite\r\n\t */\r\n\tpublic positionBullet(bullet: Sprite): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Sprite>[\"inserted\"]) {\r\n\t\tlet bullet: Sprite = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tthis.events.once(\"datavalidated\", (ev) => {\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tbullet.focusable = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Sprite>[\"removed\"]) {\r\n\t\tlet bullet: Sprite = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tif ($object.hasKey(dataItem.values, key)) {\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\t//if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t//startIndex++;\r\n\t\t//}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getAbsoluteFirstValue(key: string): number {\r\n\t\tfor (let i = 0; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tif (!this.simplifiedProcessing) {\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tlet count: { [index: string]: number } = {};\r\n\t\t\tlet sum: { [index: string]: number } = {};\r\n\t\t\tlet absoluteSum: { [index: string]: number } = {};\r\n\t\t\tlet low: { [index: string]: number } = {};\r\n\t\t\tlet high: { [index: string]: number } = {};\r\n\t\t\tlet open: { [index: string]: number } = {};\r\n\t\t\tlet close: { [index: string]: number } = {};\r\n\t\t\tlet previous: { [index: string]: number } = {};\r\n\t\t\tlet first: { [index: string]: number } = {};\r\n\t\t\tlet absoluteFirst: { [index: string]: number } = {};\r\n\r\n\t\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\t\tlet startIndex: number = $math.max(0, this.startIndex);\r\n\t\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\t\tlet endIndex: number = $math.min(this.endIndex, this.dataItems.length);\r\n\r\n\t\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\t\tstartIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\t\tendIndex = this.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// absolute sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteSum[key])) {\r\n\t\t\t\t\t\t\tabsoluteSum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tabsoluteSum[key] += Math.abs(value);\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteFirst[key])) {\r\n\t\t\t\t\t\t\tabsoluteFirst[key] = this.getAbsoluteFirstValue(key);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// change\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]), \"startChange\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]) / absoluteFirst[key] * 100, \"startChangePercent\");\r\n\r\n\t\t\t\t\t\t// previous change\r\n\t\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t\t// previous change percent\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.calculatePercent) {\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\tlet ksum: number = absoluteSum[key];\r\n\r\n\t\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tif (ksum > 0) {\r\n\t\t\t\t\t\t\t\tif (this.usePercentHack) {\r\n\t\t\t\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 0, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t\t// so we do startIndex - 1\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t\t// change percent\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, absoluteSum[key], \"absoluteSum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.filters.clear();\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tlet bulletsContainer = this.bulletsContainer;\r\n\t\tbulletsContainer.fill = this.fill;\r\n\t\tbulletsContainer.stroke = this.stroke;\r\n\t\tbulletsContainer.x = this.pixelX;\r\n\t\tbulletsContainer.y = this.pixelY;\r\n\r\n\t\tif (this.bulletsContainer.children.length > 0) {\r\n\t\t\tif (this._showBullets) {\r\n\r\n\t\t\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.children.each((bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tlet x = 0;\r\n\t\t\tlet y = 0;\r\n\t\t\tlet w = this.topParent.maxWidth;\r\n\t\t\tlet h = this.topParent.maxHeight;\r\n\t\t\tlet rect = { x: x, y: y, width: w, height: h };\r\n\r\n\t\t\tthis.tooltip.setBounds(rect);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Sprite): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t}\r\n\t\t\tthis.bullets.each((bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Sprite = <Sprite>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n\t\t\t\t\tif (!bullet) {\r\n\r\n\t\t\t\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\t\t\t\tif (disabledField && dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = false;\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = false;\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = true;\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbullet.shouldClone = false;\r\n\t\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t\tif (!this.visible || this.isHiding) {\r\n\t\t\t\t\t\t\tbullet.hide(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet readerText = this.itemReaderText;\r\n\r\n\t\t\t\t\t\tif (bullet instanceof Bullet) {\r\n\t\t\t\t\t\t\tif (!readerText) {\r\n\t\t\t\t\t\t\t\treaderText = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t\taxisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axis  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * IMPORTANT: This setting will work only when Series' base axis\r\n\t * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n\t * setting will be ignored, because it would be a huge overhead to measure\r\n\t * distance between each and every bullet.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Sprite]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Sprite>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value);\r\n\r\n\t\tlet legendDataItem = this.legendDataItem;\r\n\t\tif (legendDataItem) {\r\n\t\t\tlegendDataItem.component.invalidate();\r\n\t\t\tlegendDataItem.component.invalidateRawData();\r\n\t\t}\r\n\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t\tthis._itemReaderTextChanged = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn readerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"itemReaderText\", readerText);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif ((dataItem && !dataItem.isDisposed())|| notRange) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tthis.usePercentHack = source.usePercentHack;\r\n\t\tthis.simplifiedProcessing = source.simplifiedProcessing;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tif (this._chart && this._chart.modal) {\r\n\t\t\tthis._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n\t\t\tthis._chart.modal.closable = false;\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis._chart.modal.open();\r\n\t\t\t}\r\n\t\t\tthis._chart.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of heat rules to apply to series' elements based on the value\r\n\t * of the data item.\r\n\t *\r\n\t * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n\t * be applied to child objects of series, like columns, bullets, etc.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t * ```Javacript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t *```JSON\r\n\t *{\r\n\t *  // ...\r\n\t *  \"series\": [{\r\n\t *    \"type\": \"ColumnSeries\",\r\n\t *    \"heatRules\": [{\r\n\t *      \"target\": \"columns.template\",\r\n\t *      \"property\": \"fill\",\r\n\t *      \"min\": \"#F5DBCB\",\r\n\t *      \"max\": \"#ED7B84\",\r\n\t *      \"dataField\": \"valueY\"\r\n\t *    }]\r\n\t *  }]\r\n\t *}\r\n\t *```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n\t * @return  Heat rules\r\n\t */\r\n\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = dataItem.getActualWorkingValue(dataField);\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent: number;\r\n\t\t\t\t\t\t\t\t\tif (heatRule.logarithmic) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (workingValue - minValue) / (maxValue - minValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tconst maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n\t\t\t\t\t\t\t\tif (maybeIndex) {\r\n\t\t\t\t\t\t\t\t\tif (target[maybeIndex[1]] instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\t/*\r\n\t\tprotected getVisibility(): boolean {\r\n\t\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\t\tif (hidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn super.getVisibility();\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * A set of patterns to use for fills, like Series, Slices, etc.\r\n\t *\r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\tthis._usesData = false;\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series, false));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<Series>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(series);\r\n\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\tdataUser.invalidateDataItems();\r\n\t\t})\r\n\r\n\t\tif (series.autoDispose) {\r\n\t\t\tseries.dispose();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseries.parent = undefined;\r\n\t\t\tseries.bulletsContainer.parent = undefined;\r\n\t\t}\r\n\t\t//this.feedLegend();\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet dataItems = this.legend.dataItems;\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem && dataItem.dataContext == series) {\r\n\t\t\t\t\tlegend.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = legend.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet di = legend.data[i];\r\n\t\t\t\tif (di && di == series) {\r\n\t\t\t\t\t$array.remove(legend.data, di);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tif (series.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\r\n\r\n\t\tthis.handleSeriesAdded2(series);\r\n\t\tthis.handleLegendSeriesAdded(series);\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:Series){\r\n\t\tif (!series.hiddenInLegend) {\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.addData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2(series: Series) {\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._disposers.push(\r\n\t\t\t\t// on exit only as data is usually passed after push\r\n\t\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\tif (!series.data || series.data.length == 0) {\r\n\t\t\t\t\t\tseries.data = this.data;\r\n\t\t\t\t\t\tif (series.showOnInit) {\r\n\t\t\t\t\t\t\tseries.reinit()\r\n\t\t\t\t\t\t\tseries.setPropertyValue(\"showOnInit\", false);\r\n\t\t\t\t\t\t\tseries.showOnInit = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!series.isDisposed()) {\r\n\t\t\t\t\t\t\tseries.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\t\t\t\tif (series.data == this.data) {\r\n\t\t\t\t\t\t\t\t\t(<any>series)._data = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(series);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tsuper.appear();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.showOnInit && series.inited) {\r\n\t\t\t\tseries.appear();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","/**\r\n * Map series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../series/Series\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapObject } from \"./MapObject\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ListTemplate } from \"../../core/utils/List\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * South-most latitude.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * North-most latitude.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * East-most longitude.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * West-most longitude.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapSeries;\r\n\r\n\t/**\r\n\t * Shortcut to either [[MapLine]], [[MapImage]], or [[MapPolygon]].\r\n\t */\r\n\tpublic mapObject: MapObject;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeriesDataItem\";\r\n\t\tthis.values.value = {};\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the data item.\r\n\t *\r\n\t * Value may be used in heat-map calculations.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * zoom level itself or use object's `zoomLevel` if set.\r\n\t *\r\n\t * @param value  Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.setProperty(\"zoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.properties[\"zoomLevel\"];\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * center position itself or use object's `zoomGeoPoint` if set.\r\n\t *\r\n\t * @param value  Zoom geo point\r\n\t */\r\n\tpublic set zoomGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setProperty(\"zoomGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom geo point\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\treturn this.properties[\"zoomGeoPoint\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet geometry = this.getFeature().geometry;\r\n\t\tif (geometry) {\r\n\r\n\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\tlet west = bounds[0][0];\r\n\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\tlet north = bounds[1][1];\r\n\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\tlet changed = false;\r\n\t\t\tif (north != this.north) {\r\n\t\t\t\tthis._north = $math.round(north, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (south != this.south) {\r\n\t\t\t\tthis._south = $math.round(south, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (east != this.east) {\r\n\t\t\t\tthis._east = $math.round(east, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (west != this.west) {\r\n\t\t\t\tthis._west = $math.round(west, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\t// solves single russia prob\r\n\t\t\tif (this._east < this._west) {\r\n\t\t\t\tthis._east = 180;\r\n\t\t\t\tthis._west = -180;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [GEOJSONGeometry description]\r\n *\r\n * @todo Description\r\n */\r\nexport type GEOJSONGeometry = \"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\";\r\n\r\n/**\r\n * Defines data fields for [[MapSeries]].\r\n *\r\n * @todo Alllow any number of values?\r\n */\r\nexport interface IMapSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * A field name in data for a numeric value of the map object.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomLevel` of the map object.\r\n\t */\r\n\tzoomLevel?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomGeoPoint` of the map object.\r\n\t */\r\n\tzoomGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A flag telling if the series should get data from `geodata` or not\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseGeodata?: boolean;\r\n\r\n\t/**\r\n\t * A list of object ids to include from the series.\r\n\t */\r\n\tinclude?: string[];\r\n\r\n\t/**\r\n\t * A list of object ids to exclude from the series.\r\n\t */\r\n\texclude?: string[];\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t */\r\n\tignoreBounds?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesEvents extends ISeriesEvents {\r\n\tgeoBoundsChanged: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSeriesAdapters extends ISeriesAdapters, IMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for series of map objects.\r\n *\r\n * @see {@link IMapSeriesEvents} for a list of available Events\r\n * @see {@link IMapSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\t/**\r\n\t * The longitude of the East-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * The longitude of the West-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * The latitude of the South-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * The latitude of the North-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\tprotected _eastDefined: number;\r\n\r\n\tprotected _westDefined: number;\r\n\r\n\tprotected _southDefined: number;\r\n\r\n\tprotected _northDefined: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: MapChart;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\r\n\tprotected _mapObjects: ListTemplate<MapObject>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeries\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.showInViewport = true;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSeriesDataItem();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks whether object should be included in series.\r\n\t *\r\n\t * @param includes  A list of explicitly included ids\r\n\t * @param excludes  A list of explicitly excluded ids\r\n\t * @param id        Id of the object\r\n\t * @return Include?\r\n\t */\r\n\tprotected checkInclude(includes: string[], excludes: string[], id: string): boolean {\r\n\t\tif (includes) {\r\n\t\t\tif (includes.length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (includes.indexOf(id) == -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (excludes && excludes.length > 0) {\r\n\t\t\tif (excludes.indexOf(id) != -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Should the map extract all the data about element from the GeoJSON?\r\n\t *\r\n\t * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`\r\n\t * polygon series will need to contain geographical data in itself in order\r\n\t * to be drawn.\r\n\t *\r\n\t * If this is set to `true`, series will try to extract data for its objects\r\n\t * from either chart-level `geodata` or from series' `geodata` which holds\r\n\t * map infor in GeoJSON format.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use GeoJSON data?\r\n\t */\r\n\tpublic set useGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"useGeodata\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use GeoJSON data?\r\n\t */\r\n\tpublic get useGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"useGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be explictly included in the series.\r\n\t *\r\n\t * If this is not set, the series will automatically include all of the\r\n\t * objects, available in the GeoJSON map. (minus the ones listed in\r\n\t * `exclude`)\r\n\t *\r\n\t * If you need to display only specific objects, use `include`. E.g.:\r\n\t *\r\n\t * `include = [\"FR\", \"ES\", \"DE\"];`\r\n\t *\r\n\t * The above will show only France, Spain, and Germany out of the whole map.\r\n\t *\r\n\t * @param value  Included objects\r\n\t */\r\n\tpublic set include(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"include\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\t//this.data = [];\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Included objects\r\n\t */\r\n\tpublic get include(): string[] {\r\n\t\treturn this.getPropertyValue(\"include\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Ignore bounds?\r\n\t */\r\n\tpublic set ignoreBounds(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"ignoreBounds\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore bounds?\r\n\t */\r\n\tpublic get ignoreBounds(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreBounds\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be excluded from the series.\r\n\t *\r\n\t * E.g. you want to include all of the areas from a GeoJSON map, except\r\n\t * Antarctica.\r\n\t *\r\n\t * You'd leave `include` empty, and set `exclude = [\"AQ\"]`.\r\n\t *\r\n\t * @param value  Excluded ids\r\n\t */\r\n\tpublic set exclude(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"exclude\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Excluded ids\r\n\t */\r\n\tpublic get exclude(): string[] {\r\n\t\treturn this.getPropertyValue(\"exclude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a newly added object.\r\n\t *\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleObjectAdded(event: IListEvents<MapObject>[\"inserted\"]) {\r\n\t\tlet mapObject: MapObject = event.newValue;\r\n\t\tmapObject.parent = this;\r\n\t\tmapObject.series = this;\r\n\t\tmapObject.strokeWidth = mapObject.strokeWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The series supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tfor (let i = this.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (this.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\tthis.data.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.disposeData();\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, undefined, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"Point\" | \"MultiLineString\" | \"MultiPolygon\", coordinates: [number, number] | Array<Array<[number, number]>> | Array<Array<Array<[number, number]>>> } }[] {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tlet north: number;\r\n\t\tlet south: number;\r\n\t\tlet east: number;\r\n\t\tlet west: number;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.north > north || !$type.isNumber(north)) {\r\n\t\t\t\tnorth = dataItem.north;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.south < south || !$type.isNumber(south)) {\r\n\t\t\t\tsouth = dataItem.south;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.west < west || !$type.isNumber(west)) {\r\n\t\t\t\twest = dataItem.west;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.east > east || !$type.isNumber(east)) {\r\n\t\t\t\teast = dataItem.east;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this._mapObjects) {\r\n\t\t\tthis._mapObjects.each((mapObject) => {\r\n\t\t\t\tif (mapObject.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = mapObject.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = mapObject.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = mapObject.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = mapObject.east;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (this.north != north || this.east != east || this.south != south || this.west != west) {\r\n\t\t\tthis._north = north;\r\n\t\t\tthis._east = east;\r\n\t\t\tthis._west = west;\r\n\t\t\tthis._south = south;\r\n\r\n\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\tif (!this.ignoreBounds) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * North-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set north(value: number) {\r\n\t\tthis._northDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._northDefined)) {\r\n\t\t\treturn this._northDefined;\r\n\t\t}\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * South-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set south(value: number) {\r\n\t\tthis._southDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._southDefined)) {\r\n\t\t\treturn this._southDefined;\r\n\t\t}\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * West-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set west(value: number) {\r\n\t\tthis._westDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._westDefined)) {\r\n\t\t\treturn this._westDefined;\r\n\t\t}\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * East-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set east(value: number) {\r\n\t\tthis._eastDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._eastDefined)) {\r\n\t\t\treturn this._eastDefined;\r\n\t\t}\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthrow Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.tooltip && this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 10, y: 10, width: this.topParent.maxWidth - 20, height: this.topParent.maxHeight - 20 });\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSeries\"] = MapSeries;\r\nregistry.registeredClasses[\"MapSeriesDataItem\"] = MapSeriesDataItem;\r\n","/**\r\n * Map object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapSeries, MapSeriesDataItem } from \"./MapSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines propeties for [[MapObject]].\r\n */\r\nexport interface IMapObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A custom zoom level to use when `zoomToMapObject()` is called on this\r\n\t * map object.\r\n\t */\r\n\tzoomLevel?: number;\r\n\r\n\t/**\r\n\t * A custom point to use when `zoomToMapObject()` is called on this map\r\n\t * object.\r\n\t */\r\n\tzoomGeoPoint?: IGeoPoint;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapObject]].\r\n */\r\nexport interface IMapObjectEvents extends IContainerEvents {\r\n\tgeoBoundsChanged: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapObjectAdapters extends IContainerAdapters, IMapObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all map objects: lines, images, etc.\r\n *\r\n * @see {@link IMapObjectEvents} for a list of available events\r\n * @see {@link IMapObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapObjectEvents;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSeries;\r\n\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapObject\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.clickable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates this object, forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series && this.series.itemReaderText) {\r\n\t\t\tthis.readerTitle = this.series.itemReaderText;\r\n\t\t}\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet feature = this.getFeature();\r\n\t\tif (feature) {\r\n\t\t\tlet geometry = feature.geometry;\r\n\r\n\t\t\tif (geometry) {\t\t\t\t\r\n\t\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\t\tlet west = bounds[0][0];\r\n\t\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\t\tlet north = bounds[1][1];\r\n\t\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tif (north != this.north) {\r\n\t\t\t\t\tthis._north = $math.round(north, 8);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (south != this.south) {\r\n\t\t\t\t\tthis._south = $math.round(south);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (east != this.east) {\r\n\t\t\t\t\tthis._east = $math.round(east);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (west != this.west) {\r\n\t\t\t\t\tthis._west = $math.round(west);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\t\t\tif(this.series){\r\n\t\t\t\t\t\tthis.series.invalidateDataItems();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._east)) {\r\n\t\t\treturn this._east;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.east;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._west)) {\r\n\t\t\treturn this._west;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.west;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._south)) {\r\n\t\t\treturn this._south;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.south;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._north)) {\r\n\t\t\treturn this._north;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.north;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param optional point (sprite-related) to which tooltip must point.\r\n\t * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\t\tconst res = super.showTooltip(point);\r\n\t\tif (res && this.showTooltipOn == \"always\" && !this.series.chart.events.has(\"mappositionchanged\", this.handleTooltipMove, this)) {\r\n\t\t\tthis.addDisposer(this.series.chart.events.on(\"mappositionchanged\", this.handleTooltipMove, this));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprotected handleTooltipMove(ev: any): void {\r\n\t\tif(!this.tooltip.isHidden){\r\n\t\t\tthis.showTooltip();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]].\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: MapSeriesDataItem) {\r\n\t\tsuper.setDataItem(dataItem);\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapObject\"] = MapObject;\r\n","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapImageSeriesDataItem, MapImageSeries } from \"./MapImageSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapImage]].\r\n */\r\nexport interface IMapImageProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Latitude of the image location.\r\n\t */\r\n\tlatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the mage location.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapImage]].\r\n */\r\nexport interface IMapImageEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImage]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageAdapters extends IMapObjectAdapters, IMapImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to place an image on the map.\r\n *\r\n * @see {@link IMapImageEvents} for a list of available events\r\n * @see {@link IMapImageAdapters} for a list of available Adapters\r\n */\r\nexport class MapImage extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageEvents;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapImage\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude image is placed at.\r\n\t *\r\n\t * @param value  Latitude\r\n\t */\r\n\tpublic set latitude(value: number) {\r\n\t\tthis.setPropertyValue(\"latitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"latitude\");\r\n\t\t\r\n\t\tif(!$type.isNumber(latitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlatitude = this.dataItem.geoPoint.latitude;\r\n\t\t}\t\t\r\n\t\treturn latitude;\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude image is placed on.\r\n\t *\r\n\t * @param value  Longitude\r\n\t */\r\n\tpublic set longitude(value: number) {\r\n\t\tthis.setPropertyValue(\"longitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"longitude\");\r\n\t\tif(!$type.isNumber(longitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlongitude = this.dataItem.geoPoint.longitude;\r\n\t\t}\t\t\r\n\t\treturn longitude;\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions the image to it's current position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\t\tif ($type.isNumber(this.latitude) && $type.isNumber(this.longitude)) {\r\n\t\t\t//this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));\r\n\t\t\tlet p = this.series.chart.projection.d3Projection([this.longitude, this.latitude]);\r\n\r\n\t\t\tlet visible: any = this.series.chart.projection.d3Path({ type: 'Point', coordinates: [this.longitude, this.latitude] });\r\n\r\n\t\t\tif (!visible) {\r\n\t\t\t\tthis.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.moveTo({ x: p[0], y: p[1] });\r\n\t\t}\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [this.longitude, this.latitude] } };\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImage\"] = MapImage;\r\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","/**\r\n * A collection of Map-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in\r\n * geo-points (lat/long).\r\n *\r\n * @param multiPolygon  Source multi-polygon\r\n * @return Geo-multipolygon\r\n */\r\n\r\nexport function multiPolygonToGeo(multiPolygon: Array<[Array<[number, number]>, Array<[number, number]>]>): Array<Array<Array<IGeoPoint>>> {\r\n\treturn $array.map(multiPolygon, (polygon) => {\r\n\t\tlet surface: Array<[number, number]> = polygon[0];\r\n\t\tlet hole: Array<[number, number]> = polygon[1];\r\n\r\n\t\t//let holePoints: Array<IGeoPoint> = [];\r\n\r\n\t\tconst geoArea = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tgeoArea.push(multiPointToGeo(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tgeoArea.push(multiPointToGeo(hole));\r\n\t\t}\r\n\r\n\t\treturn geoArea;\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points\r\n * (lat/long).\r\n *\r\n * @param multiLine  Source multiline\r\n * @return Geo-multiline\r\n */\r\nexport function multiLineToGeo(multiLine: Array<Array<[number, number]>>): Array<Array<IGeoPoint>> {\r\n\treturn $array.map(multiLine, (multiLine) => {\r\n\t\treturn multiPointToGeo(multiLine);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiPointToGeo(points: Array<[number, number]>): Array<IGeoPoint> {\r\n\treturn $array.map(points, (point) => {\r\n\t\treturn pointToGeo(point);\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiGeoToPoint(geoPoints: Array<IGeoPoint>): Array<[number, number]> {\r\n\treturn $array.map(geoPoints, geoToPoint);\r\n}\r\n\r\n\r\n/**\r\n * Converts X/Y point into a lat/long geo-point.\r\n *\r\n * @param point  Source point\r\n * @return Geo-point\r\n */\r\nexport function pointToGeo(point: [number, number]): IGeoPoint {\r\n\treturn { longitude: point[0], latitude: point[1] }\r\n}\r\n\r\n/**\r\n * Converts lat/long geo-point into a X/Y point.\r\n *\r\n * @param point  Source geo-point\r\n * @return X/Y point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): [number, number] {\r\n\treturn [geoPoint.longitude, geoPoint.latitude];\r\n}\r\n\r\n\r\n/**\r\n * Converts geo line (collection of lat/long coordinates) to screen line (x/y).\r\n *\r\n * @param   multiGeoLine  Source geo line\r\n * @return                Screen line\r\n */\r\nexport function multiGeoLineToMultiLine(multiGeoLine: Array<Array<IGeoPoint>>): Array<Array<[number, number]>> {\r\n\treturn $array.map(multiGeoLine, (segment) => {\r\n\t\treturn $array.map(segment, geoToPoint);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a geo polygon (collection of lat/long coordinates) to screen\r\n * polygon (x/y).\r\n *\r\n * @param   multiGeoPolygon  Source polygon\r\n * @return                   Screen polygon\r\n */\r\nexport function multiGeoPolygonToMultipolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>): Array<Array<Array<[number, number]>>> {\r\n\treturn $array.map(multiGeoPolygon, (geoPolygon) => {\r\n\t\tlet surface = geoPolygon[0];\r\n\t\tlet hole = geoPolygon[1];\r\n\r\n\t\tconst multiPolygon = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(hole));\r\n\t\t}\r\n\r\n\t\treturn multiPolygon;\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a set of geographical coordinates for the circle with a center\r\n * at specific lat/long coordinates and radius (in degrees).\r\n *\r\n * @since 4.3.0\r\n * @param   longitude  Center longitude\r\n * @param   latitude   Center latitude\r\n * @param   radius     Radius (degrees)\r\n * @return             Circle coordinates\r\n */\r\nexport function getCircle(longitude: number, latitude: number, radius: number): Array<Array<Array<[number, number]>>> {\r\n\treturn [d3geo.geoCircle().center([longitude, latitude]).radius(radius)().coordinates as Array<Array<[number, number]>>];\r\n}\r\n\r\n/**\r\n * Returns a set of screen coordinates that represents a \"background\" area\r\n * between provided extremities.\r\n *\r\n * @since 4.3.0\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         Polygon\r\n */\r\nexport function getBackground(north: number, east: number, south: number, west: number): Array<Array<Array<[number, number]>>> {\r\n\r\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\r\n\r\n\tif(west == -180){\r\n\t\twest = -179.9999;\r\n\t}\r\n\tif(south == -90){\r\n\t\tsouth = -89.9999;\r\n\t}\r\n\tif(north == 90){\r\n\t\tnorth = 89.9999;\r\n\t}\r\n\tif(east == 180){\r\n\t\teast = 179.9999;\r\n\t}\r\n\r\n\r\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n\r\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\r\n\t\tlet surface: Array<[number, number]> = [];\r\n\t\tmultiPolygon.push([surface]);\r\n\r\n\t\tif(ln + stepLong > east){\r\n\t\t\tstepLong = east - ln;\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n\t\t\tsurface.push([ll, north]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\r\n\t\t\tsurface.push([ln + stepLong, lt]);\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n\t\t\tsurface.push([ll, south]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\r\n\t\t\tsurface.push([ln, lt]);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn multiPolygon;\r\n}\r\n","/**\r\n * Map polygon module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Polygon } from \"../../core/elements/Polygon\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport $polylabel from \"polylabel\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Set of geographical coordinates for the polygon.\r\n\t */\r\n\tmultiGeoPolygon?: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Set of screen coordinates for the polygon.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLongitude?: number;\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection, to depict the shortest distance how it would go on the actual\r\n\t * land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t */\r\n\tprecision?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonAdapters extends IMapObjectAdapters, IMapPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a polygon on the map.\r\n *\r\n * @see {@link IMapPolygonEvents} for a list of available events\r\n * @see {@link IMapPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class MapPolygon extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonEvents;\r\n\r\n\t/**\r\n\t * A visual polygon element.\r\n\t */\r\n\tpublic polygon: Polygon;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapPolygonSeries;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLatitude: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLongitude: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygon\";\r\n\r\n\t\tthis.polygon = this.createChild(Polygon);\r\n\t\tthis.polygon.shouldClone = false;\r\n\t\tthis.polygon.applyOnClones = true;\r\n\t\tthis.setPropertyValue(\"precision\", 0.5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set of coordinates for the polygon.\r\n\t *\r\n\t * @param multiGeoPolygon  Polygon coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis.setPropertyValue(\"multiGeoPolygon\", multiGeoPolygon, true);\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\tlet multiGeoPolygon = this.getPropertyValue(\"multiGeoPolygon\");\r\n\t\tif (!multiGeoPolygon && this.dataItem) {\r\n\t\t\tmultiGeoPolygon = this.dataItem.multiGeoPolygon;\r\n\t\t}\r\n\t\treturn multiGeoPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tif (this.setPropertyValue(\"multiPolygon\", multiPolygon)) {\r\n\t\t\tthis.updateExtremes();\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\tlet multiPolygon = this.getPropertyValue(\"multiPolygon\");\r\n\t\tif (!multiPolygon && this.dataItem) {\r\n\t\t\tmultiPolygon = this.dataItem.multiPolygon;\r\n\t\t}\r\n\t\treturn multiPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the polygon, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series) {\r\n\t\t\tlet projection = this.series.chart.projection;\r\n\r\n\t\t\tlet pathGenerator = projection.d3Path;\r\n\r\n\t\t\tif (this.multiPolygon) {\r\n\r\n\t\t\t\tif (this.series) {\r\n\t\t\t\t\tlet feature = { type: \"MultiPolygon\", coordinates: this.multiPolygon };\r\n\r\n\t\t\t\t\tprojection.d3Projection.precision(this.precision);\r\n\t\t\t\t\tthis.polygon.path = pathGenerator(<any>feature);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.series.calculateVisualCenter) {\r\n\t\t\t\t\tlet biggestArea = 0;\r\n\t\t\t\t\tlet biggestPolygon = this.multiPolygon[0];\r\n\r\n\t\t\t\t\tif (this.multiPolygon.length > 1) {\r\n\t\t\t\t\t\tfor (let i = 0; i < this.multiPolygon.length; i++) {\r\n\t\t\t\t\t\t\tlet polygon = this.multiPolygon[i];\r\n\t\t\t\t\t\t\tlet area = d3geo.geoArea({ type: \"Polygon\", coordinates: polygon });\r\n\r\n\t\t\t\t\t\t\tif (area > biggestArea) {\r\n\t\t\t\t\t\t\t\tbiggestPolygon = polygon;\r\n\t\t\t\t\t\t\t\tbiggestArea = area;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet center = $polylabel(biggestPolygon);\r\n\r\n\t\t\t\t\tthis._visualLongitude = center[0];\r\n\t\t\t\t\tthis._visualLatitude = center[1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._visualLongitude = this.longitude;\r\n\t\t\t\t\tthis._visualLatitude = this.latitude;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set visualLatitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLatitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Latitude\r\n\t */\r\n\tpublic get visualLatitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"visualLatitude\");\r\n\t\tif ($type.isNumber(latitude)) {\r\n\t\t\treturn (latitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLatitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLatitude\",\r\n\t\t\t\tthis._visualLatitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set visualLongitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLongitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Longitude\r\n\t */\r\n\tpublic get visualLongitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"visualLongitude\");\r\n\t\tif ($type.isNumber(longitude)) {\r\n\t\t\treturn (longitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLongitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLongitude\",\r\n\t\t\t\tthis._visualLongitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Not 100% sure about this, as if we add something to MapPolygon this\r\n\t * won't be true, but otherwise we will get all 0 and the tooltip won't\r\n\t * be positioned properly\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's width in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\treturn this.polygon.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's height in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\treturn this.polygon.pixelHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[MapPolygon]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.polygon.copyFrom(source.polygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tsuper.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * used to sorth polygons from big to small\r\n\t */\r\n\tpublic get boxArea() {\r\n\t\treturn (this.north - this.south) * (this.east - this.west);\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).y\r\n\t}\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygon\"] = MapPolygon;\r\n","/**\r\n * Map polygon series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapPolygon } from \"./MapPolygon\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapPolygonDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapPolygonSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapPolygonSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t */\r\n\tprotected _mapPolygon: MapPolygon;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon.\r\n\t */\r\n\tprotected _polygon: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiPolygon: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon.\r\n\t */\r\n\tprotected _geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>];\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapPolygonSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapPolygon(): MapPolygon {\r\n\t\tif (!this._mapPolygon) {\r\n\t\t\tlet mapPolygon = this.component.mapPolygons.create();\r\n\t\t\tthis._mapPolygon = mapPolygon;\r\n\t\t\tthis.addSprite(mapPolygon);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapPolygons.removeValue(mapPolygon);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapPolygon;\r\n\t\t}\r\n\t\treturn this._mapPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 200 ],\r\n\t *     [ 170, 240 ],\r\n\t *     [ 100, 150 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param polygon  Coordinates\r\n\t */\r\n\tpublic set polygon(polygon: Array<Array<[number, number]>>) {\r\n\t\tthis._polygon = polygon;\r\n\t\tthis.multiPolygon = [polygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get polygon(): Array<Array<[number, number]>> {\r\n\t\treturn this._polygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tthis._multiPolygon = multiPolygon;\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\treturn this._multiPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     { latitude: -10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: 10.0 },\r\n\t *     { latitude: -10.0, longitude: -10.0 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference\r\n\t * @param geoPolygon  Coordinates\r\n\t */\r\n\tpublic set geoPolygon(geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>]) {\r\n\t\tthis._geoPolygon = geoPolygon;\r\n\t\tthis.multiGeoPolygon = [geoPolygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoPolygon(): [Array<IGeoPoint>, Array<IGeoPoint>] {\r\n\t\treturn this._geoPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: 180.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ],\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: -170.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference\r\n\t * @param multiGeoPolygon  Coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis._multiGeoPolygon = multiGeoPolygon;\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\treturn this._multiGeoPolygon;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds polygon pixels.\r\n\t */\r\n\tpolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-polygon pixels.\r\n\t */\r\n\tmultiPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds polygon data in Geo coordinates.\r\n\t */\r\n\tgeoPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds poly-polygon data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesProperties extends IMapSeriesProperties {\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsBy: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\";\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsReversed: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygonSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonSeriesAdapters extends IMapSeriesAdapters, IMapPolygonSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map polygon elements.\r\n *\r\n * @see {@link IMapPolygonSeriesEvents} for a list of available Events\r\n * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapPolygonSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapPolygonSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map polygons in the series.\r\n\t */\r\n\tprotected _mapPolygons: ListTemplate<MapPolygon>;\r\n\r\n\t/**\r\n\t * Indicates if series should automatically calculate visual center of the\r\n\t * polygons (accessible via `visualLongitude` and `visualLatitude` properties\r\n\t * of the [[MapPolygon]]).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic calculateVisualCenter: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygonSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPolygon = \"multiPolygon\";\r\n\t\tthis.dataFields.polygon = \"polygon\";\r\n\r\n\t\tthis.dataFields.geoPolygon = \"geoPolygon\";\r\n\t\tthis.dataFields.multiGeoPolygon = \"multiGeoPolygon\";\r\n\r\n\t\tthis.setPropertyValue(\"sortPolygonsBy\", \"area\");\r\n\t\tthis.setPropertyValue(\"sortPolygonsReversed\", false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapPolygonSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\tthis.mapPolygons.clear();\r\n\t\tsuper.processIncExc();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = !this._dataSources[\"geodata\"] ? this.chart.geodata : undefined;\r\n\r\n\t\t\tif (this.geodata) {\r\n\t\t\t\tgeoJSON = this.geodata;\r\n\t\t\t}\r\n\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\r\n\t\t\t\t\t\t\tif (this.chart.geodataNames && this.chart.geodataNames[id]) {\r\n\t\t\t\t\t\t\t\tfeature.properties.name = this.chart.geodataNames[id];\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (type == \"Polygon\" || type == \"MultiPolygon\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\tif (coordinates) {\r\n\t\t\t\t\t\t\t\t\t// make the same as MultiPolygon\r\n\t\t\t\t\t\t\t\t\tif (type == \"Polygon\") {\r\n\t\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// find data object in user-provided data\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapPolygonDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\t\t\t// create one if not found\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPolygon: coordinates, id: id, madeFromGeoData: true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// in case found\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPolygon) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPolygon = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapPolygon);\r\n\t\t});\r\n\r\n\t\tif (this.sortPolygonsBy != \"none\") {\r\n\r\n\t\t\tconst sortBy = this.sortPolygonsBy;\r\n\t\t\tconst reversed = this.sortPolygonsReversed;\r\n\t\t\tthis.mapPolygons.sort((a, b) => {\r\n\t\t\t\tlet valA: number | string = \"\";\r\n\t\t\t\tlet valB: number | string = \"\";\r\n\t\t\t\tlet dirA: Ordering = -1;\r\n\t\t\t\tlet dirB: Ordering = 1;\r\n\r\n\t\t\t\tswitch (sortBy) {\r\n\t\t\t\t\tcase \"area\":\r\n\t\t\t\t\t\tvalA = a.boxArea;\r\n\t\t\t\t\t\tvalB = b.boxArea;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"name\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"id\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"latitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.south : a.north;\r\n\t\t\t\t\t\tvalB = reversed ? b.south : b.north;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"longitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.east : a.west;\r\n\t\t\t\t\t\tvalB = reversed ? b.east : b.west;\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valA < valB) {\r\n\t\t\t\t\treturn reversed ? dirB : dirA;\r\n\t\t\t\t}\r\n\t\t\t\tif (valA > valB) {\r\n\t\t\t\t\treturn reversed ? dirA : dirB;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.mapPolygons.each((mapPolygon, index) => {\r\n\t\t\t\tmapPolygon.validate();\r\n\t\t\t\t// makes small go first to avoid hover problems with IE\r\n\t\t\t\tif (!mapPolygon.zIndex && !mapPolygon.propertyFields.zIndex) {\r\n\t\t\t\t\tmapPolygon.zIndex = 1000000 - index;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * List of polygon elements in the series.\r\n\t *\r\n\t * @return Polygon list\r\n\t */\r\n\tpublic get mapPolygons(): ListTemplate<MapPolygon> {\r\n\r\n\t\tif (!this._mapPolygons) {\r\n\t\t\tlet polygonTemplate: MapPolygon = new MapPolygon();\r\n\r\n\t\t\tlet mapPolygons: ListTemplate<MapPolygon> = new ListTemplate<MapPolygon>(polygonTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapPolygons));\r\n\t\t\tthis._disposers.push(mapPolygons.template);\r\n\t\t\tmapPolygons.template.focusable = true;\r\n\t\t\tmapPolygons.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapPolygons = mapPolygons;\r\n\t\t\tthis._mapObjects = mapPolygons;\r\n\t\t}\r\n\r\n\t\treturn this._mapPolygons;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapPolygon by id in geoJSON file\r\n\t * @param polygon id\r\n\t * @return {MapPolygon}\r\n\t */\r\n\tpublic getPolygonById(id: string): MapPolygon {\r\n\t\treturn $iter.find(this.mapPolygons.iterator(), (mapPolygon) => {\r\n\t\t\tlet dataContext: any = mapPolygon.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapPolygons.template.copyFrom(source.mapPolygons.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] {\r\n\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapPolygons.each((mapPolygon) => {\r\n\t\t\tif (this.dataItems.indexOf(mapPolygon._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapPolygon.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * Available options: `\"area\"` (default), `\"name\"`, `\"longitude\"`,\r\n\t * `\"latitude\"`, `\"id\"`, and `\"none\"`.\r\n\t *\r\n\t * @default area\r\n\t * @since 4.9.36\r\n\t * @param value  How to sort map polygons\r\n\t */\r\n\tpublic set sortPolygonsBy(value: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\") {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsBy\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return How to sort map polygons\r\n\t */\r\n\tpublic get sortPolygonsBy(): \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.9.36\r\n\t * @param value  Reverse polygon sort direction\r\n\t */\r\n\tpublic set sortPolygonsReversed(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsReversed\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reverse polygon sort direction\r\n\t */\r\n\tpublic get sortPolygonsReversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsReversed\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygonSeries\"] = MapPolygonSeries;\r\nregistry.registeredClasses[\"MapPolygonSeriesDataItem\"] = MapPolygonSeriesDataItem;\r\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","/**\r\n * This module contains funcitonality related to geographical projections\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../../core/defs/IGeoPoint\";\r\n//import { IGeoRectangle } from \"../../../core/defs/IGeoRectangle\";\r\nimport { IPoint, IOrientationPoint } from \"../../../core/defs/IPoint\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as $math from \"../../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport { MapChart } from \"../../types/MapChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for a geographical projection.\r\n */\r\nexport class Projection {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Projection: d3geo.GeoProjection;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Path: d3geo.GeoPath;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis.d3Projection = d3geo.geoEquirectangular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic set d3Projection(projection: d3geo.GeoProjection) {\r\n\t\tthis._d3Projection = projection;\r\n\t\tprojection.precision(0.1);\r\n\t\tthis._d3Path = d3geo.geoPath().projection(projection);\r\n\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateProjection();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic get d3Projection(): d3geo.GeoProjection {\r\n\t\treturn this._d3Projection;\r\n\t}\r\n\r\n\t/**\r\n\t * d3 path generator method\r\n\t * @ignore\r\n\t */\r\n\tpublic get d3Path(): d3geo.GeoPath {\r\n\t\treturn this._d3Path;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.d3Projection.scale() / 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a geographical point (lat/long) to a screen point (x/y)\r\n\t * @param geoPoint Geo point (lat/long)\r\n\t * @return Screen point (x/y)\r\n\t */\r\n\tpublic convert(geoPoint: IGeoPoint): IPoint {\r\n\t\t/*\r\n\t\tgeoPoint = $geo.normalizePoint(geoPoint);\r\n\t\tgeoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\tlet pointInRadians: IPoint = this.project(geoPoint.longitude * $math.RADIANS, geoPoint.latitude * $math.RADIANS);\r\n\t\treturn {\r\n\t\t\tx: $math.round(pointInRadians.x * $math.DEGREES - this.centerPoint.x, 4) * this.scale,\r\n\t\t\ty: $math.round(-pointInRadians.y * $math.DEGREES - this.centerPoint.y, 4) * this.scale\r\n\t\t};*/\r\n\r\n\t\tlet p = this.d3Projection([geoPoint.longitude, geoPoint.latitude]);\r\n\t\tif (p) {\r\n\t\t\treturn { x: p[0], y: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a screen point (x/y) to a geographical point (lat/long)\r\n\t * @param point Screen point (x/y)\r\n\t * @return Geo point (lat/long)\r\n\t */\r\n\tpublic invert(point: IPoint): IGeoPoint {\r\n\t\t/*\r\n\t\tlet pointInRadians: IGeoPoint = this.unproject((point.x / this.scale + this.centerPoint.x) * $math.RADIANS, (-point.y / this.scale - this.centerPoint.y) * $math.RADIANS);\r\n\r\n\t\tlet geoPoint = { longitude: pointInRadians.longitude * $math.DEGREES, latitude: pointInRadians.latitude * $math.DEGREES };\r\n\r\n\t\tgeoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\t*/\r\n\t\tlet p = this.d3Projection.invert([point.x, point.y]);\r\n\t\tif (p) {\r\n\t\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns X/Y coordinates.\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param lambda [description]\r\n\t * @param phi    [description]\r\n\t * @return X/Y coordinates\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic project(lambda: number, phi: number): IPoint {\r\n\t\treturn this.convert({ longitude: lambda * $math.DEGREES, latitude: phi * $math.DEGREES });\r\n\t}\r\n\r\n\t/**\r\n\t * Returns geographical coordinates (lat/long).\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param x X coordinate\r\n\t * @param y Y coordinate\r\n\t * @return Geographical point\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic unproject(x: number, y: number): IGeoPoint {\r\n\t\treturn this.invert({ x: x, y: y });\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic rotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS + deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic unrotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS - deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };\r\n\t}\r\n\r\n\r\n\t//@todo: move to some utils?\r\n\t//@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html\r\n\tpublic intermediatePoint(pointA: IGeoPoint, pointB: IGeoPoint, position: number): IGeoPoint {\r\n\t\tlet p = d3geo.geoInterpolate([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude])(position);\r\n\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t};\r\n\r\n\t// returns radians\r\n\tpublic multiDistance(multiGeoLine: Array<Array<IGeoPoint>>): number {\r\n\t\tlet distance = 0;\r\n\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\tlet pointA = points[p - 1];\r\n\t\t\t\t\tlet pointB = points[p];\r\n\t\t\t\t\tdistance += this.distance(pointA, pointB);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t// returns radians\r\n\tpublic distance(pointA: IGeoPoint, pointB: IGeoPoint): number {\r\n\t\treturn d3geo.geoDistance([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude]);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IOrientationPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet intermediatePoint = this.positionToGeoPoint(multiGeoLine, position);\r\n\t\t\tlet intermediatePointA = this.positionToGeoPoint(multiGeoLine, position - 0.01);\r\n\t\t\tlet intermediatePointB = this.positionToGeoPoint(multiGeoLine, position + 0.01);\r\n\r\n\t\t\tif (intermediatePointA && intermediatePointB) {\r\n\r\n\t\t\t\tlet point = this.convert(intermediatePoint);\r\n\r\n\t\t\t\tlet pa = this.convert(intermediatePointA);\r\n\t\t\t\tlet pb = this.convert(intermediatePointB);\r\n\r\n\t\t\t\treturn { x: point.x, y: point.y, angle: $math.getAngle(pa, pb) };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToGeoPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IGeoPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet totalDistance: number = this.multiDistance(multiGeoLine);\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IGeoPoint;\r\n\t\t\tlet pointB: IGeoPoint;\r\n\r\n\t\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = this.distance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = multiGeoLine.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\treturn this.intermediatePoint(pointA, pointB, positionAB);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { longitude: 0, latitude: 0 };\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Projection\"] = Projection;\r\n","/**\r\n * A module for the mini-map control.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapSeries } from \"./MapSeries\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SmallMap]].\r\n */\r\nexport interface ISmallMapProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[SmallMap]].\r\n */\r\nexport interface ISmallMapEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SmallMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISmallMapAdapters extends IContainerAdapters, ISmallMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SmallMap extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISmallMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISmallMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISmallMapEvents;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A container that holds the visual elements for the mini-map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic seriesContainer: Container;\r\n\r\n\t/**\r\n\t * The rectangle element which highlights current viewport.\r\n\t */\r\n\tpublic rectangle: Rectangle;\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t */\r\n\tprotected _series: List<MapSeries>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SmallMap\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.align = \"left\";\r\n\t\tthis.valign = \"bottom\";\r\n\t\tthis.percentHeight = 20;\r\n\t\tthis.percentWidth = 20;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Set background defailts\r\n\t\tthis.background.fillOpacity = 0.9;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\t// Set up events\r\n\t\tthis.events.on(\"hit\", this.moveToPosition, this, false);\r\n\t\tthis.events.on(\"maxsizechanged\", this.updateMapSize, this, false);\r\n\r\n\t\t// Create a container\r\n\t\tthis.seriesContainer = this.createChild(Container);\r\n\t\tthis.seriesContainer.shouldClone = false;\r\n\r\n\t\t// Create an outline rectangle\r\n\t\tlet rectangle: Rectangle = this.createChild(Rectangle);\r\n\t\trectangle.shouldClone = false;\r\n\t\trectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\trectangle.strokeWidth = 1;\r\n\t\trectangle.strokeOpacity = 0.5;\r\n\t\trectangle.fill = color(); //\"none\";\r\n\t\trectangle.verticalCenter = \"middle\";\r\n\t\trectangle.horizontalCenter = \"middle\";\r\n\t\trectangle.isMeasured = false;\r\n\t\trectangle.visible = false;\t\t\r\n\r\n\t\tthis.rectangle = rectangle;\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<MapSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<MapSeries>();\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]) {\r\n\t\tlet series: MapSeries = event.newValue;\r\n\t\tif (this.chart.series.contains(series)) {\r\n\t\t\tlet newSeries = series.clone();\r\n\t\t\tthis._series.removeValue(series);\r\n\t\t\tthis._series.push(newSeries);\r\n\t\t\tseries = newSeries;\r\n\r\n\t\t\tthis.chart.dataUsers.push(newSeries);\r\n\t\t}\r\n\t\tseries.chart = this.chart;\r\n\t\tseries.parent = this.seriesContainer;\r\n\t\tseries.interactionsEnabled = false;\r\n\t\tseries.events.on(\"inited\", this.updateMapSize, this, false);\r\n\t\tseries.hidden = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<MapSeries>[\"removed\"]) {\r\n\t\t//let sourceSeries: MapSeries = event.oldValue;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves main map pan position after click on the small map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic moveToPosition(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tlet rectPoint: IPoint = $utils.spritePointToSprite(event.spritePoint, this, this.seriesContainer);\r\n\t\tlet geoPoint: IGeoPoint = this.chart.seriesPointToGeo(rectPoint);\r\n\t\tthis.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart/map that this control is meant for.\r\n\t *\r\n\t * @param chart  Chart/map\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tif (this.chart != chart) {\r\n\t\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\t\t//chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"mappositionchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"scaleratiochanged\", this.updateMapSize, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart/map\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the viewport recangle as per current map zoom/pan position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRectangle(): void {\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet zoomLevel: number = chart.zoomLevel;\r\n\t\tlet rectangle: Rectangle = this.rectangle;\r\n\r\n\t\trectangle.width = this.pixelWidth / zoomLevel;\r\n\t\trectangle.height = this.pixelHeight / zoomLevel;\r\n\r\n\t\tlet scale: number = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\r\n\t\tlet seriesContainer: Container = chart.seriesContainer;\r\n\r\n\t\trectangle.x = Math.ceil(( - seriesContainer.pixelX) * scale / zoomLevel) + this.seriesContainer.pixelX;\r\n\t\trectangle.y = Math.ceil(( - seriesContainer.pixelY) * scale / zoomLevel) + this.seriesContainer.pixelY;\r\n\r\n\t\trectangle.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Update map size so that internal elements can redraw themselves after\r\n\t * the size of the small map changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateMapSize(): void {\r\n\t\tif (this.chart) {\r\n\t\t\tlet scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\t\t\tthis.seriesContainer.scale = scale;\r\n\r\n\t\t\tlet bbox: IRectangle = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t\ttry { // Add exception catching to tame FF\r\n\t\t\t\tbbox = this.seriesContainer.group.node.getBBox();\r\n\t\t\t} catch (err) { }\r\n\r\n\t\t\tif(bbox.width > 0){\r\n\t\t\t\tthis.rectangle.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.seriesContainer.x = this.pixelWidth / 2 - bbox.x * scale - bbox.width / 2 * scale;\r\n\t\t\tthis.seriesContainer.y = this.pixelHeight / 2 - bbox.y * scale - bbox.height / 2 * scale;\r\n\r\n\t\t\tthis.updateRectangle();\r\n\t\t\tthis.afterDraw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update elements after drawing the small map.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\t//this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n\t\tthis.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n","/**\r\n * A collection of GeoJSON format-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * Normalizes a geo-point.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo-point\r\n * @return Normalized geo-point\r\n */\r\nexport function normalizePoint(geoPoint: IGeoPoint): IGeoPoint {\r\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\r\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\r\n\r\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n\r\n\tif (Math.abs(latitude180) > 90) {\r\n\t\tlongitude = wrapAngleTo180(longitude + 180);\r\n\t}\r\n\r\n\tgeoPoint.longitude = longitude;\r\n\tgeoPoint.latitude = latitude;\r\n\r\n\treturn geoPoint;\r\n}\r\n\r\n/**\r\n * Normalizes all points of a geo-line.\r\n *\r\n * @ignore Exclude from docs\r\n * @param multiline  Source geo-line\r\n * @return Normalized geo-line\r\n */\r\nexport function normalizeMultiline(multiline: Array<Array<IGeoPoint>>): Array<Array<IGeoPoint>> {\r\n\t$array.each(multiline, (segment) => {\r\n\t\t$array.each(segment, (point) => {\r\n\t\t\tnormalizePoint(point);\r\n\t\t});\r\n\t});\r\n\treturn multiline;\r\n}\r\n\r\n/**\r\n * [wrapAngleTo180 description]\r\n *\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n * @param angle  Angle\r\n * @return Angle\r\n */\r\nexport function wrapAngleTo180(angle: number): number {\r\n\tangle = angle % 360;\r\n\r\n\tif (angle > 180) {\r\n\t\tangle -= 360;\r\n\t}\r\n\tif (angle < -180) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\treturn angle;\r\n}\r\n\r\n/**\r\n * Converts a geo point to a regular point object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo point\r\n * @return Point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): IPoint {\r\n\treturn { x: geoPoint.longitude, y: geoPoint.latitude };\r\n}\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t */\r\n\tposition?: number;\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tadjustRotation?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineObjectAdapters extends IContainerAdapters, IMapLineObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line on the map.\r\n *\r\n * @see {@link IMapLineObjectEvents} for a list of available events\r\n * @see {@link IMapLineObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapLineObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineObjectEvents;\r\n\r\n\t/**\r\n\t * A reference to the [[MapLine]] object this object is attached to.\r\n\t *\r\n\t * @todo Review if necessary (same as parent)\r\n\t */\r\n\tpublic mapLine: MapLine;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.adjustRotation = true;\r\n\t\tthis.className = \"MapLineObject\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition() {\r\n\r\n\t\tlet mapLine = this.mapLine;\r\n\r\n\t\tif (mapLine) {\r\n\r\n\t\t\tlet point: IOrientationPoint = mapLine.positionToPoint(this.position);\r\n\r\n\t\t\tthis.x = point.x;\r\n\t\t\tthis.y = point.y;\r\n\r\n\t\t\tif (this.adjustRotation) {\r\n\t\t\t\tthis.rotation = point.angle;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.mapLine.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet series = this.mapLine.dataItem.component;\r\n\t\t\t\tthis.scale = 1 / series.scale;\r\n\t\t\t}\r\n\r\n\t\t\t// hide out of bounds\r\n\t\t\tif (mapLine.shortestDistance) {\r\n\r\n\t\t\t\tlet projection = this.mapLine.series.chart.projection;\r\n\r\n\t\t\t\tlet geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);\r\n\r\n\t\t\t\tlet visible: any = projection.d3Path({ type: 'Point', coordinates: [geoPoint.longitude, geoPoint.latitude] });\r\n\r\n\t\t\t\tif (!visible) {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t *\r\n\t * @param value  Position within the line (0-1)\r\n\t */\r\n\tpublic set position(value: number) {\r\n\t\tthis.setPropertyValue(\"position\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position within the line\r\n\t */\r\n\tpublic get position(): number {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Auto-rotate\r\n\t */\r\n\tpublic set adjustRotation(value: boolean) {\r\n\t\tthis.setPropertyValue(\"adjustRotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Auto-rotate\r\n\t */\r\n\tpublic get adjustRotation(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustRotation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineObject\"] = MapLineObject;\r\n","/**\r\n * Map image series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapImageDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapImageSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapImageSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t */\r\n\tprotected _mapImage: MapImage;\r\n\r\n\t/**\r\n\t * [_point description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _point: [number, number];\r\n\r\n\t/**\r\n\t * Geographical coordinates image is placed at.\r\n\t */\r\n\tprotected _geoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: this.point } };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t *\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapImage(): MapImage {\r\n\t\tif (!this._mapImage) {\r\n\t\t\tlet mapImage = this.component.mapImages.create();\r\n\t\t\tthis.addSprite(mapImage);\r\n\t\t\tthis._mapImage = mapImage;\r\n\t\t\tthis._disposers.push(mapImage);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapImages.removeValue(mapImage);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis.mapObject = mapImage;\r\n\t\t}\r\n\t\treturn this._mapImage;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set point(point: [number, number]) {\r\n\t\tthis._point = point;\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get point(): [number, number] {\r\n\t\treturn this._point;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set multiPoint(multiPoint: [[number, number]]) {\r\n\t\tthis._point = multiPoint[0];\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(this._point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get multiPoint(): [[number, number]] {\r\n\t\treturn [this._point];\r\n\t}\t\r\n\r\n\t/**\r\n\t * Geographical coordinates (lat/long) image is placed at.\r\n\t *\r\n\t * @param geoPoint Image coordinates\r\n\t */\r\n\tpublic set geoPoint(geoPoint: IGeoPoint) {\r\n\t\tthis._geoPoint = geoPoint;\r\n\t\tthis.point = [geoPoint.longitude, geoPoint.latitude];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image coordinates\r\n\t */\r\n\tpublic get geoPoint(): IGeoPoint {\r\n\t\treturn this._geoPoint;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds image point data in pixels.\r\n\t */\r\n\tpoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in pixels.\r\n\t */\r\n\tmultiPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds image point data in Geo coordinates.\r\n\t */\r\n\tgeoPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImageSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageSeriesAdapters extends IMapSeriesAdapters, IMapImageSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map image (marker) elements.\r\n *\r\n * @see {@link IMapImageSeriesEvents} for a list of available Events\r\n * @see {@link IMapImageSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapImageSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapImageSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this image is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t */\r\n\tprotected _mapImages: ListTemplate<MapImage>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPoint = \"multiPoint\";\r\n\t\tthis.dataFields.point = \"point\";\r\n\r\n\t\tthis.dataFields.geoPoint = \"geoPoint\";\r\n\t\tthis.dataFields.multiGeoPoint = \"multiGeoPoint\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapImageSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the data of the sries, effectively forcing it to redraw\r\n\t * all of its elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this.data.length > 0 && this._parseDataFrom == 0) {\r\n\t\t\tthis.mapImages.clear();\r\n\t\t}\r\n\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata) {\r\n\t\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"Point\" || type == \"MultiPoint\") {  // todo: we don't support multipoints at the moment actually\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\t// make the same as MultiPoint\r\n\t\t\t\t\t\t\t\tif (type == \"Point\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapImageDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPoint: coordinates, id: id, madeFromGeoData:true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPoint) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPoint = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\t// important! this should go after super.validateData\r\n\t\t// if data is parsed in chunks, images list is corrupted, fix it here\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet mapImage = dataItem.mapImage;\r\n\t\t\tif (!mapImage.isDisposed()) {\r\n\t\t\t\tthis.mapImages.moveValue(mapImage);\r\n\t\t\t\tif ($type.isNumber(mapImage.latitude) && $type.isNumber(mapImage.latitude)) {\r\n\t\t\t\t\tdataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t *\r\n\t * @return Map images\r\n\t */\r\n\tpublic get mapImages(): ListTemplate<MapImage> {\r\n\r\n\t\tif (!this._mapImages) {\r\n\t\t\tlet template: MapImage = new MapImage();\r\n\t\t\tlet mapImages = new ListTemplate<MapImage>(template);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapImages));\r\n\t\t\tthis._disposers.push(mapImages.template);\r\n\t\t\tmapImages.template.focusable = true;\r\n\t\t\tmapImages.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapImages = mapImages;\r\n\t\t\tthis._mapObjects = mapImages;\r\n\t\t}\r\n\r\n\t\treturn this._mapImages;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates data element, effectively triggering its redrawal.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]) {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\tdataItem.mapImage.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\t$iter.each(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tmapImage.validatePosition();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapImages.template.copyFrom(source.mapImages.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> {\r\n\t\tlet features: Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapImages.each((mapImage)=>{\r\n\t\t\tif (this.dataItems.indexOf(mapImage._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapImage.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapImage by id\r\n\t * @param image id\r\n\t * @return {MapImage}\r\n\t */\r\n\tpublic getImageById(id: string): MapImage {\r\n\t\treturn $iter.find(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tlet dataContext: any = mapImage.dataItem.dataContext;\r\n\t\t\tif(mapImage.id == id || (dataContext && dataContext.id == id)){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImageSeries\"] = MapImageSeries;\r\nregistry.registeredClasses[\"MapImageSeriesDataItem\"] = MapImageSeriesDataItem;\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapLineObject } from \"./MapLineObject\";\r\nimport { MapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { MapImageSeries } from \"./MapImageSeries\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $geo from \"./Geo\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLine]].\r\n */\r\nexport interface IMapLineProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * If `true` it line will be arched in the way to simulate shortest path\r\n\t * over curvature of Earth's surface, based on currently used on projection.\r\n\t */\r\n\tshortestDistance?: boolean;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images which will be connected by the line\r\n\t */\r\n\timagesToConnect?: MapImage[];\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t */\r\n\tprecision?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLine]].\r\n */\r\nexport interface IMapLineEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineAdapters extends IMapObjectAdapters, IMapLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a line on the map.\r\n *\r\n * @see {@link IMapLineEvents} for a list of available events\r\n * @see {@link IMapLineAdapters} for a list of available Adapters\r\n */\r\nexport class MapLine extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineEvents;\r\n\r\n\t/**\r\n\t * A line visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A list of actual line objects.\r\n\t */\r\n\tprotected _lineObjects: ListTemplate<MapLineObject>;\r\n\r\n\t/**\r\n\t * A reference to arrow object.\r\n\t */\r\n\tprotected _arrow: MapLineObject;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapLineSeries;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t */\r\n\tprotected _imagesToConnect: MapImage[];\r\n\r\n\t/**\r\n\t * A list of event disposers for images.\r\n\t */\r\n\tprotected _imageListeners: { [index: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLine\";\r\n\r\n\t\tthis.createLine();\r\n\t\tthis.line.stroke = color();\r\n\t\tthis.line.parent = this;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"precision\", 0.1);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.shortestDistance = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine() {\r\n\t\tthis.line = new Polyline();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position within the line (0-1) to a physical point\r\n\t * coordinates.\r\n\t *\r\n\t * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tif (this.shortestDistance) {\r\n\t\t\treturn this.series.chart.projection.positionToPoint(this.multiGeoLine, position);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.line) {\r\n\t\t\t\treturn this.line.positionToPoint(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tif (multiGeoLine && multiGeoLine.length > 0) {\r\n\t\t\tthis.setPropertyValue(\"multiGeoLine\", $geo.normalizeMultiline(multiGeoLine), true);\r\n\r\n\t\t\tlet multiLine: Array<Array<[number, number]>> = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\r\n\t\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\r\n\t\t\tthis.updateExtremes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\tlet multiGeoLine = this.getPropertyValue(\"multiGeoLine\");\r\n\t\tif (!multiGeoLine && this.dataItem && this.dataItem.multiGeoLine) {\r\n\t\t\tmultiGeoLine = this.dataItem.multiGeoLine;\r\n\t\t}\r\n\r\n\t\treturn multiGeoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\t\tthis.multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\r\n\t\tlet multiLine = this.getPropertyValue(\"multiLine\");\r\n\t\tif (!multiLine && this.dataItem && this.dataItem.multiLine) {\r\n\t\t\tmultiLine = this.dataItem.multiLine;\r\n\t\t}\r\n\r\n\t\treturn multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t *\r\n\t * Parameter is an array that can hold string `id`'s to of the images, or\r\n\t * references to actual [[MapImage]] objects.\r\n\t *\r\n\t * @param images  Images\r\n\t */\r\n\tpublic set imagesToConnect(images: MapImage[] | string[]) {\r\n\t\tthis.setPropertyValue(\"imagesToConnect\", images, true);\r\n\t\tthis.handleImagesToConnect();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet chart = this.series.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\tif (!series.isReady()) {\r\n\t\t\t\t\t\t\tthis._disposers.push(series.events.on(\"ready\", this.handleImagesToConnect, this, false));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {MapImages[]}\r\n\t */\r\n\tpublic get imagesToConnect(): MapImage[] | string[] {\r\n\t\treturn this.getPropertyValue(\"imagesToConnect\");\r\n\t}\r\n\r\n\tprotected handleImagesToConnect() {\r\n\t\tif (this.imagesToConnect) {\r\n\t\t\tlet segment: Array<IGeoPoint> = [];\r\n\t\t\tlet multiGeoLine = [segment];\r\n\r\n\t\t\tfor (let image of this.imagesToConnect) {\r\n\t\t\t\tif ($type.isString(image)) {\r\n\t\t\t\t\tlet chart = this.series.chart;\r\n\t\t\t\t\tif (chart) {\r\n\t\t\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\t\t\tlet img = series.getImageById(<string>image)\r\n\t\t\t\t\t\t\t\tif (img) {\r\n\t\t\t\t\t\t\t\t\timage = img;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (image instanceof MapImage) {\r\n\r\n\t\t\t\t\tsegment.push({ longitude: (<MapImage>image).longitude, latitude: (<MapImage>image).latitude });\r\n\r\n\t\t\t\t\tif (!this._imageListeners[image.uid]) {\r\n\t\t\t\t\t\tlet disposer = image.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == \"longitude\" || event.property == \"latitude\") {\r\n\t\t\t\t\t\t\t\tthis.handleImagesToConnect();\r\n\t\t\t\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this, false);\r\n\t\t\t\t\t\tthis._imageListeners[image.uid] = disposer;\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.multiGeoLine = multiGeoLine;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the line, effectively forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chart: MapChart = this.series.chart;\r\n\r\n\t\tif (this.multiLine) {\r\n\r\n\t\t\tif (!this.shortestDistance) {\r\n\r\n\t\t\t\tlet convertedPoints: Array<Array<IPoint>> = [];\r\n\r\n\t\t\t\tfor (let i = 0, len = this.multiLine.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet segment: Array<[number, number]> = this.multiLine[i];\r\n\r\n\t\t\t\t\tlet convertedSegmentPoints: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tfor (let s = 0, slen = segment.length; s < slen; s++) {\r\n\t\t\t\t\t\tlet geoPoint: [number, number] = segment[s];\r\n\t\t\t\t\t\tlet point: IPoint = this.series.chart.projection.convert({ longitude: geoPoint[0], latitude: geoPoint[1] });\r\n\t\t\t\t\t\tconvertedSegmentPoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconvertedPoints.push(convertedSegmentPoints);\r\n\t\t\t\t}\r\n\t\t\t\tthis.line.segments = convertedPoints;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchart.projection.d3Projection.precision(this.precision);\r\n\t\t\t\tthis.line.path = chart.projection.d3Path(<any>this.getFeature());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._arrow) {\r\n\t\t\t\tthis._arrow.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.lineObjects.iterator(), (x) => {\r\n\t\t\t\tx.validatePosition();\r\n\t\t\t});\r\n\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t\telse if (this.imagesToConnect) {\r\n\t\t\tthis.handleImagesToConnect();\r\n\t\t}\r\n\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0 && this.multiLine[0] && this.multiLine[0].length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * The line should take the shortest path over the globe.\r\n\t *\r\n\t * Enabling this will make the line look differently in different\r\n\t * projections. Only `MapLine` supports this setting, `MapArc` and\r\n\t * `MapSplice` don't.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Real path?\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\t\tthis.setPropertyValue(\"shortestDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Real path?\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn this.getPropertyValue(\"shortestDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * List of separate line objects the line consists of.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of line objects\r\n\t */\r\n\tpublic get lineObjects(): ListTemplate<MapLineObject> {\r\n\t\tif (!this._lineObjects) {\r\n\t\t\tthis._lineObjects = new ListTemplate<MapLineObject>(new MapLineObject());\r\n\t\t\tthis._lineObjects.events.on(\"inserted\", this.handleLineObjectAdded, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._lineObjects));\r\n\t\t\tthis._disposers.push(this._lineObjects.template);\r\n\t\t}\r\n\r\n\t\treturn this._lineObjects;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorate a [[LineObject]] when it is added to the line.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleLineObjectAdded(event: IListEvents<MapLineObject>[\"inserted\"]) {\r\n\t\tlet mapLineObject: MapLineObject = event.newValue;\r\n\t\tmapLineObject.mapLine = this;\r\n\t\tmapLineObject.shouldClone = false;\r\n\t\tmapLineObject.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLineObject]] to use as an option arrowhead on the line.\r\n\t *\r\n\t * Just accessing this property will create a default arrowhead on the line\r\n\t * automatically.\r\n\t *\r\n\t * @param arrow  Arrow element\r\n\t */\r\n\tpublic set arrow(arrow: MapLineObject) {\r\n\t\tthis._arrow = arrow;\r\n\t\tarrow.mapLine = this;\r\n\t\tarrow.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrow element\r\n\t */\r\n\tpublic get arrow(): MapLineObject {\r\n\t\tif (!this._arrow) {\r\n\t\t\tlet arrow: MapLineObject = this.createChild(MapLineObject);\r\n\t\t\tarrow.shouldClone = false;\r\n\t\t\tarrow.width = 8;\r\n\t\t\tarrow.height = 10;\r\n\t\t\tarrow.mapLine = this;\r\n\t\t\tarrow.position = 0.5;\r\n\r\n\t\t\tlet triangle = arrow.createChild(Triangle);\r\n\t\t\t//triangle.shouldClone = false;\r\n\t\t\ttriangle.fillOpacity = 1;\r\n\t\t\ttriangle.width = percent(100);\r\n\t\t\ttriangle.height = percent(100);\r\n\t\t\ttriangle.rotation = 90;\r\n\t\t\ttriangle.horizontalCenter = \"middle\";\r\n\t\t\ttriangle.verticalCenter = \"middle\";\r\n\t\t\tthis._arrow = arrow;\r\n\t\t}\r\n\t\treturn this._arrow;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies line properties and other attributes, like arrow, from another\r\n\t * instance of [[MapLine]].\r\n\t *\r\n\t * @param source  Source map line\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.lineObjects.copyFrom(source.lineObjects);\r\n\t\tif (source._arrow) {\r\n\t\t\tthis.arrow = <MapLineObject>source.arrow.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!(x instanceof Percent)) {\r\n\t\t\tx = percent(50);\r\n\t\t}\r\n\t\tif (x instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(x.value).x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!(y instanceof Percent)) {\r\n\t\t\ty = percent(50);\r\n\t\t}\r\n\t\tif (y instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(y.value).y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Precision\r\n\t */\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLine\"] = MapLine;\r\n","/**\r\n * Map line series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapLineDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapLineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapLineSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line.\r\n\t */\r\n\tprotected _line: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiLine: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line.\r\n\t */\r\n\tprotected _geoLine: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiGeoLine: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapLine(): this[\"_mapLine\"] {\r\n\t\tif (!this._mapLine) {\r\n\t\t\tlet mapLine = this.component.mapLines.create();\r\n\r\n\t\t\tthis._mapLine = mapLine;\r\n\t\t\tthis.addSprite(mapLine);\r\n\r\n\t\t\tthis._disposers.push(mapLine);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapLines.removeValue(mapLine);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapLine;\r\n\t\t}\r\n\t\treturn this._mapLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [ 100, 150 ],\r\n\t *   [ 120, 200 ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param line  Coordinates\r\n\t */\r\n\tpublic set line(line: Array<[number, number]>) {\r\n\t\tthis._line = line;\r\n\t\tthis.multiLine = [line];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get line(): Array<[number, number]> {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis._multiLine = multiLine;\r\n\t\tthis._multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\t\treturn this._multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { longitude: 3.121, latitude: 0.58 },\r\n\t *   { longitude: -5.199, latitude: 21.223 }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference\r\n\t * @param geoLine  Coordinates\r\n\t */\r\n\tpublic set geoLine(geoLine: Array<IGeoPoint>) {\r\n\t\tthis._geoLine = geoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine([geoLine]);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoLine(): Array<IGeoPoint> {\r\n\t\treturn this._geoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tthis._multiGeoLine = multiGeoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\treturn this._multiGeoLine;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds line data in pixels.\r\n\t */\r\n\tline?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in pixels.\r\n\t */\r\n\tmultiLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds line data in Geo coordinates.\r\n\t */\r\n\tgeoLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in Geo coordinates.\r\n\t */\r\n\tmultiGeoLine?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineSeriesAdapters extends IMapSeriesAdapters, IMapLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map line series.\r\n *\r\n * @see {@link IMapLineSeriesEvents} for a list of available Events\r\n * @see {@link IMapLineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapLineSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A list of map lins in the series.\r\n\t */\r\n\tprotected _mapLines: ListTemplate<this[\"_mapLine\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiLine = \"multiLine\";\r\n\t\tthis.dataFields.line = \"line\";\r\n\r\n\t\tthis.dataFields.geoLine = \"geoLine\";\r\n\t\tthis.dataFields.multiGeoLine = \"multiGeoLine\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"LineString\" || type == \"MultiLineString\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapLineDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (type == \"LineString\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiLine: coordinates, id: id, madeFromGeoData:true};\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiLine) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiLine = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of lines in the series.\r\n\t *\r\n\t * @return Lines\r\n\t */\r\n\tpublic get mapLines(): ListTemplate<this[\"_mapLine\"]> {\r\n\r\n\t\tif (!this._mapLines) {\r\n\t\t\tlet lineTemplate: MapLine = this.createLine();\r\n\t\t\tlet mapLines = new ListTemplate<MapLine>(lineTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapLines));\r\n\t\t\tthis._disposers.push(mapLines.template);\r\n\t\t\tmapLines.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapLines = mapLines;\r\n\t\t\tthis._mapObjects = mapLines;\r\n\t\t}\r\n\r\n\t\treturn this._mapLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapLine();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapLine);\r\n\t\t})\r\n\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tmapLine.validate();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapLines.template.copyFrom(source.mapLines.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] {\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] = [];\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tif (this.dataItems.indexOf(mapLine._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapLine.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * returns MapLine by id\r\n\t * @param line id\r\n\t * @return {MapLine}\r\n\t */\r\n\tpublic getLineById(id: string): MapLine {\r\n\t\treturn $iter.find(this.mapLines.iterator(), (mapLine) => {\r\n\t\t\tlet dataContext: any = mapLine.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineSeries\"] = MapLineSeries;\r\nregistry.registeredClasses[\"MapLineSeriesDataItem\"] = MapLineSeriesDataItem;\r\n","/**\r\n * Graticule (map grid line).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GraticuleSeries } from \"./GraticuleSeries\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Graticule]].\r\n */\r\nexport interface IGraticuleProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[Graticule]].\r\n */\r\nexport interface IGraticuleEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Graticule]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleAdapters extends IMapLineAdapters, IGraticuleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Graticule is a map line spanning from the poles or around the globe.\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleEvents} for a list of available events\r\n * @see {@link IGraticuleAdapters} for a list of available Adapters\r\n */\r\nexport class Graticule extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Graticule\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.shortestDistance = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Graticule\"] = Graticule;\r\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","/**\r\n * Graticule (map grid) series functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { Graticule } from \"./Graticule\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GraticuleSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GraticuleSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[Graticule]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesProperties extends IMapLineSeriesProperties {\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t */\r\n\t// majorLatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t */\r\n\t// majorLongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfitExtent?: boolean;\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsingleSprite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GraticuleSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleSeriesAdapters extends IMapLineSeriesAdapters, IGraticuleSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class is used to create a set of graticules (map grid).\r\n *\r\n * To enable, create like you would create any regular map series:\r\n *\r\n * ```TypeScript\r\n * let graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JavaScript\r\n * var graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     \"type\": \"GraticuleSeries\",\r\n *     \"mapLines\": {\r\n *       \"line\": {\r\n *         \"stroke\": \"#000000\",\r\n *         \"strokeOpacity\": 0.1\r\n *       }\r\n *     }\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleSeriesEvents} for a list of available Events\r\n * @see {@link IGraticuleSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class GraticuleSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGraticuleSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: GraticuleSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeries\";\r\n\r\n\t\tthis.longitudeStep = 10;\r\n\r\n\t\tthis.latitudeStep = 10;\r\n\r\n\t\tthis.north = 90;\r\n\t\tthis.south = -90;\r\n\t\tthis.east = -180;\r\n\t\tthis.west = 180;\r\n\r\n\t\t//this.majorLatitudeStep = 90;\r\n\t\t//this.majorLongitudeStep = 360;\r\n\r\n\t\tthis.fitExtent = true;\r\n\r\n\t\tthis.singleSprite = true;\r\n\r\n\t\tthis.events.disableType(\"geoBoundsChanged\");\r\n\r\n\t\tthis.mapLines.template.line.strokeOpacity = 0.08;\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tthis.hiddenInLegend = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new GraticuleSeriesDataItem();\r\n\t}\r\n\r\n\tpublic validateData() {\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.mapLines.clear();\r\n\r\n\t\tlet graticule = d3geo.geoGraticule();\r\n\r\n\t\tif (graticule) {\r\n\t\t\tgraticule.stepMinor([this.longitudeStep, this.latitudeStep]);\r\n\t\t\tgraticule.stepMajor([360, 360]);\r\n\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (this.fitExtent) {\r\n\t\t\t\tgraticule.extent([[chart.east, chart.north], [chart.west, chart.south]]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgraticule.extent([[this.east, this.north], [this.west, this.south]]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.singleSprite) {\r\n\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\tmapLine.multiLine = graticule().coordinates as Array<Array<[number, number]>>;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet lineStrings = graticule.lines();\r\n\r\n\t\t\t\t$array.each(lineStrings, (lineString) => {\r\n\t\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\t\tmapLine.multiLine = [lineString.coordinates as Array<[number, number]>];\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new Graticule();\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set latitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"latitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get latitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"latitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Step\r\n\t */\r\n\tpublic set longitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"longitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get longitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"longitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLatitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLatitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLatitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLatitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLongitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLongitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLongitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLongitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Fit?\r\n\t */\r\n\tpublic set fitExtent(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"fitExtent\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fit?\r\n\t */\r\n\tpublic get fitExtent(): boolean {\r\n\t\treturn this.getPropertyValue(\"fitExtent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Use single sprite?\r\n\t */\r\n\tpublic set singleSprite(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"singleSprite\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use single sprite?\r\n\t */\r\n\tpublic get singleSprite(): boolean {\r\n\t\treturn this.getPropertyValue(\"singleSprite\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GraticuleSeries\"] = GraticuleSeries;\r\nregistry.registeredClasses[\"GraticuleSeriesDataItem\"] = GraticuleSeriesDataItem;\r\n","/**\r\n * Map module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { MapSeries } from \"../map/MapSeries\";\r\nimport { MapObject } from \"../map/MapObject\";\r\nimport { MapImage } from \"../map/MapImage\";\r\nimport { MapPolygon } from \"../map/MapPolygon\";\r\nimport { MapPolygonSeries } from \"../map/MapPolygonSeries\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { Projection } from \"../map/projections/Projection\";\r\nimport { ZoomControl } from \"../map/ZoomControl\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { SmallMap } from \"../map/SmallMap\";\r\nimport * as $mapUtils from \"../map/MapUtils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { options } from \"../../core/Options\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $geo from \"../map/Geo\";\r\nimport { Paper } from \"../../core/rendering/Paper\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { GraticuleSeries } from \"../map/GraticuleSeries\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { Legend } from \"../Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines interface for a map polygon object.\r\n */\r\nexport interface IMapPolygonDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single polygon information in X/Y coordinates.\r\n\t */\r\n\tpolygon?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in X/Y coordinates.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Single polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPolygon?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: Array<Array<Array<IGeoPoint>>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines types of map line.\r\n */\r\nexport type MapLineType = \"line\" | \"arc\" | \"spline\" | \"realTrajectory\";\r\n\r\n/**\r\n * Defines interface for the map line object.\r\n */\r\nexport interface IMapLineDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single line information in X/Y coordinates.\r\n\t */\r\n\tline?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Multi-part line information in X/Y coordinates.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Single line information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoLine?: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * Multi-part line information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines interface for a map image (market) object.\r\n */\r\nexport interface IMapImageDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Image position information in X/Y coordinates.\r\n\t */\r\n\tpoint?: [number, number];\r\n\r\n\t/**\r\n\t * Multi-image position information in X/Y coordinates.\r\n\t */\r\n\tmultiPoint?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Image position information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * Multi-image position information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPoint?: Array<IGeoPoint>;\r\n\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines type suitable for all map objects.\r\n */\r\nexport type IMapDataObject = IMapPolygonDataObject | IMapLineDataObject;\r\n\r\n/**\r\n * Defines data fields for [[MapChart]].\r\n */\r\nexport interface IMapChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapChart]].\r\n */\r\nexport interface IMapChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * Projection to be used when drawing the map.\r\n\t */\r\n\tprojection?: Projection;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t */\r\n\tdeltaLongitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to -90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaLatitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal \"Z\" - an axis that goes from\r\n\t * the center of the globe directly to the viewer.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaGamma?: number;\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * A map will start centered on this geographical point.\r\n\t */\r\n\thomeGeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * A map will start zoomed to this level.\r\n\t */\r\n\thomeZoomLevel?: number;\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t */\r\n\tmouseWheelBehavior?: \"zoom\" | \"none\";\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t */\r\n\tpanBehavior?: \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\";\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tcenterMapOnZoomOut?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapChart]].\r\n */\r\nexport interface IMapChartEvents extends ISerialChartEvents {\r\n\r\n\t/**\r\n\t * Invoked when map is zoomed in or out.\r\n\t */\r\n\tzoomlevelchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when map is panned. (moved)\r\n\t */\r\n\tmappositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when scale ratio is changed, e.g when the whole map area is\r\n\t * resized and the map needs to be resized to fit it, without changing\r\n\t * zoom level.\r\n\t */\r\n\tscaleratiochanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapChartAdapters extends ISerialChartAdapters, IMapChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a map.\r\n *\r\n * @see {@link IMapChartEvents} for a list of available Events\r\n * @see {@link IMapChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation\r\n */\r\nexport class MapChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapChartEvents;\r\n\r\n\t/**\r\n\t * The East-most longitude point of the map.\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * The West-most longitude point of the map.\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * The South-most latitude point of the map.\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * The North-most latitude point of the map.\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * A ratio to be used when scaling the map shapes.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * A screen point of the map's center.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic centerPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's left.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic westPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's right.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic eastPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's top.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic northPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's bottom.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic southPoint: IPoint;\r\n\r\n\t/**\r\n\t * Width of the actual map objects (px).\r\n\t */\r\n\tpublic seriesWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxLeft: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxRight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxTop: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxBottom: number;\r\n\r\n\t/**\r\n\t * Height of the actual map objects (px).\r\n\t */\r\n\tpublic seriesHeight: number;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\t/**\r\n\t * Names of geodata items, such as countries, to replace by from loaded\r\n\t * geodata.\r\n\t *\r\n\t * Can be used to override built-in English names for countries.\r\n\t *\r\n\t * ```TypeScript\r\n\t * import am4geodata_lang_ES from '@amcharts4-geodata/lang/es';\r\n\t * // ...\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"geodataNames\": am4geodata_lang_ES\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.7.4\r\n\t */\r\n\tpublic geodataNames: { [index: string]: string };\r\n\r\n\t/**\r\n\t * A reference to a [[ZoomControl]] instance.\r\n\t */\r\n\tprotected _zoomControl: ZoomControl;\r\n\r\n\t/**\r\n\t * A reference to a [[SmallMap]] control instance.\r\n\t */\r\n\tprotected _smallMap: SmallMap;\r\n\r\n\t/**\r\n\t * [_zoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _zoomGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Default duration of zoom animations (ms).\r\n\t */\r\n\tpublic zoomDuration: number = 1000;\r\n\r\n\t/**\r\n\t * Default zooming animation easing function.\r\n\t */\r\n\tpublic zoomEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Smallest available zoom level. The map will not allow to zoom out past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tpublic minZoomLevel: number = 1;\r\n\r\n\t/**\r\n\t * Biggest available zoom level. The map will not allow to zoom in past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 32\r\n\t */\r\n\tpublic maxZoomLevel: number = 32;\r\n\r\n\t/**\r\n\t * [_prevZoomLevel description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomLevel: number;\r\n\r\n\t/**\r\n\t * [_prevZoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomGeoPoint: IGeoPoint = { latitude: 0, longitude: 0 };\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: MapSeries;\r\n\r\n\t/**\r\n\t * A reference to currently playing animation, e.g. zooming.\r\n\t */\r\n\tprotected _mapAnimation: Animation;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _zoomGeoPointReal: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _centerGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\r\n\tpublic panSprite: Circle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLongitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLatitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _backgroundSeries: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChart\";\r\n\r\n\t\t// Set default projection\r\n\t\tthis.projection = new Projection();\r\n\r\n\t\tthis.setPropertyValue(\"deltaLatitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaLongitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaGamma\", 0);\r\n\t\tthis.maxPanOut = 0.7;\r\n\t\tthis.homeZoomLevel = 1;\r\n\t\tthis.zoomStep = 2;\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.centerMapOnZoomOut = true;\r\n\r\n\t\t// Set padding\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\t$utils.used(this.backgroundSeries);\r\n\r\n\t\t// so that the map would render in a hidden div too\r\n\t\tthis.minWidth = 10;\r\n\t\tthis.minHeight = 10;\r\n\r\n\t\tthis.events.once(\"inited\", this.handleAllInited, this, false);\r\n\r\n\t\t// Create a container for map series\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.visible = false;\r\n\t\tseriesContainer.inert = true;\r\n\t\tseriesContainer.resizable = true;\r\n\t\tseriesContainer.events.on(\"transformed\", this.handleMapTransform, this, false);\r\n\t\tseriesContainer.events.on(\"doublehit\", this.handleDoubleHit, this, false);\r\n\t\tseriesContainer.events.on(\"dragged\", this.handleDrag, this, false);\r\n\t\tseriesContainer.zIndex = 0;\r\n\t\tseriesContainer.dragWhileResize = true;\r\n\t\t//seriesContainer.background.fillOpacity = 0;\r\n\r\n\t\tseriesContainer.adapter.add(\"scale\", (scale, target) => {\r\n\t\t\treturn $math.fitToRange(scale, this.minZoomLevel, this.maxZoomLevel);\r\n\t\t});\r\n\r\n\t\t// Set up events\r\n\t\t//this.events.on(\"validated\", this.updateExtremes, this);\r\n\t\t//this.events.on(\"datavalidated\", this.handleAllValidated, this, false);\r\n\t\t//this.events.on(\"datavalidated\", this.updateExtremes, this, false);\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t}\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Set up main chart container, e.g. set backgrounds and events to monitor\r\n\t\t// size changes, etc.\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.parent = this;\r\n\t\tchartContainer.zIndex = -1;\r\n\r\n\t\tthis._disposers.push(this.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tif (this._mapAnimation) {\r\n\t\t\t\t\tthis._mapAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet allInited = true;\r\n\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\t\t\tallInited = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allInited) {\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t}\r\n\t\t\t\tthis.zoomToGeoPoint(this._zoomGeoPointReal, this.zoomLevel, true, 0);\r\n\t\t\t}\r\n\r\n\t\t}, undefined, false));\r\n\r\n\t\tlet chartContainerBg = chartContainer.background;\r\n\t\tchartContainerBg.fillOpacity = 0;\r\n\t\tchartContainerBg.events.on(\"down\", (e) => { this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, this);\r\n\t\tchartContainerBg.events.on(\"up\", (e) => { this.seriesContainer.dragStop() }, this);\r\n\t\tchartContainerBg.events.on(\"doublehit\", this.handleDoubleHit, this);\r\n\t\tchartContainerBg.focusable = true;\r\n\r\n\t\tchartContainer.events.on(\"down\", this.handleMapDown, this, false);\r\n\r\n\t\tthis.addDisposer(seriesContainer.events.on(\"down\", () => {\r\n\t\t\t// Cancel any move inertia if there is one\r\n\t\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\t\tif (inertia) {\r\n\t\t\t\tinertia.done();\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\t// Add description to background\r\n\t\tthis.background.fillOpacity = 0;\r\n\r\n\t\t// Add keyboard events for panning\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\tconst key = keyboard.getEventKey(ev.event);\r\n\t\t\t\tif (!this._zoomControl || !this._zoomControl.thumb.isFocused) {\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: 0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: -0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\tthis.pan({ x: -0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tthis.mouseWheelBehavior = \"zoom\";\r\n\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handlePanDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handlePanUp, this));\r\n\t\t//this._disposers.push(interaction.body.events.on(\"track\", this.handlePanMove, this));\r\n\r\n\t\tlet panSprite = this.seriesContainer.createChild(Circle);\r\n\t\tpanSprite.radius = 10;\r\n\t\tpanSprite.inert = true;\r\n\t\tpanSprite.isMeasured = false;\r\n\t\tpanSprite.events.on(\"transformed\", this.handlePanMove, this, false);\r\n\t\tpanSprite.interactionsEnabled = false;\r\n\t\tpanSprite.opacity = 0;\r\n\t\tpanSprite.x = 0;\r\n\t\tpanSprite.y = 0;\r\n\t\tthis.panSprite = panSprite;\r\n\t\tthis.panBehavior = \"move\";\r\n\t\t/*\r\n\t\t\t\tthis.panSprite.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\t\t\"time\": 100,\r\n\t\t\t\t\t\"duration\": 1000,\r\n\t\t\t\t\t\"factor\": 3,\r\n\t\t\t\t\t\"easing\": $ease.sinOut\r\n\t\t\t\t});*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanDown(event: IInteractionEvents[\"down\"]): void {\r\n\t\tlet svgPoint = $utils.documentPointToSvg(event.pointer.point, this.htmlContainer);\r\n\t\tif (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < this.svgContainer.width && svgPoint.y < this.svgContainer.height) {\r\n\t\t\t// Get local point\r\n\t\t\tthis._downPointOrig = $utils.documentPointToSprite(event.pointer.point, this.seriesContainer);\r\n\r\n\t\t\tthis.panSprite.moveTo(this._downPointOrig);\r\n\t\t\tthis.panSprite.dragStart(event.pointer);\r\n\t\t\tthis._downDeltaLongitude = this.deltaLongitude;\r\n\t\t\tthis._downDeltaLatitude = this.deltaLatitude;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanUp(event: IInteractionEvents[\"down\"]): void {\r\n\t\tif (this._downPointOrig) {\r\n\t\t\tthis.panSprite.dragStop(event.pointer, true);\r\n\t\t}\r\n\t\tthis._downPointOrig = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanMove(): void {\r\n\r\n\t\tif (!this.seriesContainer.isResized) {\r\n\r\n\t\t\tif (getInteraction().areTransformed([this.panSprite.interactions, this.seriesContainer.interactions])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\t\tlet panBehavior = this.panBehavior;\r\n\r\n\t\t\tif (panBehavior != \"move\" && panBehavior != \"none\" && this._downPointOrig && d3Projection.rotate) {\r\n\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\r\n\t\t\t\tlet dln = rotation[0];\r\n\t\t\t\tlet dlt = rotation[1];\r\n\t\t\t\tlet dlg = rotation[2];\r\n\r\n\t\t\t\td3Projection.rotate([0, 0, 0]);\r\n\r\n\t\t\t\tlet downGeoLocal = this.projection.invert(this._downPointOrig);\r\n\r\n\t\t\t\tlet local: IPoint = { x: this.panSprite.pixelX, y: this.panSprite.pixelY };\r\n\t\t\t\tlet geoLocal: IGeoPoint;\r\n\t\t\t\tif (local) {\r\n\t\t\t\t\tgeoLocal = this.projection.invert(local);\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3Projection.rotate([dln, dlt, dlg]);\r\n\r\n\t\t\t\tif (geoLocal) {\r\n\t\t\t\t\tif (panBehavior == \"rotateLat\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLatitude = this._downDeltaLatitude + geoLocal.latitude - downGeoLocal.latitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panBehavior == \"rotateLong\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLongitude = this._downDeltaLongitude + geoLocal.longitude - downGeoLocal.longitude;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAllInited() {\r\n\t\tlet inited = true;\r\n\t\tthis.seriesContainer.visible = true;\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\tinited = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (inited) {\r\n\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\tthis.updateScaleRatio();\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// TODO verify that this is correct\r\n\t\t\tconst disposer = registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tthis.removeDispose(disposer);\r\n\t\t\t\tthis.handleAllInited();\r\n\t\t\t}, this, false);\r\n\r\n\t\t\tthis.addDisposer(disposer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateZoomGeoPoint() {\r\n\t\tlet seriesPoint = $utils.svgPointToSprite({ x: this.innerWidth / 2 + this.pixelPaddingLeft, y: this.innerHeight / 2 + this.pixelPaddingTop }, this.series.getIndex(0));\r\n\t\tlet geoPoint = this.projection.invert(seriesPoint);\r\n\t\tthis._zoomGeoPointReal = geoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateCenterGeoPoint() {\r\n\t\tlet maxLeft: number;\r\n\t\tlet maxRight: number;\r\n\t\tlet maxTop: number;\r\n\t\tlet maxBottom: number;\r\n\r\n\r\n\t\tif (this.backgroundSeries) {\r\n\t\t\tlet features = this.backgroundSeries.getFeatures();\r\n\t\t\tif (features.length > 0) {\r\n\t\t\t\tlet bounds = this.projection.d3Path.bounds(<any>features[0].geometry);\r\n\t\t\t\tmaxLeft = bounds[0][0];\r\n\t\t\t\tmaxTop = bounds[0][1];\r\n\t\t\t\tmaxRight = bounds[1][0];\r\n\t\t\t\tmaxBottom = bounds[1][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet bbox = series.group.node.getBBox();\r\n\r\n\t\t\t\tif (maxLeft > bbox.x || !$type.isNumber(maxLeft)) {\r\n\t\t\t\t\tmaxLeft = bbox.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxRight < bbox.x + bbox.width || !$type.isNumber(maxRight)) {\r\n\t\t\t\t\tmaxRight = bbox.x + bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxTop > bbox.y || !$type.isNumber(maxTop)) {\r\n\t\t\t\t\tmaxTop = bbox.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxBottom < bbox.y + bbox.height || !$type.isNumber(maxBottom)) {\r\n\t\t\t\t\tmaxBottom = bbox.y + bbox.height;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.seriesMaxLeft = maxLeft;\r\n\t\tthis.seriesMaxRight = maxRight;\r\n\t\tthis.seriesMaxTop = maxTop;\r\n\t\tthis.seriesMaxBottom = maxBottom;\r\n\r\n\t\tthis.seriesWidth = maxRight - maxLeft;\r\n\t\tthis.seriesHeight = maxBottom - maxTop;\r\n\r\n\t\tif (this.seriesWidth > 0 && this.seriesHeight > 0) {\r\n\t\t\tthis.chartContainer.visible = true;\r\n\t\t\tthis._centerGeoPoint = this.projection.invert({ x: maxLeft + (maxRight - maxLeft) / 2, y: maxTop + (maxBottom - maxTop) / 2 });\r\n\r\n\t\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\t\tthis._zoomGeoPointReal = this._centerGeoPoint;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chartContainer.visible = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents map to be dragged out of the container area\r\n\t * @ignore\r\n\t */\r\n\tprotected handleDrag() {\r\n\r\n\t\tlet d = this.zoomLevel * this.scaleRatio;\r\n\r\n\t\tlet ww = this.seriesWidth * d;\r\n\t\tlet hh = this.seriesHeight * d;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tlet maxLeft = this.seriesMaxLeft * d;\r\n\t\tlet maxRight = this.seriesMaxRight * d;\r\n\t\tlet maxTop = this.seriesMaxTop * d;\r\n\t\tlet maxBottom = this.seriesMaxBottom * d;\r\n\r\n\t\tlet x = seriesContainer.pixelX;\r\n\t\tlet y = seriesContainer.pixelY;\r\n\r\n\t\tlet maxPanOut = this.maxPanOut;\r\n\r\n\t\tlet minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww - maxLeft, -maxLeft);\r\n\t\tif (x < minX) {\r\n\t\t\tx = minX;\r\n\t\t}\r\n\r\n\t\tlet maxX = Math.max(this.maxWidth * maxPanOut - maxLeft, this.maxWidth - maxRight);\r\n\t\tif (x > maxX) {\r\n\t\t\tx = maxX;\r\n\t\t}\r\n\r\n\t\tlet minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh - maxTop, -maxTop)\r\n\t\tif (y < minY) {\r\n\t\t\ty = minY;\r\n\t\t}\r\n\r\n\t\tlet maxY = Math.max(this.maxHeight * maxPanOut - maxTop, this.maxHeight - maxBottom);\r\n\t\tif (y > maxY) {\r\n\t\t\ty = maxY;\r\n\t\t}\r\n\r\n\t\tseriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);\r\n\r\n\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Map\");\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(this.background.readerTitle)) {\r\n\t\t\tthis.background.readerTitle = this.language.translate(\"Use plus and minus keys on your keyboard to zoom in and out\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when a pointer presses down on the map, e.g. user presses\r\n\t * down mouse or touches the map on a screen.\r\n\t *\r\n\t * Stops all animations currently going on.\r\n\t */\r\n\tprotected handleMapDown(): void {\r\n\t\tif (this._mapAnimation) {\r\n\t\t\tthis._mapAnimation.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the event when user doubleclicks or dooubletaps the map: zooms\r\n\t * in on the reference point.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleDoubleHit(event: AMEvent<Sprite, ISpriteEvents>[\"doublehit\"]) {\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\t\tthis.zoomIn(geoPoint);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n\t * map: zooms in or out depending on the direction of the wheel turn.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\r\n\t\t// Cancel any move inertia if there is one\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\r\n\t\tif (event.shift.y < 0) {\r\n\t\t\tthis.zoomIn(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.zoomOut(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t * @default zoomX\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoom\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.chartContainer.wheelable = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoom\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t * @param  value  Behavior\r\n\t */\r\n\tpublic set panBehavior(value: \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\") {\r\n\t\tif (this.setPropertyValue(\"panBehavior\", value)) {\r\n\t\t\tlet seriesContainer = this.seriesContainer;\r\n\t\t\tthis.panSprite.draggable = false;\r\n\t\t\tseriesContainer.draggable = false;\r\n\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase \"move\":\r\n\t\t\t\t\tseriesContainer.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.panSprite.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns If the map should be centered when zooming out.\r\n\t */\r\n\tpublic get centerMapOnZoomOut(): boolean {\r\n\t\treturn this.getPropertyValue(\"centerMapOnZoomOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tpublic set centerMapOnZoomOut(value: boolean) {\r\n\t\tthis.setPropertyValue(\"centerMapOnZoomOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Behavior\r\n\t */\r\n\tpublic get panBehavior(): \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\" {\r\n\t\treturn this.getPropertyValue(\"panBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Projection to use for the map.\r\n\t *\r\n\t * Available projections:\r\n\t * * Albers\r\n\t * * AlbersUSA\r\n\t * * AzimuthalEqualArea\r\n\t * * Eckert6\r\n\t * * EqualEarth\r\n\t * * Mercator\r\n\t * * Miller\r\n\t * * NaturalEarth\r\n\t * * Orthographic\r\n\t * * Stereographic\r\n\t *\r\n\t * ```TypeScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"projection\": \"Mercator\"\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Setting_projection} More about projections\r\n\t * @param projection  Projection\r\n\t */\r\n\tpublic set projection(projection: Projection) {\r\n\t\tif (this.setPropertyValue(\"projection\", projection)) {\r\n\t\t\tthis.invalidateProjection();\r\n\r\n\t\t\tprojection.chart = this;\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tthis._backgroundSeries.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.events.once(\"validated\", () => {\r\n\t\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Projection\r\n\t */\r\n\tpublic get projection(): Projection {\r\n\t\treturn this.getPropertyValue(\"projection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates the longitudes and latitudes of the most distant points from\r\n\t * the center in all four directions: West, East, North, and South.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\r\n\t\tlet east: number;\r\n\t\tlet north: number;\r\n\t\tlet west: number;\r\n\t\tlet south: number;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = series.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = series.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = series.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = series.east;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet features: any[] = [];\r\n\t\tlet foundGraticule = false;\r\n\t\t// if we gave graticule, get features of these series only for faster fitSize\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series instanceof GraticuleSeries && !series.fitExtent) {\r\n\t\t\t\tfeatures = series.getFeatures();\r\n\t\t\t\tfoundGraticule = true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!foundGraticule) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeatures = features.concat(series.getFeatures());\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet w = $math.max(50, this.innerWidth);\r\n\t\tlet h = $math.max(50, this.innerHeight);\r\n\r\n\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\tif (features.length > 0 && d3Projection && (this.east != east || this.west != west || this.north != north || this.south != south)) {\r\n\t\t\tthis.east = east;\r\n\t\t\tthis.west = west;\r\n\t\t\tthis.north = north;\r\n\t\t\tthis.south = south;\r\n\t\t\tif (d3Projection.rotate) {\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\t\t\t\tlet deltaLong = rotation[0];\r\n\t\t\t\tlet deltaLat = rotation[1];\r\n\t\t\t\tlet deltaGamma = rotation[2];\r\n\r\n\t\t\t\tthis.deltaLongitude = deltaLong;\r\n\t\t\t\tthis.deltaLatitude = deltaLat;\r\n\t\t\t\tthis.deltaGamma = deltaGamma;\r\n\t\t\t}\r\n\r\n\t\t\tlet geoJSON = { \"type\": \"FeatureCollection\", features: features };\r\n\r\n\t\t\tlet initialScale = d3Projection.scale();\r\n\r\n\t\t\td3Projection.fitSize([w, h], <any>geoJSON);\r\n\r\n\t\t\tif (d3Projection.scale() != initialScale) {\r\n\t\t\t\tthis.invalidateDataUsers();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series instanceof GraticuleSeries) {\r\n\t\t\t\t\tseries.invalidateData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tlet polygon = this._backgroundSeries.mapPolygons.getIndex(0);\r\n\t\t\t\tif (polygon) {\r\n\t\t\t\t\tpolygon.multiPolygon = $mapUtils.getBackground(this.north, this.east, this.south, this.west);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._fitWidth = w;\r\n\t\t\tthis._fitHeight = h;\r\n\t\t}\r\n\r\n\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)calculates a ratio which should be used to scale the actual map so\r\n\t * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes\r\n\t * @ignore\r\n\t */\r\n\tprotected updateScaleRatio(): void {\r\n\t\tlet scaleRatio: number;\r\n\r\n\t\tthis.updateCenterGeoPoint();\r\n\r\n\t\tlet hScale: number = this.innerWidth / this.seriesWidth;\r\n\t\tlet vScale: number = this.innerHeight / this.seriesHeight;\r\n\r\n\t\tscaleRatio = $math.min(hScale, vScale);\r\n\r\n\t\tif ($type.isNaN(scaleRatio) || scaleRatio == Infinity) {\r\n\t\t\tscaleRatio = 1;\r\n\t\t}\r\n\r\n\t\tif (scaleRatio != this.scaleRatio) {\r\n\t\t\tthis.scaleRatio = scaleRatio;\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.scale = scaleRatio;\r\n\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t});\r\n\r\n\t\t\tthis.backgroundSeries.scale = scaleRatio;\r\n\r\n\t\t\tthis.dispatch(\"scaleratiochanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point within map container to geographical (lat/long)\r\n\t * coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic svgPointToGeo(point: IPoint): IGeoPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = $utils.svgPointToSprite(point, series);\r\n\t\t\treturn this.seriesPointToGeo(seriesPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within map's\r\n\t * container.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSVG(point: IGeoPoint): IPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = this.geoPointToSeries(point);\r\n\t\t\treturn $utils.spritePointToSvg(seriesPoint, series);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point (X/Y) within actual objects of the map to geographical\r\n\t * (lat/long) coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic seriesPointToGeo(point: IPoint): IGeoPoint {\r\n\t\treturn this.projection.invert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within\r\n\t * actual elements/objects of the maps.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSeries(point: IGeoPoint): IPoint {\r\n\t\treturn this.projection.convert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The Map supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tthis.invalidateData();\r\n\r\n\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\tfor (let i = dataUser.data.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (dataUser.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\t\tdataUser.data.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdataUser.disposeData();\r\n\t\t\t\tdataUser.invalidateData();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Reverses the order of polygons on a GeoJSON data.\r\n\t *\r\n\t * @since 4.10.11\r\n\t * @param  geodata  Source geodata\r\n\t */\r\n\tpublic processReverseGeodata(geodata: any): void {\r\n\t\tfor (let i = 0; i < geodata.features.length; i++) {\r\n\t\t\tlet feature = geodata.features[i];\r\n\t\t\tfor (let x = 0; x < feature.geometry.coordinates.length; x++) {\r\n\t\t\t\tif (feature.geometry.type == \"MultiPolygon\") {\r\n\t\t\t\t\tfor (let y = 0; y < feature.geometry.coordinates[x].length; y++) {\r\n\t\t\t\t\t\tfeature.geometry.coordinates[x][y].reverse()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeature.geometry.coordinates[x].reverse()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to particular zoom level and centers on a latitude/longitude\r\n\t * coordinate.\r\n\t *\r\n\t * @param point      Center coordinate\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToGeoPoint(point: IGeoPoint, zoomLevel: number, center?: boolean, duration?: number, mapObject?: boolean): Animation {\r\n\r\n\t\tif (!point) {\r\n\t\t\tlet hasData = false;\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.dataItems.length > 0) {\r\n\t\t\t\t\thasData = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (hasData) {\r\n\t\t\t\tpoint = this.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!point || !$type.isNumber(point.longitude) || !$type.isNumber(point.latitude)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._zoomGeoPointReal = point;\r\n\r\n\t\tzoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n\r\n\t\tlet seriesPoint: IPoint = this.projection.convert(point);\r\n\t\tif (seriesPoint) {\r\n\r\n\t\t\tlet svgPoint: IPoint = this.geoPointToSVG(point);\r\n\r\n\t\t\tlet mapPoint = $utils.svgPointToSprite(svgPoint, this);\r\n\r\n\t\t\tif (center) {\r\n\t\t\t\tmapPoint = {\r\n\t\t\t\t\tx: this.innerWidth / 2,\r\n\t\t\t\t\ty: this.innerHeight / 2\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.zoomDuration;\r\n\t\t\t}\r\n\r\n\t\t\tlet x = mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio;\r\n\t\t\tlet y = mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio;\r\n\r\n\r\n\t\t\tif (!mapObject && zoomLevel < this.zoomLevel && this.centerMapOnZoomOut && zoomLevel < 1.5) {\r\n\t\t\t\tx = this.innerWidth / 2 - (this.seriesMaxLeft + (this.seriesMaxRight - this.seriesMaxLeft) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t\ty = this.innerHeight / 2 - (this.seriesMaxTop + (this.seriesMaxBottom - this.seriesMaxTop) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t}\r\n\r\n\t\t\tthis._mapAnimation = this.seriesContainer.animate(\r\n\t\t\t\t[{\r\n\t\t\t\t\tproperty: \"scale\",\r\n\t\t\t\t\tto: zoomLevel\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"x\", from: this.seriesContainer.pixelX,\r\n\t\t\t\t\tto: x\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"y\", from: this.seriesContainer.pixelY,\r\n\t\t\t\t\tto: y\r\n\t\t\t\t}], duration, this.zoomEasing);\r\n\r\n\t\t\tthis._disposers.push(this._mapAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t\t\t}))\r\n\r\n\r\n\t\t\tthis.seriesContainer.validatePosition();\r\n\r\n\t\t\treturn this._mapAnimation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular map object.\r\n\t *\r\n\t * @param mapObject  Target map object\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToMapObject(mapObject: MapObject, zoomLevel?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif (center == undefined) {\r\n\t\t\tcenter = true;\r\n\t\t}\r\n\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tif (mapObject instanceof MapImage) {\r\n\t\t\tif ($type.isNaN(zoomLevel)) {\r\n\t\t\t\tzoomLevel = 5;\r\n\t\t\t}\r\n\t\t\treturn this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration, true);\r\n\t\t}\r\n\r\n\t\tlet dataItem = mapObject.dataItem;\r\n\r\n\t\tif (dataItem && $type.isNumber(dataItem.zoomLevel)) {\r\n\t\t\tzoomLevel = dataItem.zoomLevel;\r\n\t\t}\r\n\r\n\r\n\t\tif (mapObject instanceof MapPolygon) {\r\n\t\t\tlet dataItem = mapObject.dataItem;\r\n\t\t\tlet bbox = mapObject.polygon.bbox;\r\n\t\t\tif (bbox.width == 0 || bbox.height == 0) {\r\n\t\t\t\tbbox = mapObject.polygon.group.getBBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(zoomLevel)) {\r\n\t\t\t\tzoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet geoPoint: IGeoPoint;\r\n\r\n\t\t\tif (dataItem && $type.hasValue(dataItem.zoomGeoPoint)) {\r\n\t\t\t\tgeoPoint = dataItem.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is more accurate\r\n\t\t\t\tlet polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\r\n\t\t\t\tlet seriesPoint = $utils.spritePointToSprite(polygonPoint, mapObject.polygon, mapObject.series);\r\n\r\n\t\t\t\tgeoPoint = this.seriesPointToGeo(seriesPoint);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular viewport.\r\n\t *\r\n\t * The `north`, `east`, `south`, and `west` define boundaries of the\r\n\t * imaginary viewort we want to zoom the map to.\r\n\t *\r\n\t * `level` is not actual zoom level. The map will determine the zoom level\r\n\t * required to accommodated such zoom, and will adjust it by `level` if set.\r\n\t *\r\n\t * @param north     Latitude of the North-most boundary\r\n\t * @param east      Longitude of the East-most boundary\r\n\t * @param south     Latitude of the South-most boundary\r\n\t * @param west      Longitude of the West-most boundary\r\n\t * @param level     Adjust zoom level\r\n\t * @param center    Center on the given coordinate?\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToRectangle(north: number, east: number, south: number, west: number, level?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif ($type.isNaN(level)) {\r\n\t\t\tlevel = 1;\r\n\t\t}\r\n\r\n\t\tlet w = $math.min(west, east);\r\n\t\tlet e = $math.max(west, east);\r\n\r\n\t\twest = w;\r\n\t\teast = e;\r\n\r\n\t\tlet splitLongitude = $math.normalizeAngle(180 - this.deltaLongitude);\r\n\t\tif (splitLongitude > 180) {\r\n\t\t\tsplitLongitude -= 360;\r\n\t\t}\r\n\r\n\t\tlet newLong = west + (east - west) / 2;\r\n\t\tlet d = (west - east);\r\n\r\n\t\tif (west < splitLongitude && east > splitLongitude) {\r\n\t\t\tnewLong += 180;\r\n\t\t\td = $math.normalizeAngle(east - west - 360);\r\n\t\t}\r\n\r\n\t\tlet zoomLevel = level * Math.min((this.south - this.north) / (south - north), Math.abs((this.west - this.east) / d));\r\n\r\n\t\treturn this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: newLong }, zoomLevel, center, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms in the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomIn(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel * step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomOut(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel / step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Pans the maps using relative coordinates. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   x: 0.1,\r\n\t *   y: -0.1\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will move the map by 10% to the right, and by 10% upwards.\r\n\t *\r\n\t * @param shift     Vertical and horizontal shift\r\n\t * @param duration  Pan animation duration (ms)\r\n\t */\r\n\tpublic pan(shift: IPoint, duration?: number): void {\r\n\t\tlet point = this.geoPointToSVG(this.zoomGeoPoint);\r\n\t\tpoint.x += this.pixelWidth * shift.x;\r\n\t\tpoint.y += this.pixelHeight * shift.y;\r\n\t\tthis.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Current lat/long coordinates for the center of the viewport. (default\r\n\t * zoom reference point)\r\n\t *\r\n\t * @readonly\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\tconst point = $utils.spritePointToSvg({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);\r\n\t\treturn this.svgPointToGeo(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Current zoom level.\r\n\t *\r\n\t * @readonly\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.seriesContainer.scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.seriesContainer.scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches events after some map transformation, like pan or zoom.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMapTransform(): void {\r\n\t\tif (this.zoomLevel != this._prevZoomLevel) {\r\n\t\t\tthis.dispatch(\"zoomlevelchanged\");\r\n\t\t\tthis._prevZoomLevel = this.zoomLevel;\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"Zoom level changed to %1\", this.language.locale, $type.castString(this.zoomLevel)));\r\n\t\t}\r\n\r\n\t\tif (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {\r\n\t\t\tthis.dispatch(\"mappositionchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[SmallMap]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a small map\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"smallMap\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param smallMap  Small map\r\n\t */\r\n\tpublic set smallMap(smallMap: SmallMap) {\r\n\t\tif (this._smallMap) {\r\n\t\t\tthis.removeDispose(this._smallMap);\r\n\t\t}\r\n\t\tthis._smallMap = smallMap;\r\n\t\tthis._smallMap.chart = this;\r\n\t\tsmallMap.parent = this.chartContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Small map\r\n\t */\r\n\tpublic get smallMap(): SmallMap {\r\n\t\tif (!this._smallMap) {\r\n\t\t\tlet smallMap: SmallMap = new SmallMap();\r\n\t\t\tthis.smallMap = smallMap;\r\n\t\t}\r\n\t\treturn this._smallMap;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[ZoomControl]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a zoom control\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"zoomControl\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param zoomControl  Zoom control\r\n\t */\r\n\tpublic set zoomControl(zoomControl: ZoomControl) {\r\n\t\tif (this._zoomControl) {\r\n\t\t\tthis.removeDispose(this._zoomControl);\r\n\t\t}\r\n\t\tthis._zoomControl = zoomControl;\r\n\t\tzoomControl.chart = this;\r\n\t\tzoomControl.parent = this.chartContainer;\r\n\t\tzoomControl.plusButton.exportable = false;\r\n\t\tzoomControl.minusButton.exportable = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom control\r\n\t */\r\n\tpublic get zoomControl(): ZoomControl {\r\n\t\treturn this._zoomControl;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a map series of appropriate type.\r\n\t *\r\n\t * @return Map series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new MapSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLongitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLongitude\", $geo.wrapAngleTo180(value))) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLongitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLongitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to 90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLatitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLatitude\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLatitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLatitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around \"Z\" axis. This is the axis that pierces\r\n\t * the globe directly from the viewer's point of view.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaGamma(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaGamma\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaGamma(): number {\r\n\t\treturn this.getPropertyValue(\"deltaGamma\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected rotateMap() {\r\n\t\tif (this.projection.d3Projection) {\r\n\t\t\tif (this.projection.d3Projection.rotate) {\r\n\t\t\t\tthis.projection.d3Projection.rotate([this.deltaLongitude, this.deltaLatitude, this.deltaGamma]);\r\n\t\t\t\tthis.invalidateProjection();\r\n\t\t\t\t//this.updateExtremes(); // removal fixes #3292\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value  Max pan out\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max pan out\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * The geographical point to center map on when it is first loaded.\r\n\t *\r\n\t * The map will also be centered to this point when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home geo point\r\n\t */\r\n\tpublic set homeGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setPropertyValue(\"homeGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home geo point\r\n\t */\r\n\tpublic get homeGeoPoint(): IGeoPoint {\r\n\t\treturn this.getPropertyValue(\"homeGeoPoint\");\r\n\t}\r\n\r\n\t/**\r\n\t * The zoom level to put the map in when it is first loaded.\r\n\t *\r\n\t * The map will also be set to this zoom level when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home zoom level\r\n\t */\r\n\tpublic set homeZoomLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"homeZoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home zoom level\r\n\t */\r\n\tpublic get homeZoomLevel(): number {\r\n\t\treturn this.getPropertyValue(\"homeZoomLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Zoom factor\r\n\t */\r\n\tpublic set zoomStep(value: number) {\r\n\t\tthis.setPropertyValue(\"zoomStep\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom factor\r\n\t */\r\n\tpublic get zoomStep(): number {\r\n\t\treturn this.getPropertyValue(\"zoomStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates projection, causing all series to be redrawn.\r\n\t *\r\n\t * Call this after changing projection or its settings.\r\n\t */\r\n\tpublic invalidateProjection() {\r\n\t\tthis.east = undefined;\r\n\t\tthis.invalidateDataUsers();\r\n\t\tthis.updateCenterGeoPoint();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\");\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tlet dataSource = this.getDataSource(\"geodata\");\r\n\t\t\tdataSource.events.on(\"parseended\", () => {\r\n\t\t\t\tthis.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthis.raiseCriticalError(Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\"), true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Instantiate projection\r\n\t\tif ($type.hasValue(config[\"projection\"]) && $type.isString(config[\"projection\"])) {\r\n\t\t\tconfig[\"projection\"] = this.createClassInstance(config[\"projection\"]);\r\n\t\t}\r\n\r\n\t\t// Set up small map\r\n\t\tif ($type.hasValue(config.smallMap) && !$type.hasValue(config.smallMap.type)) {\r\n\t\t\tconfig.smallMap.type = \"SmallMap\";\r\n\t\t}\r\n\r\n\t\t// Set up zoom control\r\n\t\tif ($type.hasValue(config.zoomControl) && !$type.hasValue(config.zoomControl.type)) {\r\n\t\t\tconfig.zoomControl.type = \"ZoomControl\";\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tlet series = event.newValue;\r\n\t\tseries.scale = this.scaleRatio;\r\n\t\tseries.events.on(\"validated\", this.updateCenterGeoPoint, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t   * This function is used to sort element's JSON config properties, so that\r\n\t   * some properties that absolutely need to be processed last, can be put at\r\n\t   * the end.\r\n\t   *\r\n\t   * @ignore Exclude from docs\r\n\t   * @param a  Element 1\r\n\t   * @param b  Element 2\r\n\t   * @return Sorting number\r\n\t   */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"smallMap\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"smallMap\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"projection\" || field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Geo point of map center\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic get centerGeoPoint(): IGeoPoint {\r\n\t\treturn this._centerGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the map to its original position and zoom level.\r\n\t *\r\n\t * Use the only parameter to set number of milliseconds for the zoom\r\n\t * animation to play.\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t */\r\n\tpublic goHome(duration?: number) {\r\n\t\tlet homeGeoPoint = this.homeGeoPoint;\r\n\t\tif (!homeGeoPoint) {\r\n\t\t\thomeGeoPoint = this.centerGeoPoint;\r\n\t\t}\r\n\t\tif (homeGeoPoint) {\r\n\t\t\tthis.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t *\r\n\t * @ignore\r\n\t * @param   paper  Paper\r\n\t * @return         true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tif (this.svgContainer) {\r\n\t\t\tthis.svgContainer.hideOverflow = true;\r\n\t\t}\r\n\r\n\t\treturn super.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Background series will create polygons that will fill all the map area\r\n\t * with some color (or other fill).\r\n\t *\r\n\t * This might be useful with non-rectangular projections, like Orthographic,\r\n\t * Albers, etc.\r\n\t *\r\n\t * To change background color/opacity access polygon template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"backgroundSeries\": {\r\n\t *     \"mapPolygons\": {\r\n\t *       \"polygon\": {\r\n\t *         \"fill\": \"#fff\",\r\n\t *         \"fillOpacity\": 0.1\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic get backgroundSeries(): MapPolygonSeries {\r\n\t\tif (!this._backgroundSeries) {\r\n\t\t\tlet backgroundSeries = new MapPolygonSeries();\r\n\t\t\tbackgroundSeries.parent = this.seriesContainer;\r\n\t\t\tbackgroundSeries.chart = this;\r\n\r\n\t\t\tbackgroundSeries.hiddenInLegend = true;\r\n\t\t\tbackgroundSeries.mapPolygons.template.focusable = false;\r\n\t\t\tbackgroundSeries.addDisposer(new Disposer(() => {\r\n\t\t\t\tthis._backgroundSeries = undefined;\r\n\t\t\t}))\r\n\t\t\tthis._disposers.push(backgroundSeries);\r\n\r\n\t\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\t\tlet color = interfaceColors.getFor(\"background\");\r\n\r\n\t\t\tlet polygonTemplate = backgroundSeries.mapPolygons.template.polygon;\r\n\t\t\tpolygonTemplate.stroke = color;\r\n\t\t\tpolygonTemplate.fill = color;\r\n\t\t\tpolygonTemplate.fillOpacity = 0;\r\n\t\t\tpolygonTemplate.strokeOpacity = 0;\r\n\t\t\t//polygonTemplate.focusable = false;\r\n\r\n\t\t\tbackgroundSeries.mapPolygons.create();\r\n\r\n\t\t\tthis._backgroundSeries = backgroundSeries;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundSeries;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\t// setup other containers\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = false;\r\n\t\tthis.panSprite.interactions.isTouchProtected = false;\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"zoomEasing\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Has license?\r\n\t */\r\n\tpublic hasLicense(): boolean {\r\n\t\tif (options.commercialLicense) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!super.hasLicense()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0; i < options.licenses.length; i++) {\r\n\t\t\tif (options.licenses[i].match(/^MP.{5,}/i)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapChart\"] = MapChart;\r\n","/**\r\n * Map spline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { MapSplineSeriesDataItem, MapSplineSeries } from \"./MapSplineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapSpline]].\r\n */\r\nexport interface IMapSplineProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSpline]].\r\n */\r\nexport interface IMapSplineEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSpline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineAdapters extends IMapLineAdapters, IMapSplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a spline on the map.\r\n *\r\n * @see {@link IMapSplineEvents} for a list of available events\r\n * @see {@link IMapSplineAdapters} for a list of available Adapters\r\n */\r\nexport class MapSpline extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineEvents;\r\n\r\n\t/**\r\n\t * A visual element for the spline.\r\n\t */\r\n\tpublic line: Polyspline;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSpline\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyspline();\r\n\t\tthis.line.tensionX = 0.8;\r\n\t\tthis.line.tensionY = 0.8;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ShortestDistance = true is not supported by MapSpline, only MapLine does support it\r\n\t * @default false\r\n\t * @param value\r\n\t * @todo: review description\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSpline\"] = MapSpline;\r\n","/**\r\n * Map arched line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyarc } from \"../../core/elements/Polyarc\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { MapArcSeries } from \"./MapArcSeries\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapArc]].\r\n */\r\nexport interface IMapArcProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArc]].\r\n */\r\nexport interface IMapArcEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcAdapters extends IMapLineAdapters, IMapArcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw an arched line on the map.\r\n *\r\n * @see {@link IMapArcEvents} for a list of available events\r\n * @see {@link IMapArcAdapters} for a list of available Adapters\r\n */\r\nexport class MapArc extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyarc;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArc\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyarc();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * `shortestDistance = true` is not supported by `MapArc`.\r\n\t *\r\n\t * Only [[MapLine]] supports it.\r\n\t *\r\n\t * @default false\r\n\t * @param value\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArc\"] = MapArc;\r\n","/**\r\n * Map spline series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapSpline } from \"./MapSpline\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSplineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSplineSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapSpline]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSplineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineSeriesAdapters extends IMapLineSeriesAdapters, IMapSplineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map spline elements.\r\n *\r\n * @see {@link IMapSplineSeriesEvents} for a list of available Events\r\n * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSplineSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSplineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSplineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapSpline();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSplineSeries\"] = MapSplineSeries;\r\nregistry.registeredClasses[\"MapSplineSeriesDataItem\"] = MapSplineSeriesDataItem;\r\n","/**\r\n * Map arc series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapArc } from \"./MapArc\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapArcSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapArcSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapArc]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArcSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcSeriesAdapters extends IMapLineSeriesAdapters, IMapArcSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of arc elements. (curved lines)\r\n *\r\n * @see {@link IMapArcSeriesEvents} for a list of available Events\r\n * @see {@link IMapArcSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapArcSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapArcSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapArcSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapArcSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapArc();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArcSeries\"] = MapArcSeries;\r\nregistry.registeredClasses[\"MapArcSeriesDataItem\"] = MapArcSeriesDataItem;\r\n","/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomControl]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomControlAdapters extends IContainerAdapters, IZoomControlProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomControlProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomControlAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomControlEvents;\r\n\r\n\t/**\r\n\t * Zoom in button element.\r\n\t */\r\n\tpublic plusButton: Button;\r\n\r\n\t/**\r\n\t * Zoom out button element.\r\n\t */\r\n\tpublic minusButton: Button;\r\n\r\n\t/**\r\n\t * A zoom slider background element.\r\n\t */\r\n\tpublic slider: Container;\r\n\r\n\t/**\r\n\t * A zoom slider thumb element.\r\n\t */\r\n\tpublic thumb: Button;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A type to use for the background element for zoom control.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ZoomControl\";\r\n\r\n\t\tthis.align = \"right\";\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tthis.layout = \"vertical\";\r\n\t\tthis.padding(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet plusButton: Button = this.createChild(Button);\r\n\t\tplusButton.shouldClone = false;\r\n\t\tplusButton.label.text = \"+\";\r\n\t\t//plusButton.fontFamily = \"Verdana\";\r\n\t\tthis.plusButton = plusButton;\r\n\r\n\t\tlet slider: Container = this.createChild(Container);\r\n\t\tslider.shouldClone = false;\r\n\t\tslider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tslider.background.fillOpacity = 0.05;\r\n\t\tslider.background.events.on(\"hit\", this.handleBackgroundClick, this, false);\r\n\t\tslider.events.on(\"sizechanged\", this.updateThumbSize, this, false);\r\n\t\tthis.slider = slider;\r\n\r\n\t\tlet thumb: Button = slider.createChild(Button);\r\n\t\tthumb.shouldClone = false;\r\n\t\tthumb.padding(0, 0, 0, 0);\r\n\t\tthumb.draggable = true;\r\n\t\tthumb.events.on(\"drag\", this.handleThumbDrag, this, false);\r\n\t\tthis.thumb = thumb;\r\n\r\n\t\tlet minusButton: Button = this.createChild(Button);\r\n\t\tminusButton.shouldClone = false;\r\n\t\tminusButton.label.text = \"-\";\r\n\t\t//minusButton.fontFamily = \"Verdana\";\r\n\t\tthis.minusButton = minusButton;\r\n\r\n\t\t// Set roles\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\r\n\t\t// Set reader text\r\n\t\tthis.thumb.readerTitle = this.language.translate(\"Use arrow keys to zoom in and out\");\r\n\t\tthis.minusButton.readerTitle = this.language.translate(\"Press ENTER to zoom in\");\r\n\t\tthis.plusButton.readerTitle = this.language.translate(\"Press ENTER to zoom out\");\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property == \"layout\") {\r\n\t\t\t\tthis.fixLayout();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected fixLayout() {\r\n\r\n\t\tlet plusButton = this.plusButton;\r\n\t\tlet minusButton = this.minusButton;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tlet slider = this.slider;\r\n\r\n\t\tplusButton.x = undefined;\r\n\t\tplusButton.y = undefined;\r\n\r\n\t\tminusButton.x = undefined;\r\n\t\tminusButton.y = undefined;\r\n\r\n\t\tthumb.x = undefined;\r\n\t\tthumb.y = undefined;\r\n\r\n\t\tslider.x = undefined;\r\n\t\tslider.y = undefined;\r\n\r\n\t\tplusButton.padding(6, 10, 6, 10);\r\n\t\tminusButton.padding(6, 10, 6, 10);\r\n\r\n\t\tminusButton.label.align = \"center\";\r\n\t\tminusButton.label.valign = \"middle\";\r\n\r\n\t\tplusButton.label.align = \"center\";\r\n\t\tplusButton.label.valign = \"middle\";\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tthis.width = 40;\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tminusButton.width = percent(100);\r\n\t\t\tminusButton.height = undefined;\r\n\r\n\t\t\tthumb.width = percent(100);\r\n\t\t\tthumb.height = undefined;\r\n\r\n\t\t\tplusButton.width = percent(100);\r\n\t\t\tplusButton.height = undefined;\r\n\r\n\t\t\tslider.width = percent(100);\r\n\t\t\tminusButton.marginTop = 1;\r\n\t\t\tplusButton.marginBottom = 2;\r\n\r\n\t\t\tslider.height = 0;\r\n\r\n\t\t\tminusButton.toFront();\r\n\t\t\tplusButton.toBack();\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.maxX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\r\n\r\n\t\t}\r\n\t\telse if (this.layout == \"horizontal\") {\r\n\t\t\tthis.height = 40;\r\n\t\t\tthis.width = undefined;\r\n\r\n\t\t\tminusButton.height = percent(100);\r\n\t\t\tminusButton.width = undefined;\r\n\r\n\t\t\tplusButton.height = percent(100);\r\n\t\t\tplusButton.width = undefined;\r\n\r\n\t\t\tthumb.height = percent(100);\r\n\t\t\tthumb.width = undefined;\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\t\t\tthumb.maxY = 0;\r\n\r\n\t\t\tslider.height = percent(100);\r\n\t\t\tslider.width = 0;\r\n\r\n\t\t\tminusButton.toBack();\r\n\t\t\tplusButton.toFront();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles zoom operation after clicking on the slider background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBackgroundClick(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\tlet sprite: Sprite = event.target;\r\n\t\tlet y: number = event.spritePoint.y;\r\n\t\tlet chart: MapChart = this.chart;\r\n\r\n\t\tlet maxPower: number = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n\t\tlet minPower: number = Math.log(chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tlet power: number = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n\t\tlet zoomLevel: number = Math.pow(2, power);\r\n\t\tchart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n\t}\r\n\r\n\t/**\r\n\t * A main chart/map that this zoom control is for.\r\n\t *\r\n\t * @param chart  Map/chart\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\tchart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false),\r\n\t\t\tchart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false),\r\n\r\n\t\t\tthis.minusButton.events.on(\"hit\", () => { chart.zoomOut(chart.zoomGeoPoint) }, chart, false),\r\n\r\n\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\t\t// ENTER is now handled globally\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"plus\")) {\r\n\t\t\t\t\t\tchart.zoomIn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (keyboard.isKey(ev.event, \"minus\")) {\r\n\t\t\t\t\t\tchart.zoomOut();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, chart),\r\n\t\t\tthis.plusButton.events.on(\"hit\", () => { chart.zoomIn(chart.zoomGeoPoint) }, chart, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Map/chart\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slider's thumb size based on the available zoom space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumbSize(): void {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet slider: Container = this.slider;\r\n\t\t\tlet thumb: Button = this.thumb;\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n\r\n\t\t\t\tthumb.height = slider.pixelHeight / this.stepCount;\r\n\t\t\t\tthumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n\r\n\t\t\t\tif (thumb.pixelHeight <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n\t\t\t\tthumb.width = slider.pixelWidth / this.stepCount;\r\n\t\t\t\tthumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n\r\n\t\t\t\tif (thumb.pixelWidth <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates thumb according to current zoom position from map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumb(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\r\n\t\tif (!thumb.isDown) {\r\n\t\t\tlet step: number = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\r\n\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.x = slider.pixelWidth * step / this.stepCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the actual map when slider position changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbDrag(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\t\tlet step: number;\r\n\r\n\t\tlet minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tstep = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstep = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n\t\t}\r\n\t\tstep = minStep + step;\r\n\r\n\t\tlet zoomLevel: number = Math.pow(2, step);\r\n\t\tchart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the step countfor the slider grid according to map's min and max\r\n\t * zoom level settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Step count\r\n\t */\r\n\tpublic get stepCount(): number {\r\n\t\treturn Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for slider control.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Mercator projection.\r\n */\r\nexport class Mercator extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoMercator();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Mercator\"] = Mercator;\r\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math.js\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n","/**\n * Functionality for Miller projection\n *\n * The function(s) below are from D3.js library (https://d3js.org/)\n *\n * ```\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from this\n *    software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ```\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Projection } from \"./Projection\";\nimport { registry } from \"../../../core/Registry\";\n// @ts-ignore\nimport * as d3geoprojection from \"d3-geo-projection\";\n\n\n/**\n * Miller projection.\n */\nexport class Miller extends Projection {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.d3Projection = d3geoprojection.geoMiller();\n\t}\n}\n\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\nregistry.registeredClasses[\"Miller\"] = Miller;\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n","/**\r\n * Functionality for Eckert6 projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\n// @ts-ignore\r\nimport * as d3geoprojection from \"d3-geo-projection\";\r\n\r\n/**\r\n * Eckert6 projection.\r\n */\r\nexport class Eckert6 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geoprojection.geoEckert6();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Eckert6\"] = Eckert6;\r\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Orthographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoOrthographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Orthographic\"] = Orthographic;\r\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Stereographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoStereographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Stereographic\"] = Stereographic;\r\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Albers extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbers();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Albers\"] = Albers;\r\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AlbersUsa extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbersUsa();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AlbersUsa\"] = AlbersUsa;\r\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class NaturalEarth1 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoNaturalEarth1();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NaturalEarth1\"] = NaturalEarth1;\r\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AzimuthalEqualArea extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAzimuthalEqualArea();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AzimuthalEqualArea\"] = AzimuthalEqualArea;\r\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class EqualEarth extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoEqualEarth();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"EqualEarth\"] = EqualEarth;\r\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n"],"names":["_super","_this","className","applyTheme","__extends","Object","LegendDataItem","this","_label","label_1","component","labels","create","addSprite","_disposers","push","parent","itemContainer","Disposer","$type","removeValue","properties","color","value","setProperty","_valueLabel","valueLabel_1","valueLabels","_itemContainer","component_1","itemContainer_1","itemContainers","togglable","events","on","ev","toggleDataItem","target","dataItem","undefined","focusable","focusedItem","dataContext","uidAttr","readerControls","readerLabelledBy","sprite","DataItem","Sprite","isDisposed","visibilitychanged","readerChecked","visible","disableType","isActive","enableType","addDisposer","dataItems","remove","_marker","marker_1","markers","createMarker","layout","setPropertyValue","Container","applyOnClones","padding","margin","clickable","role","cursorOverStyle","MouseCursorStyle","background","fillOpacity","ListTemplate","ListDisposer","template","getInteraction","body","keyboard","event","isEnabled","dispatchImmediately","interfaceColors","InterfaceColorSet","marker","width","height","interactionsEnabled","setStateOnChildren","strokeOpacity","propertyFields","fill","valign","disabledColor","getFor","activeState","newValue","states","stroke","rectangle","createChild","RoundedRectangle","percent","label","Label","text","truncate","fullWords","valueLabel","align","textAlign","position","handleScrollbar","Legend","applyInternalDefaults","readerTitle","language","translate","scrollbar","start","end","validateDataElements","validateDataElement","container","$utils","legendDataItem","tempMaxWidth","maxWidth","Percent","legendSettings","createLegendMarker","useDefaultMarker","childrenCreated","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","setState","getPropertyValue","maxLabelWidth","each","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","Math","min","afterDraw","scrollable","measuredHeight","x","pixelWidth","contentHeight","thumb","paddingRight","handleThumbPosition","updateMasks","contentAlign","maxColumns","invalidate","Scrollbar","isMeasured","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","dispose","shift","y","ds","delta","$math","dy","pixelY","maskRectangle","item","isHiding","isHidden","colorOrig","appeared","hidden","show","svgContainer","readerAlert","locale","hide","name","Component","registry","defaultRules","relevant","ResponsiveBreakpoints","state","stateId","disabled","MutableValueDisposer","List","breakSize","marginRight","marginTop","marginBottom","fillShape","WavedLine","zIndex","_fillShape","startLine","_startLine","endLine","_endLine","_axis","AxisBreak","addBreakSprite","get","axis","set","renderer","gridContainer","createBreakSprites","breakTemplate","axisBreaks","copyFrom","invalidateSeries","positionToPoint","startPosition","endPosition","draw","updateBreakElement","AxisItemLocation","AxisDataItem","_grid","grid_1","isRange","axisRanges","grid","clone","shouldClone","$array","sprites","_tick","component_2","tick_1","tick","ticks","component_3","virtualParent","_axisFill","component_4","axisFill_1","axisFill","isTemplate","axisFills","_text","_mask","_contents","contents","mask","createFill","_axisBreak","axisBreak","appendDataItem","prop","hasProperty","source","bullet","minPosition","maxPosition","noChangeValues","setVisibility","_bullet","constructor","Axis","Error","hideTooltipWhileZooming","minWidth","minHeight","toggleZoomOutButton","zoomable","title","_dataItemsIterator","$iter","createNewItems","tooltip","Tooltip","pointerLength","fitPointerToBounds","filters","clear","cornerRadius","strokeWidth","readerHidden","series","preventShow","index","round","opacity","invalidateLayout","iterator","_axisItemCount","ghostLabel","updateLabelElement","gridCount","axisLength","minGridDistance","_gridCount","clearCache","axisFullLength","validateLayout","updateGridCount","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","above","bulletsContainer","updateGridContainer","axisRange","_axisBreaks","breakContainer","moveValue","MultiDisposer","createMask","_renderer","chart","initRenderer","ghostLabel_1","positionToAngle","point","pointToPosition","positionToCoordinate","getPositionRangePath","angle","duration","hideTooltip","_tooltipPosition","local","_tooltip","length","toAxisPosition","tooltipContainer","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","tooltipLocation2","startPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","globalPoint","line","getTooltipText","delayedPointTo","cursorTooltipEnabled","inversed","pointerOrientation","boundingRectangle","fixDoc","setBounds","location","axisLocation","_axisRanges","createDataItem","processAxisRange","SortedListTemplate","createAxisBreak","a","b","$number","adjustedStartValue","processBreak","_series","axisLetter","dataItemsIterator","findNearest","key","stackKey","range","max","difference","startValue","endValue","adjustedEndValue","intersection","update","firstAxisBreak","first","previousEndValue_1","_chart","reset","config","i","len","map","hasKey","createSeriesRange","getKey","processConfig","configOrder","changed","setDisabled","_title","element","paper","add","pixelPerfect","AxisLine","AxisFill","invalidateDataItems","fillPath","path","measure","attr","Grid","AxisLabel","nonScalingStroke","Tick","AxisTick","inside","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","inited","invalidateAxisItems","baseGrid","disposers","AxisRenderer","setAxis","bind","moveTo","position2","pixelHeight","coordinate","coordinate2","positionItem","toggleVisibility","updatedStart","updatedEnd","_axisFills","createGrid","_ticks","createTick","_labels","createLabel","AxisBullet","opposite","verticalCenter","AxisRendererY","inversedPosition","relativePositionSprite","innerHeight","processRenderer","rotation","toBack","toFront","bigNum","bbx","bbw","bbh","pixelPaddingTop","pixelPaddingBottom","coordinateToPosition","y1","y2","h","abs","w","getWidth","$path","tickLength","pixelX","basePoint","horizontalCenter","deltaX","x1","x2","wavedRectangle","WavedRectangle","setWavedSides","ValueAxisBreak","valueToPosition","values","ValueAxisDataItem","setValue","axisFieldName","Number","MAX_VALUE","keepSelection","includeRangesInMinMax","ValueAxis","step","_start","_end","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","calculateTotals","getIndex","startIndex","endIndex","total","sum","this_1","excludeFromTotal","dataItem_1","$object","workingValue","dataItem_2","setCalculatedValue","getMinMax","fixAxisBreaks","calculateZoom","validateAxisElements","validateAxisRanges","validateBreaks","hideUnusedDataItems","positionToValue","differece","adjustDifference","minMaxStep","adjustMinMax","stepDecimalPlaces","_stepDecimalPlaces","syncWithAxis","calculated","getCache","_step","_dsc","fixSmallStep","value_1","minZoomed","logarithmic","log","LOG10E","pow","floor","maxZoomed","resetIterators","dataItemsIterator_1","precisionChanged","_prevStepDecimalPlaces","isInBreak","find","formatLabel","currentText","oldValue","stepPower","decCount","renderer_1","breakValue_1","adjustedMin","adjustedMax","adjustedStep","itemIndex","fillEndPosition","updateTickElement","updateGridElement","updateFillElement","fillRule","updateBullet","adjustLabelPrecision","numberFormatter","format","baseValue","_baseValue","_adapterO","apply","valueToPoint","min_1","max_1","_difference","treatZeroAs","invalidateLabels","difference_1","value_2","breakStartPosition","breakEndPosition","breakStartValue","breakEndValue","E","animate","property","from","to","rangeChangeDuration","rangeChangeEasing","POSITIVE_INFINITY","NEGATIVE_INFINITY","ignoreMinMax","seriesMin","seriesMax","minValue","maxValue","raiseCriticalError","_minReal","_maxReal","dif","fixMin","fixMax","_deltaMinMax","exponent","power","extraMin","extraMax","strict","strictMinMax","animation","_minMaxAnimation","_extremesChanged","isFinished","_finalMax","_finalMin","animateMinMax","validateDataItems","handleSelectionExtremesChange","strictMode","initialMin","initialMax","extra","Infinity","ceil","stepDivisor","maxPrecision","minCount","maxCount","registerSeries","handleExtremesChange","selectionMin","selectionMax","allHidden","outOfRange","seriesSelectionMin","seriesSelectionMax","minMaxStep2","syncAxes","declination","setCache","zoom","getPositionX","getWorkingValue","stack","getValue","getPositionY","extraTooltipPrecision","valueStr","skipRangeEvent","instantly","axisBreakDif","axisBreakGridCount","breakMinMaxStep","showTooltipAtPosition","count","currentCount","synced","c","diff","omin","omax","ostep","checkSync","processingErrors","xAxis","AxisRendererX","bby","deltaY","maxHeight","pixelPaddingRight","pixelPaddingLeft","getHeight","pixelMarginTop","pixelMarginBottom","innerWidth","markerContainer","markerCount","HeatLegend","minValue_1","heatRules","heatRule","maxValue_1","valueAxis","reverseOrder","minColor","maxColor","toColor","getMinFromRules","getMaxFromRules","seriesFill","Color","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","gradient","LinearGradient","addColor","strokeGradient","$colors","rgb","color_1","opacity_1","setColorProperty","_valueAxis","dataField","dataFieldDefined","err","updateMinMax","low","high","seriesId_1","disposer_1","cs","icon","autoHideDelay","_autoHideTimeout","setTimeout","Grip","Button","Chart","titles","chartAndLegendContainer","chartContainer","showOnInit","_legend","processTitle","updateReaderTitleReferences","defaultState","transitionDuration","fixLayout","legend","titleIds_1","uid","setSVGAttribute","join","removeSVGAttribute","setLegend","feedLegend","type","removeChildren","_dragGrip","grip_1","touch","paddingLeft","paddingTop","paddingBottom","tooltipX","tooltipY","copyToLegendMarker","Bullet","SeriesDataItem","_bullets","Dictionary","DictionaryDisposer","bullets","LegendSettings","Series","minBulletDistance","mainContainer","_shouldBeReady","hiddenState","transitionEasing","$ease","options","setClassName","once","itemsFocusable","eachBullet","processValues","getActualWorkingValue","rangeChangeUpdate","working","simplifiedProcessing","count_1","sum_1","absoluteSum_1","low_1","high_1","open_1","close_1","previous_1","first_1","absoluteFirst_1","startIndex_1","getFirstValue","getAbsoluteFirstValue","prevValue","calculatePercent","dataItem_3","ksum","usePercentHack","zeroItem_1","dataItem_4","children","_showBullets","updateTooltipBounds","topParent","rect","bulletTemplate","shouldCreateBullet","disabledField","currentDataItem","setKey","readerText_1","itemReaderText","xField","yField","isDynamic","deepInvalidate","populateString","hoverable","itemWidth","itemHeight","positionBullet","dataRangeInvalid","invalidateProcessedData","_ignoreMinMax","rangesContainer","xPosition","yPosition","processBullet","removeBullet","invalidateRawData","readerText","_itemReaderText","tooltipText","tooltipHTML","_itemReaderTextChanged","skipFocusThreshold","_legendDataItem","notRange","itemLabelText","labelText","e","modal","content","adapter","message","closable","open","console","applyFilters","filter","_heatRules","dataField_1","seriesDataItem_1","property_1","foundSprite","clonedFrom","anySprite","child","anyChild","foundSprite_1","ruleTarget","propertyField","rule","parts","split","listitem","maybeIndex","match","maybeColorOrPercent","ChartDataItem","colors","ColorSet","_usesData","seriesContainer","SerialChart","patterns","createSeries","handleSeriesAdded","handleSeriesRemoved","dataUsers","dataUser","autoDispose","data","di","_dataUsers","handleSeriesAdded2","handleLegendSeriesAdded","hiddenInLegend","addData","dataInvalid","reinit","_data","legendData_1","dataFields","appear","Adder","_partials","Float64Array","_n","p","j","hi","lo","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","hypot","sin","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","feature","merged","deltaMax","sort","NaN","MapSeriesDataItem","_east","_west","_south","_north","getFeature","bounds","d3geo","west","south","north","east","ignoreBounds","showInViewport","MapSeries","includes","excludes","id","indexOf","invalidateData","processIncExc","updateExtremes","mapObject","_geodata","geodata","reverseGeodata","processReverseGeodata","madeFromGeoData","splice","disposeData","_dataSources","getDataSource","removeDispose","loadData","setDataSourceEvents","_mapObjects","dispatch","_northDefined","_southDefined","_westDefined","_eastDefined","name_1","window","JSON","parse","field","asIs","MapObject","res","showTooltip","showTooltipOn","has","handleTooltipMove","setDataItem","applyAccessibility","MapImage","latitude","geoPoint","longitude","projection","d3Projection","d3Path","validatePosition","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","t","ring","center","constant","precision","circle","arguments","r","_","multiPolygonToGeo","multiPolygon","polygon","surface","hole","geoArea","multiPointToGeo","multiLineToGeo","multiLine","points","pointToGeo","multiGeoToPoint","geoPoints","geoToPoint","multiGeoLineToMultiLine","multiGeoLine","segment","multiGeoPolygonToMultipolygon","multiGeoPolygon","geoPolygon","getCircle","getBackground","stepLong","stepLat","ln","ll","lt","MapPolygon","$mapUtils","pathGenerator","calculateVisualCenter","biggestArea","biggestPolygon","area","$polylabel","_visualLongitude","_visualLatitude","convert","visualLongitude","visualLatitude","MapPolygonSeriesDataItem","_mapPolygon","mapPolygon_1","mapPolygons","_polygon","_multiPolygon","_geoPolygon","_multiGeoPolygon","MapPolygonSeries","useGeodata","geoJSON","id_1","geodataNames","checkInclude","include","exclude","dataObject","validateData","mapPolygon","sortPolygonsBy","sortBy_1","reversed_1","sortPolygonsReversed","valA","valB","dirA","dirB","boxArea","_mapPolygons","polygonTemplate","handleObjectAdded","_dataItem","lines","m","rejoin","pop","concat","result","Intersection","other","entry","o","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","p1","pointEqual","link","current","isSubject","array","winding","point0","sinPhi1","cosPhi1","point1","absDelta","arc","phiArc","_regeneratorRuntime","exports","Op","prototype","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","allowArrayLike","it","Array","isArray","unsupportedIterableToArray","F","s","_e","f","normalCompletion","didErr","_e2","flatten","arrays","merge","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","point2","clipMax","clipMin","clipRectangle","x0","y0","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","ax","ay","dx","methods","transformer","TransformStream","fit","fitBounds","clipExtent","scale","geoStream","fitExtent","extent","fitSize","size","fitWidth","fitHeight","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","dx2","dy2","dz","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","transformRotate","clipAngle","clipCircle","reflectX","reflectY","equirectangularRaw","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","projectionStream","contextStream","pathArea","pathMeasure","pathBounds","pathCentroid","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","distance","_circle","lengthLineEnd","cosDelta","Projection","_d3Projection","_d3Path","invalidateProjection","deltaLongitude","deltaLatitude","pointA","pointB","intermediatePoint","positionToGeoPoint","intermediatePointA","intermediatePointB","pa","pb","totalDistance","multiDistance","currentDistance","positionA","positionB","positionAB","percentHeight","percentWidth","moveToPosition","updateMapSize","Rectangle","SmallMap","contains","newSeries","rectPoint","spritePoint","seriesPointToGeo","zoomToGeoPoint","zoomLevel","updateRectangle","scaleRatio","bbox","group","node","getBBox","normalizePoint","wrapAngleTo180","latitude180","normalizeMultiline","multiline","adjustRotation","MapLineObject","mapLine","shortestDistance","MapImageSeriesDataItem","_mapImage","mapImage_1","mapImages","_geoPoint","multiPoint","multiGeoPoint","MapImageSeries","_parseDataFrom","mapImage","_mapImages","createLine","MapLine","Polyline","$geo","images","handleImagesToConnect","isReady","imagesToConnect","image","img","getImageById","_imageListeners","disposer","convertedPoints","convertedSegmentPoints","slen","_arrow","lineObjects","handleGlobalScale","_lineObjects","handleLineObjectAdded","mapLineObject","arrow","triangle","Triangle","MapLineSeriesDataItem","_mapLine","mapLine_1","mapLines","_multiLine","_multiGeoLine","_geoLine","geoLine","MapLineSeries","_mapLines","lineTemplate","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","Graticule","longitudeStep","latitudeStep","singleSprite","GraticuleSeries","GraticuleSeriesDataItem","lineStrings","lineString","SerialChartDataItem","maxPanOut","homeZoomLevel","zoomStep","centerMapOnZoomOut","backgroundSeries","handleAllInited","inert","resizable","handleMapTransform","handleDoubleHit","handleDrag","dragWhileResize","minZoomLevel","maxZoomLevel","previousWidth","previousHeight","updateCenterGeoPoint","_mapAnimation","allInited_1","updateScaleRatio","_zoomGeoPointReal","chartContainerBg","dragStart","interactions","downPointers","dragStop","handleMapDown","inertia","inertias","hasFocused","_zoomControl","isFocused","pan","mouseWheelBehavior","interaction","handlePanDown","handlePanUp","panSprite","Circle","handlePanMove","panBehavior","MapChart","svgPoint","pointer","htmlContainer","_downPointOrig","_downDeltaLongitude","_downDeltaLatitude","isResized","areTransformed","dln","dlt","dlg","downGeoLocal","geoLocal","goHome","seriesPoint","maxLeft","maxRight","maxTop","maxBottom","getFeatures","seriesMaxLeft","seriesMaxRight","seriesMaxTop","seriesMaxBottom","seriesWidth","seriesHeight","_centerGeoPoint","ww","hh","minX","maxX","minY","maxY","zoomGeoPoint","cssScale","svgPointToGeo","zoomIn","mouseOptions","sensitivity","zoomOut","wheelable","draggable","_backgroundSeries","foundGraticule","deltaLong","deltaLat","initialScale","invalidateDataUsers","_fitWidth","_fitHeight","hScale","vScale","geoPointToSeries","hasData_1","geoPointToSVG","mapPoint","zoomDuration","zoomEasing","polygonPoint","level","splitLongitude","newLong","_prevZoomLevel","_prevZoomGeoPoint","_smallMap","smallMap","zoomControl","plusButton","exportable","minusButton","rotateMap","updateZoomGeoPoint","createClassInstance","homeGeoPoint","centerGeoPoint","hideOverflow","setPaper","setTapToActivate","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","hasLicense","MapSpline","Polyspline","tensionX","tensionY","MapArc","Polyarc","MapSplineSeries","MapSplineSeriesDataItem","MapArcSeries","MapArcSeriesDataItem","slider","handleBackgroundClick","updateThumbSize","handleThumbDrag","readerLive","ZoomControl","maxPower","LN2","minPower","updateThumb","stepCount","isDown","mercatorRaw","mercatorProjection","reclip","Mercator","SQRT1_2","millerRaw","eckert6Raw","Miller","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","orthographicRaw","Eckert6","stereographicRaw","Orthographic","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","Stereographic","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","streams","multiplex","Albers","naturalEarth1Raw","phi4","AlbersUsa","NaturalEarth1","azimuthalEqualAreaRaw","cxcy","AzimuthalEqualArea","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","W0","W1","z0","EqualEarth","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","azimuthalEquidistantRaw","tany","conicConformalRaw","fy","conicEquidistantRaw","g","gy","nx","gnomonicRaw","sa","tx","ty","kx","ky","transverseMercatorRaw","Queue","require","polylabel","debug","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","TinyQueue","compare","defaultCompare","_down","_up","top","bottom","pos","halfLength","left","best","right"],"sourceRoot":""}